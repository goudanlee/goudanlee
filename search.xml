<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[机器学习常见算法之朴素贝叶斯]]></title>
      <url>/2017/06/13/NavieBayes/</url>
      <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>最近学习了机器学习的常用算法，不得不说在sklearn的封装下，使用这些算法是非常方便的，但是，如果如果对算法的原理不够了解，那么在选择算法或者调参过程中就会非常迷茫，这里对学到的算法进行一些记录，确保自己能够理解其实现原理，同时作为自己的学习笔记方便后续回顾。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>在了解各种分类算法之前，必须先搞清楚一个问题，什么是分类？</p>
<p>分类问题，其实谁都不会陌生，说我们每个人每天都在执行分类操作一点都不夸张，只是我们没有意识到罢了。例如，当你看到一个陌生人，你的脑子下意识判断TA是男是女；你可能经常会走在路上对身旁的朋友说“这个人一看就很有钱、那边有个非主流”之类的话，其实这就是一种分类操作。</p>
<p>例如，医生对病人进行诊断就是一个典型的分类过程，任何一个医生都无法直接看到病人的病情，只能观察病人表现出的症状和各种化验检测数据来推断病情，这时医生就好比一个分类器，而这个医生诊断的准确率，与他当初受到的教育方式（构造方法）、病人的症状是否突出（待分类数据的特性）以及医生的经验多少（训练样本数量）都有密切关系。</p>
<p>了解了什么是分类之后，我们再来看下朴素贝叶斯分类器。</p>
<h3 id="朴素贝叶斯分类器"><a href="#朴素贝叶斯分类器" class="headerlink" title="朴素贝叶斯分类器"></a>朴素贝叶斯分类器</h3><p>朴素贝叶斯分类是一种十分简单的分类算法，叫它朴素贝叶斯分类是因为这种方法的思想真的很朴素，朴素贝叶斯的思想基础是这样的：对于给出的待分类项，求解在此项出现的条件下各个类别出现的概率，哪个最大，就认为此待分类项属于哪个类别。这里我们举一个例子进行说明：</p>
<p>假设有一所学校，学生中60%是男生和40%是女生。女生穿裤子与裙子的数量相同；所有男生穿裤子。现在有一个观察者，随机从远处看到一名学生，因为很远，观察者只能看到该学生穿的是裤子，但不能从长相发型等其他方面推断被观察者的性别。那么该学生是女生的概率是多少？</p>
<p>用事件 G 表示观察到的学生是女生，用事件 T 表示观察到的学生穿裤子。于是，现在要计算的是条件概率 P(G|T) ，我们需要知道：</p>
<ul>
<li><p>P(G) 表示一个学生是女生的概率。由于观察者随机看到一名学生，意味着所有的学生都可能被看到，女生在全体学生中的占比是 40% ，所以概率是 P(G)=0.4 。注意，这是在没有任何其他信息下的概率。这也就是先验概率。后面我们还会详细讨论。</p>
</li>
<li><p>P(B) 是学生不是女生的概率，也就是学生是男生的概率，这同样也是指在没有其他任何信息的情况下，学生是男生的先验概率。 B 事件是 G 事件的互补的事件，于是易得 P(B)=0.6 。</p>
</li>
<li><p>P(T|G) 是在女生中穿裤子的概率，根据题目描述，女生穿裙子和穿裤子各占一半，所以 P(T|G)=0.5 。这也就是在给定 G 的条件下，T 事件的概率。</p>
</li>
<li><p>P(T|B) 是在男生中穿裤子的概率，这个值是1。</p>
</li>
<li><p>P(T) 是学生穿裤子的概率，即任意选一个学生，在没有其他信息的情况下，该名学生穿裤子的概率。根据全概率公式 $$ P(T)=\sum _{i=1}^nP(T|A_i)P(A_i)=P(T|G)P(G)+P(T|B)P(B) $$<br>计算得到 $$ P(T)=0.5×0.4+1×0.6=0.8 $$</p>
</li>
</ul>
<p>根据<a href="https://zh.wikipedia.org/wiki/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86" target="_blank" rel="external">贝叶斯定理</a></p>
<math xmlns="http://www.w3.org/1998/Math/MathML" display="block">
  <mi>P</mi>
  <mo stretchy="false">(</mo>
  <msub>
    <mi>A</mi>
    <mi>i</mi>
  </msub>
  <mrow class="MJX-TeXAtom-ORD">
    <mo stretchy="false">|</mo>
  </mrow>
  <mi>T</mi>
  <mo stretchy="false">)</mo>
  <mo>=</mo>
  <mfrac>
    <mrow>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <mi>T</mi>
      <mrow class="MJX-TeXAtom-ORD">
        <mo stretchy="false">|</mo>
      </mrow>
      <msub>
        <mi>A</mi>
        <mi>i</mi>
      </msub>
      <mo stretchy="false">)</mo>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <msub>
        <mi>A</mi>
        <mi>i</mi>
      </msub>
      <mo stretchy="false">)</mo>
    </mrow>
    <mrow>
      <munderover>
        <mo>&#x2211;<!-- ∑ --></mo>
        <mrow class="MJX-TeXAtom-ORD">
          <mi>i</mi>
          <mo>=</mo>
          <mn>1</mn>
        </mrow>
        <mi>n</mi>
      </munderover>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <mi>T</mi>
      <mrow class="MJX-TeXAtom-ORD">
        <mo stretchy="false">|</mo>
      </mrow>
      <msub>
        <mi>A</mi>
        <mi>i</mi>
      </msub>
      <mo stretchy="false">)</mo>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <msub>
        <mi>A</mi>
        <mi>i</mi>
      </msub>
      <mo stretchy="false">)</mo>
    </mrow>
  </mfrac>
  <mo>=</mo>
  <mfrac>
    <mrow>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <mi>T</mi>
      <mrow class="MJX-TeXAtom-ORD">
        <mo stretchy="false">|</mo>
      </mrow>
      <msub>
        <mi>A</mi>
        <mi>i</mi>
      </msub>
      <mo stretchy="false">)</mo>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <msub>
        <mi>A</mi>
        <mi>i</mi>
      </msub>
      <mo stretchy="false">)</mo>
    </mrow>
    <mrow>
      <mi>P</mi>
      <mo stretchy="false">(</mo>
      <mi>T</mi>
      <mo stretchy="false">)</mo>
    </mrow>
  </mfrac>
</math>

<p>基于以上所有信息，如果观察到一个穿裤子的学生，并且是女生的概率是</p>
<p>$$P(G|T)=\frac{P(T|G)P(G)}{P(T)}=0.5×0.4\div0.8=0.25.$$</p>
<h3 id="朴素贝叶斯分类器流程"><a href="#朴素贝叶斯分类器流程" class="headerlink" title="朴素贝叶斯分类器流程"></a>朴素贝叶斯分类器流程</h3><p>根据上述分析，朴素贝叶斯分类的流程可以由下图表示:
<img src="/2017/06/13/NavieBayes/1.png" alt="Navie Bayes" title="Navie Bayes"></p>
<p>可以看到，整个朴素贝叶斯分类分为三个阶段：</p>
<p>第一阶段——准备工作阶段，这个阶段的任务是为朴素贝叶斯分类做必要的准备，主要工作是根据具体情况确定特征属性，并对每个特征属性进行适当划分，然后由人工对一部分待分类项进行分类，形成训练样本集合。这一阶段的输入是所有待分类数据，输出是特征属性和训练样本。这一阶段是整个朴素贝叶斯分类中唯一需要人工完成的阶段，其质量对整个过程将有重要影响，分类器的质量很大程度上由特征属性、特征属性划分及训练样本质量决定。</p>
<p>第二阶段——分类器训练阶段，这个阶段的任务就是生成分类器，主要工作是计算每个类别在训练样本中的出现频率及每个特征属性划分对每个类别的条件概率估计，并将结果记录。其输入是特征属性和训练样本，输出是分类器。这一阶段是机械性阶段，根据前面讨论的公式可以由程序自动计算完成。</p>
<p>第三阶段——应用阶段。这个阶段的任务是使用分类器对待分类项进行分类，其输入是分类器和待分类项，输出是待分类项与类别的映射关系。这一阶段也是机械性阶段，由程序完成。</p>
<h3 id="先验概率（Prior-probability）"><a href="#先验概率（Prior-probability）" class="headerlink" title="先验概率（Prior probability）"></a>先验概率（Prior probability）</h3><p>在贝叶斯统计中，先验概率分布，即关于某个变量 X 的概率分布，是在获得某些信息或者依据前，对 X 之不确定性所进行的猜测。这是对不确定性（而不是随机性）赋予一个量化的数值的表征，这个量化数值可以是一个参数，或者是一个潜在的变量。</p>
<p>先验概率仅仅依赖于主观上的经验估计，也就是事先根据已有的知识的推断。例如， X 可以是投一枚硬币，正面朝上的概率，显然在我们未获得任何其他信息的条件下，我们会认为 P(X)=0.5；再比如上面例子中的，P(G)=0.4。</p>
<p>在应用贝叶斯理论时，通常将先验概率乘以似然函数（Likelihood Function）再归一化后，得到后验概率分布，后验概率分布即在已知给定的数据后，对不确定性的条件分布。</p>
<h3 id="似然函数（Likelihood-function）"><a href="#似然函数（Likelihood-function）" class="headerlink" title="似然函数（Likelihood function）"></a>似然函数（Likelihood function）</h3><p>似然函数（也称作似然），是一个关于统计模型参数的函数。也就是这个函数中自变量是统计模型的参数。对于观测结果 x ，在参数集合 θ 上的似然，就是在给定这些参数值的基础上，观察到的结果的概率 (θ)=P(x|θ) 。也就是说，似然是关于参数的函数，在参数给定的条件下，对于观察到的 x 的值的条件分布。</p>
<p>似然函数在统计推断中发挥重要的作用，因为它是关于统计参数的函数，所以可以用来对一组统计参数进行评估，也就是说在一组统计方案的参数中，可以用似然函数做筛选。</p>
<p>你会发现，“似然”也是一种“概率”。但不同点就在于，观察值 x 与参数 θ 的不同的角色。概率是用于描述一个函数，这个函数是在给定参数值的情况下的关于观察值的函数。例如，已知一个硬币是均匀的（在抛落中，正反面的概率相等），那连续10次正面朝上的概率是多少？这是个概率。</p>
<p>而似然是用于在给定一个观察值时，关于描述参数的函数。例如，如果一个硬币在10次抛落中正面均朝上，那硬币是均匀的（在抛落中，正反面的概率相等）概率是多少？这里用了概率这个词，但是实质上是“可能性”，也就是似然了。</p>
<h3 id="后验概率（Posterior-probability）"><a href="#后验概率（Posterior-probability）" class="headerlink" title="后验概率（Posterior probability）"></a>后验概率（Posterior probability）</h3><p>后验概率是关于随机事件或者不确定性断言的条件概率，是在相关证据或者背景给定并纳入考虑之后的条件概率。后验概率分布就是未知量作为随机变量的概率分布，并且是在基于实验或者调查所获得的信息上的条件分布。“后验”在这里意思是，考虑相关事件已经被检视并且能够得到一些信息。</p>
<p>后验概率是关于参数 θ 在给定的证据信息 X 下的概率，即 P(θ|X) 。若对比后验概率和似然函数，似然函数是在给定参数下的证据信息 X 的概率分布，即 P(X|θ) 。二者有如下关系：</p>
<p>我们用 P(θ) 表示概率分布函数，用 P(X|θ) 表示观测值 X 的似然函数。后验概率定义为 P(θ|X)=P(X|θ)P(θ)P(X)，注意这也是贝叶斯定理所揭示的内容。</p>
<p>鉴于分母是一个常数，上式可以表达成如下比例关系（而且这也是我们更多采用的形式）：Posterior probability∝Likelihood×Prior probability</p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://zh.wikipedia.org/wiki/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%AE%9A%E7%90%86" target="_blank" rel="external">https://zh.wikipedia.org/wiki/朴素贝叶斯定理</a></p>
<p><a href="https://zh.wikipedia.org/wiki/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB%E5%99%A8" target="_blank" rel="external">https://zh.wikipedia.org/wiki/朴素贝叶斯分类器</a>  </p>
<p><a href="http://www.cnblogs.com/leoo2sk/archive/2010/09/17/naive-bayesian-classifier.html" target="_blank" rel="external">算法杂货铺——分类算法之朴素贝叶斯分类(Naive Bayesian classification)</a></p>
<p><a href="http://blog.csdn.net/baimafujinji/article/details/51374202" target="_blank" rel="external">先验概率、后验概率以及共轭先验</a></p>
]]></content>
      
        <categories>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 朴素贝叶斯 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WineQualityReds EDA]]></title>
      <url>/2017/06/09/WineQualityReds/</url>
      <content type="html"><![CDATA[<p>作为一个数据分析师，在数据处理过程中，当获取到一份新数据，你对这份数据完全陌生，又没有足够的业务背景，会不会感觉无从下手。如果你什么都不管，直接把数据喂给各种模型，却发现效果不好，因为你没有好的特征，那么你可能需要的是数据探索。 </p>
<p><strong>首先什么是探索性数据分析(Exploratory Data Analysis,EDA)？</strong></p>
<p>实际上，这是一系列的方法，它的目的就是让你最大化对数据的直觉，为了让你对数据有感觉，你不仅需要知道数据里有什么，你还需要知道数据里没有什么，而完成这件事情的方法只有一个，那就是结合各种统计学的图形把数据以各种形式展现在我们面前。它可以完成这些事情：</p>
<ol>
<li>让你最大程度得到数据的直觉</li>
<li>发掘潜在的结构</li>
<li>提取重要的变量</li>
<li>删除异常值</li>
<li>检验潜在的假设</li>
<li>建立初步的模型</li>
<li>决定最优因子的设置</li>
</ol>
<p>这里在完成了一阶段的R语言学习后，我收集了一份红酒品质的数据，用R语言进行探索式数据分析，在完成数据探索后，我希望能够快速的了解数据，并提取出数据的重要变量，并为后续的数据模型建立提供基础。</p>
<p><strong>以下是对红酒品质数据的探索分析过程</strong>  </p>
<p><a href="/WineQualityReds_EDA.html">WineQualityRed EDA</a></p>
]]></content>
      
        <categories>
            
            <category> DAND </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Histogram how to select bins]]></title>
      <url>/2017/06/07/Histogram-how-to-select-bins/</url>
      <content type="html"><![CDATA[<p>今天在进行EDA数据探索时，使用的数据集里有比较多的字段存在异常值的情况，在使用histogram探索这些数据时，这种异常值的处理无非就是调整直方图的参数，过滤异常值等，最后生成一个normal histogram。在调试过程中，产生了一个疑惑，究竟histogram的bins 以及 binwidth到底如何确定呢？</p>
<p>实际上，对一个数据集来说，并没有最好的bins一说，只能根据数据集的特定进行不断的调整，获得一个相对来说最优的bins，使得直方图可以清楚的反应数据的分布情况。</p>
<h3 id="Number-of-bins-and-width"><a href="#Number-of-bins-and-width" class="headerlink" title="Number of bins and width"></a>Number of bins and width</h3><p>There is no “best” number of bins, and different bin sizes can reveal different features of the data. Grouping data is at least as old as Graunt’s work in the 17th century, but no systematic guidelines were given[10] until Sturges’s work in 1926.[11]</p>
<p>Using wider bins where the density is low reduces noise due to sampling randomness; using narrower bins where the density is high (so the signal drowns the noise) gives greater precision to the density estimation. Thus varying the bin-width within a histogram can be beneficial. Nonetheless, equal-width bins are widely used.</p>
<p>Some theoreticians have attempted to determine an optimal number of bins, but these methods generally make strong assumptions about the shape of the distribution. Depending on the actual data distribution and the goals of the analysis, different bin widths may be appropriate, so experimentation is usually needed to determine an appropriate width. There are, however, various useful guidelines and rules of thumb.[</p>
<h3 id="数量和宽度"><a href="#数量和宽度" class="headerlink" title="数量和宽度"></a>数量和宽度</h3><p>没有“最好”的数据箱，不同的大小可以显示数据的不同特征。分组数据至少与Graunt在17世纪的工作一样古老，但在1926年Sturges的工作之前没有给出系统的指导原则[10]。[11]</p>
<p>使用较宽的密度较低的区域可减少由于采样随机性引起的噪声; 使用密度较高的较窄的箱体（因此信号淹没噪声）可以提供更高的密度估计精度。因此，改变直方图内的二进制位宽度是有益的。尽管如此，宽宽度相同的机箱也被广泛使用。</p>
<p>一些理论家试图确定最佳数量的分数，但是这些方法通常对分布的形状做出强烈的假设。根据实际数据分布和分析目标，不同的箱宽可能是适当的，因此通常需要进行实验来确定适当的宽度。然而，有各种有用的指导方针和经验法则。</p>
<p>wikipedia提供的方法：
<a href="https://en.wikipedia.org/wiki/Histogram" target="_blank" rel="external">https://en.wikipedia.org/wiki/Histogram</a></p>
<p>在stackoverflow上也有一个比较不错的方法，实际上是使用了Freedman-Diaconis rule：</p>
<p>The Freedman-Diaconis rule is very robust and works well in practice. The bin-width is set to</p>
<p>h=2∗IQR∗n^1/3 </p>
<p>So the number of bins is (max-min)/h.</p>
<p>In base R, you can use<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hist(x,breaks=<span class="string">"FD"</span>)</div></pre></td></tr></table></figure></p>
<p>For other plotting libraries without this option (e.g. ggplot2), you can calculate binwidth as:
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">bins &lt;- diff(range(x)) / (<span class="number">2</span> * IQR(x) / length(x)^(<span class="number">1</span>/<span class="number">3</span>))</div><div class="line"></div><div class="line"><span class="comment"># for example</span></div><div class="line">ggplot() + geom_histogram(aes(x), bins = bw)</div></pre></td></tr></table></figure></p>
<p>Freedman-Diaconis rule基于由IQR表示的四分位数范围。它将Scott的规则的3.5σ替换为2 IQR，其对数据中的异常值的标准偏差较不敏感。总的来说这个方法在处理直方图时效果不错，而且能避开异常值对直方图的影响。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="Freedman-Diaconis-rule"><a href="#Freedman-Diaconis-rule" class="headerlink" title="Freedman-Diaconis rule"></a>Freedman-Diaconis rule</h4><p>The Freedman–Diaconis rule is:
<img src="/2017/06/07/Histogram-how-to-select-bins/1.svg" alt="Freedman-Diaconis rule" title="Freedman-Diaconis rule"></p>
<p>The number of bins k can be assigned directly or can be calculated from a suggested bin width h as:
<img src="/2017/06/07/Histogram-how-to-select-bins/2.svg" alt="Number of bins k" title="Number of bins k"></p>
<p>在R中有方便的自带函数可以使用,ggplot使用稍微麻烦一点
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># hist()</span></div><div class="line">hist(x,breaks=<span class="string">"FD"</span>)</div><div class="line"></div><div class="line"><span class="comment"># ggplot</span></div><div class="line">bins &lt;- diff(range(x)) / (<span class="number">2</span> * IQR(x) / length(x)^(<span class="number">1</span>/<span class="number">3</span>))</div><div class="line">ggplot() + geom_histogram(aes(x), bins = bw)</div><div class="line"></div><div class="line"><span class="comment"># ggplot</span></div><div class="line">bw &lt;- (<span class="number">2</span> * IQR(x) / length(x)^(<span class="number">1</span>/<span class="number">3</span>))</div><div class="line">ggplot() + geom_histogram(aes(x), binwidth = bw)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 数据分析 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R </tag>
            
            <tag> DAND </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[靈魂歌手]]></title>
      <url>/2017/06/01/%E9%9D%88%E9%AD%82%E6%AD%8C%E6%89%8B/</url>
      <content type="html"><![CDATA[<img src="/2017/06/01/靈魂歌手/Bruceliang.jpg" alt="靈魂歌手" title="靈魂歌手">
<h6 id="爭著去做奴隸"><a href="#爭著去做奴隸" class="headerlink" title="爭著去做奴隸"></a>爭著去做奴隸</h6><h6 id="急著拋棄自己"><a href="#急著拋棄自己" class="headerlink" title="急著拋棄自己"></a>急著拋棄自己</h6><h6 id="你本來是英雄"><a href="#你本來是英雄" class="headerlink" title="你本來是英雄"></a>你本來是英雄</h6><h6 id="直到變得-更加恐懼"><a href="#直到變得-更加恐懼" class="headerlink" title="直到變得 更加恐懼"></a>直到變得 更加恐懼</h6>]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 靈魂歌手 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Pearson, Kendall, Spearman三种相关性的差异]]></title>
      <url>/2017/05/25/Correlation-Pearson-Kendall-Spearman/</url>
      <content type="html"><![CDATA[<h3 id="相关性（Pearson，Kendall，Spearman）"><a href="#相关性（Pearson，Kendall，Spearman）" class="headerlink" title="相关性（Pearson，Kendall，Spearman）"></a>相关性（Pearson，Kendall，Spearman）</h3><p>最近在学习R语言时，需要对两个连续变量进行相关性分析，通过查看帮助文档，发现cor.test()常用的相关性方法有三种，其中出现最为频繁的就是皮尔逊相关系数了，这里收集整理一下这三种方法的区别。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cor.test(x, y,</div><div class="line">         alternative = c(<span class="string">"two.sided"</span>, <span class="string">"less"</span>, <span class="string">"greater"</span>),</div><div class="line">         method = c(<span class="string">"pearson"</span>, <span class="string">"kendall"</span>, <span class="string">"spearman"</span>),</div><div class="line">         exact = <span class="literal">NULL</span>, conf.level = <span class="number">0.95</span>, continuity = <span class="literal">FALSE</span>, <span class="keyword">...</span>)</div></pre></td></tr></table></figure>
<p>相关性是一种双变量分析，它衡量两个变量之间关联的强度和关系的方向。关于关系的强度，相关系数的值在+1和-1之间变化。当相关系数的值在±1左右时，这被认为是两个变量之间的完美关联度。由于相关系数值为0，两个变量之间的关系将较弱。关系的方向只是+（表示变量之间的正相关）或 - （表示变量之间的负相关）相关性的符号。通常在统计学中，我们使用三种类型的相关性：Pearson相关性，Kendall秩相关性，Spearman相关.</p>
<h3 id="Pearson-r-correlation-皮尔逊相关"><a href="#Pearson-r-correlation-皮尔逊相关" class="headerlink" title="Pearson r correlation 皮尔逊相关"></a>Pearson r correlation 皮尔逊相关</h3><p>Pearson r相关性是用于测量线性相关变量之间关系程度的最广泛使用的相关统计量。例如，在股票市场，如果我们想衡量两个股票之间的相互关系，则用Pearson r相关度来衡量两者之间的关系。Point-biserial相关性是用Pearson相关公式进行的，除了其中一个变量是二分的。以下公式用于计算Pearson r相关：
<img src="/2017/05/25/Correlation-Pearson-Kendall-Spearman/1.jpg" alt="Pearson r correlation" title="Pearson r correlation"></p>
<p>r = Pearson r相关系数
N =每个数据集中的值数
Σxy=成对分数的
乘积之和Σx= x分数
之和Σy= y分数
Σx2=平方x分数的和
Σy2=平方y得分的和</p>
<h4 id="Pearson相关性可以检查的研究问题的类型："><a href="#Pearson相关性可以检查的研究问题的类型：" class="headerlink" title="Pearson相关性可以检查的研究问题的类型："></a>Pearson相关性可以检查的研究问题的类型：</h4><p>年龄之间有统计学意义上的关系，以年数衡量，高度以英寸衡量？
温度，度数华氏度和冰淇淋销售之间是否有收入关系？
工作满意度之间是否存在关系，由JSS衡量，收入以美元衡量？</p>
<h4 id="假设"><a href="#假设" class="headerlink" title="假设"></a>假设</h4><p>对于Pearson r相关性，两个变量都应该是正态分布的（正态分布变量具有钟形曲线）。其他假设包括线性和同态性。线性度假设分析中每个变量之间存在直线关系，同质性假定数据在回归线上正态分布。</p>
<h4 id="行为和解释皮尔逊相关"><a href="#行为和解释皮尔逊相关" class="headerlink" title="行为和解释皮尔逊相关"></a>行为和解释皮尔逊相关</h4><h4 id="关键术语"><a href="#关键术语" class="headerlink" title="关键术语"></a>关键术语</h4><ul>
<li><strong>效应大小：</strong> Cohen的标准将用于评估相关系数，以确定关系的强度或效应大小，其中.10和.29之间的相关系数表示小关联.30和.49之间的系数表示介质关联，以及.50以上的系数表示大的关联或关系。</li>
<li><strong>连续数据：</strong> 间隔或比率级别的数据。这种类型的数据具有相邻单元之间的幅度和相等间隔的属性。相邻单元之间的相等间隔意味着在刻度尺上的相邻单元之间有相等量的被测量的变量。一个例子就是年龄。年龄从21岁增加到22岁将与60岁至61岁的年龄相同。</li>
</ul>
<h3 id="Kendall-rank-correlation-肯德尔等级相关"><a href="#Kendall-rank-correlation-肯德尔等级相关" class="headerlink" title="Kendall rank correlation 肯德尔等级相关"></a>Kendall rank correlation 肯德尔等级相关</h3><p>肯德尔等级相关是一个非参数检验，用于衡量两个变量之间依赖的强度。如果我们考虑两个样本a和b，其中每个样本大小为 n，我们知道与ab的配对总数为 n（ n -1）/ 2。  以下公式用于计算肯德尔秩相关值：
<img src="/2017/05/25/Correlation-Pearson-Kendall-Spearman/2.jpg" alt="Kendall rank correlation" title="Kendall rank correlation">
Nc =一致
Nd的数量=不一致的数量</p>
<h4 id="行为和解释肯德尔相关"><a href="#行为和解释肯德尔相关" class="headerlink" title="行为和解释肯德尔相关"></a>行为和解释肯德尔相关</h4><h4 id="关键术语-1"><a href="#关键术语-1" class="headerlink" title="关键术语"></a>关键术语</h4><ul>
<li><strong>一致：</strong> 以相同的方式订购。</li>
<li><strong>不一致：</strong> 有所不同。</li>
</ul>
<h3 id="Spearman-rank-correlation-斯皮尔曼等级相关"><a href="#Spearman-rank-correlation-斯皮尔曼等级相关" class="headerlink" title="Spearman rank correlation 斯皮尔曼等级相关"></a>Spearman rank correlation 斯皮尔曼等级相关</h3><p>斯派曼秩相关是一个非参数测试，用于测量两个变量之间的关联程度。它是由斯皮尔曼开发的，因此称之为斯皮尔曼等级相关。斯皮尔曼等级相关性测试对于数据分布不承担任何假设，而是在以至少为次序的尺度上测量变量时进行适当的相关分析。
以下公式用于计算Spearman秩相关：
<img src="/2017/05/25/Correlation-Pearson-Kendall-Spearman/2.jpg" alt="Spearman rank correlation" title="Spearman rank correlation">
P = Spearman秩相关
di =相应值Xi和Yi的行之间的差
n n =每个数据集中的值的数量</p>
<h4 id="Spearman相关答案"><a href="#Spearman相关答案" class="headerlink" title="Spearman相关答案"></a>Spearman相关答案</h4><p>参与者对两个Likert量表问题的回答之间是否存在统计学上的显着关系？
马匹在种族和马的年龄之间的排名有统计学意义上的关系吗？</p>
<h4 id="假设-1"><a href="#假设-1" class="headerlink" title="假设"></a>假设</h4><p>Spearman等级相关性测试对于分布没有做任何假设。Spearman rho相关的假设是数据必须至少是序数，一个变量上的分数必须与其他变量单调相关。</p>
<h4 id="行为和解释Spearman相关"><a href="#行为和解释Spearman相关" class="headerlink" title="行为和解释Spearman相关"></a>行为和解释Spearman相关</h4><h4 id="关键术语-2"><a href="#关键术语-2" class="headerlink" title="关键术语"></a>关键术语</h4><ul>
<li><strong>效应大小：</strong> Cohen的标准将用于评估相关系数，以确定关系的强度或效应大小，其中系数在.10和.29之间表示小关联; 系数介于30.30和.49之间。并且.50及以上的系数表示大的关联或关系。</li>
<li><strong>有序数据：</strong> 有序量表对待测量的项目进行排序，以指示它们是否具有更多，更少或相同量的被测量变量。序数量表使我们能够确定X&gt; Y，Y&gt; X，或者如果X = Y。一个例子是排序舞蹈比赛的参与者。排名第一的舞者是比排名第二的舞者更好的舞者。排名第二的舞者是比排名第三的舞者更好的舞者，等等。虽然这个规模使我们能够确定大于，小于或等于，但它仍然没有定义单位之间关系的大小。</li>
</ul>
<h3 id="相关系数强度"><a href="#相关系数强度" class="headerlink" title="相关系数强度"></a>相关系数强度</h3><p>相关系数<br>0.8-1.0     极强相关<br>0.6-0.8     强相关<br>0.4-0.6     中等程度相关<br>0.2-0.4     弱相关<br>0.0-0.2     极弱相关或无相关  </p>
]]></content>
      
        <categories>
            
            <category> R </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R </tag>
            
            <tag> DAND </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[R 逻辑操作符]]></title>
      <url>/2017/05/21/R-operators/</url>
      <content type="html"><![CDATA[<p>最近在使用R语言进行数据探索时，发现逻辑操作 &amp; 和 &amp;&amp; 代表的是两种逻辑操作，这里整理一下R中的逻辑操作符，以下是Qucik-R的操作符介绍：</p>
<h3 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h3><p>R’s binary and logical operators will look very familiar to programmers. Note that binary operators work on vectors and matrices as well as scalars.</p>
<h3 id="Arithmetic-Operators"><a href="#Arithmetic-Operators" class="headerlink" title="Arithmetic Operators"></a>Arithmetic Operators</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Operator Description</div><div class="line">+	addition</div><div class="line">-	subtraction</div><div class="line">*	multiplication</div><div class="line">/	division</div><div class="line">^ or **	exponentiation</div><div class="line">x %% y	modulus (x mod y) <span class="number">5</span>%%<span class="number">2</span> is <span class="number">1</span></div><div class="line">x %/% y	<span class="type">integer</span> division <span class="number">5</span>%/%<span class="number">2</span> is <span class="number">2</span></div></pre></td></tr></table></figure>
<h3 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Operator	Description</div><div class="line">&lt;	<span class="keyword">less than</span></div><div class="line">&lt;=	<span class="keyword">less than or equal</span> <span class="keyword">to</span></div><div class="line">&gt;	<span class="keyword">greater than</span></div><div class="line">&gt;=	<span class="keyword">greater than</span> <span class="keyword">or</span> <span class="keyword">equal</span> <span class="keyword">to</span></div><div class="line">==	exactly <span class="keyword">equal</span> <span class="keyword">to</span></div><div class="line">!=	<span class="keyword">not</span> <span class="keyword">equal</span> <span class="keyword">to</span></div><div class="line">!x	Not x</div><div class="line">x | y	x OR y</div><div class="line">x &amp; y	x AND y</div><div class="line">isTRUE(x)	test <span class="keyword">if</span> X <span class="keyword">is</span> TRUE</div></pre></td></tr></table></figure>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># An example </span></div><div class="line">x &lt;- c(<span class="number">1</span>:<span class="number">10</span>)</div><div class="line">x[(x&gt;<span class="number">8</span>) | (x&lt;<span class="number">5</span>)]</div><div class="line"><span class="comment"># yields 1 2 3 4 9 10</span></div><div class="line"></div><div class="line"><span class="comment"># How it works </span></div><div class="line">x &lt;- c(<span class="number">1</span>:<span class="number">10</span>)</div><div class="line">x</div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></div><div class="line">x &gt; <span class="number">8</span></div><div class="line"><span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">T</span> <span class="literal">T</span></div><div class="line">x &lt; <span class="number">5</span></div><div class="line"><span class="literal">T</span> <span class="literal">T</span> <span class="literal">T</span> <span class="literal">T</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span></div><div class="line">x &gt; <span class="number">8</span> | x &lt; <span class="number">5</span></div><div class="line"><span class="literal">T</span> <span class="literal">T</span> <span class="literal">T</span> <span class="literal">T</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">F</span> <span class="literal">T</span> <span class="literal">T</span></div><div class="line">x[c(<span class="literal">T</span>,<span class="literal">T</span>,<span class="literal">T</span>,<span class="literal">T</span>,<span class="literal">F</span>,<span class="literal">F</span>,<span class="literal">F</span>,<span class="literal">F</span>,<span class="literal">T</span>,<span class="literal">T</span>)]</div><div class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">9</span> <span class="number">10</span></div></pre></td></tr></table></figure>
<h3 id="amp-与-amp-amp-，-与-区别"><a href="#amp-与-amp-amp-，-与-区别" class="headerlink" title="&amp;与&amp;&amp;，|与||区别"></a>&amp;与&amp;&amp;，|与||区别</h3><p>&amp;和|称为短逻辑符，&amp;&amp;及||称为长逻辑符，长逻辑符只比较左边和右边的第一个元素，而短逻辑符会比较所有元素。通过示例来看：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&gt; a&lt;-c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>)</div><div class="line">&gt; b&lt;-c(<span class="literal">FALSE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">TRUE</span>)</div><div class="line">&gt; c&lt;-c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>)</div><div class="line">&gt; a &amp; b</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span></div><div class="line">&gt; a &amp;&amp; b</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></div><div class="line">&gt; a &amp; c</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></div><div class="line">&gt; a &amp;&amp; c</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line">&gt; a | b</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span></div><div class="line">&gt; a || b</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div><div class="line">&gt; a | c</div><div class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span></div><div class="line">&gt; a || c</div><div class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> R </category>
            
        </categories>
        
        
        <tags>
            
            <tag> R </tag>
            
            <tag> DAND </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DAND“整理 OpenStreetMap 数据”学习总结]]></title>
      <url>/2017/05/20/dand-osm/</url>
      <content type="html"><![CDATA[<p>讲真，一开始让我写一篇这样的文章我是拒绝的，因为我以前总是觉得，学习是自己的事情，学到多少，学了什么，自己清楚就好。不过，在优达学城近两个月的学习之后，我逐步改变了观点，正如优达优等生互助班所倡导的“探索、自律、分享”的学习理念，实际上学习过程中的积累和分享的过程，也是提升学习兴趣的一个非常重要的点。所以，今天也想在这里汇总一下关于DAND课程里P3项目“整理 OpenStreetMap 数据”这阶段的学习总结，同时也记录一下自己的学习心路历程，这里特别感谢一下优等生互助班导师——鱼头同学的各种鼓励和支持@Clark Yu，非常负责任的一位导师，为了我们的学习进度也是操碎了心 /捂脸
应该说整个P3过程涉及的知识点还是比较多的，P3项目的要求是探索整理OpenStreetMap上的数据，并完成清洗、探索、分析的过程，这部分内容，应该是数据分析过程中一个相当耗时的部分，所以整个P3项目的预计完成时间还是比较长的。P3课程主要核心内容为：</p>
<h4 id="数据分析提取"><a href="#数据分析提取" class="headerlink" title="数据分析提取"></a>数据分析提取</h4><h4 id="数据质量审查"><a href="#数据质量审查" class="headerlink" title="数据质量审查"></a>数据质量审查</h4><h4 id="清洗整理osm数据并使用SQL-MongoDB存储数据进行数据探索"><a href="#清洗整理osm数据并使用SQL-MongoDB存储数据进行数据探索" class="headerlink" title="清洗整理osm数据并使用SQL/MongoDB存储数据进行数据探索"></a>清洗整理osm数据并使用SQL/MongoDB存储数据进行数据探索</h4><h5 id="数据分析提取-1"><a href="#数据分析提取-1" class="headerlink" title="数据分析提取"></a>数据分析提取</h5><p>课程主要包含了使用Python从各个数据源分析提取数据的过程，处理的数据来源有CSV、Excel、JSON、XML以及HTML，这几类数据源都是比较常见的数据源，基本覆盖了我们常见的获取数据的途径，其中CSV、XML是格式比较标准且出现度非常高的两种文件格式，而JSON简洁和清晰的层次结构使得 JSON 成为一种理想的数据交换格式，它的键值对模式，非常类似Python中的字典，使用Python处理起来非常方便。</p>
<p>而对于HTML的数据提取，其实就是对网页上的内容进行的爬取和格式处理，课程里使用了Python中非常友好的BeatifulSoup库进行爬虫开发，非常容易的实现了对于网页内容的爬取。不过，鉴于课程的设计，关于爬虫的教学实际上并不是很深入，只是比较浅显的介绍了对于静态网页内容的爬取，在现在动态加载页面大行其道的今天，还是显得有点力不从心了，后续的实际过程中若数据来源比较多来自于HTML，那还是得深入对爬虫做一番了解。</p>
<p>Python读取各数据格式的API文档地址汇总：</p>
<h5 id="CSV"><a href="#CSV" class="headerlink" title="CSV:"></a>CSV:</h5><p>所用Python库：import csv</p>
<p>API文档： <a href="https://docs.python.org/2/library/csv.html?highlight=csv" target="_blank" rel="external">CSV File Reading and Writing - Python 2.7.13 documentation</a></p>
<h5 id="Excel"><a href="#Excel" class="headerlink" title="Excel:"></a>Excel:</h5><p>所用Python库：import xlrd</p>
<p>API文档： <a href="http://xlrd.readthedocs.io/en/latest/api.html" target="_blank" rel="external">API Reference - xlrd 1.0.0 documentation</a></p>
<h5 id="JSON"><a href="#JSON" class="headerlink" title="JSON:"></a>JSON:</h5><p>所用Python库：import json</p>
<p>API文档： <a href="https://docs.python.org/2/library/json.html#module-json" target="_blank" rel="external">18.2. json — JSON encoder and decoder</a></p>
<h5 id="XML"><a href="#XML" class="headerlink" title="XML:"></a>XML:</h5><p>所用Python库：import xml</p>
<p>API文档： <a href="https://docs.python.org/2/library/xml.dom.html" target="_blank" rel="external">19.8. xml.dom — The Document Object Model API</a></p>
<h4 id="数据质量审查："><a href="#数据质量审查：" class="headerlink" title="数据质量审查："></a>数据质量审查：</h4><p>作为一个合格的DataAnalyst，自然要对所需进行探索分析的数据的质量有清晰的认识。对于数据质量的审查与清理是一个不断迭代的过程，数据质量在数据分析中的重要性毋庸置疑，数据的质量直接影响数据的产出和数据价值高低，而数据质量的基本要素则包含以下3个要素：</p>
<h5 id="1、准确性"><a href="#1、准确性" class="headerlink" title="1、准确性"></a>1、准确性</h5><p>数据中记录的信息和数据是否准确，是否存在异常或者错误的信息。</p>
<p>导致一致性问题的原因可能是数据记录的规则不一，但不一定存在错误；而准确性关注的是数据记录中存在的错误，比如字符型数据的乱码现象也应该归到准确性的考核范畴，另外就是异常的数值，异常大或者异常小的数值，不符合有效性要求的数值，如访问量Visits一定是整数、年龄一般在1-100之间、转化率一定是介于0到1的值等。对数据准确性的审核有时会遇到困难，因为对于没有明显异常的错误值我们很难发现。</p>
<h5 id="2、完整性"><a href="#2、完整性" class="headerlink" title="2、完整性"></a>2、完整性</h5><p>数据的记录和信息是否完整，是否存在缺失的情况。</p>
<p>数据的缺失主要有记录的缺失和记录中某个字段信息的缺失，两者都会造成统计结果的不准确，所以完整性是数据质量最基础的保障，而对完整性的评估相对比较容易。</p>
<h5 id="3、一致性"><a href="#3、一致性" class="headerlink" title="3、一致性"></a>3、一致性</h5><p>数据的记录是否符合规范，是否与前后及其他数据集合保持统一。</p>
<p>数据的一致性主要包括数据记录的规范和数据逻辑的一致性。数据记录的规范主要是数据编码和格式的问题，比如网站的用户ID是15位的数字、商品ID是10位数字，商品包括20个类目、IP地址一定是用”.”分隔的4个0-255的数字组成，及一些定义的数据约束，比如完整性的非空约束、唯一值约束等；数据逻辑性主要是指标统计和计算的一致性，比如PV&gt;=UV，新用户比例在0-1之间等。数据的一致性审核是数据质量审核中比较重要也是比较复杂的一块。</p>
<h4 id="使用SQL-MongoDB存储数据并分析"><a href="#使用SQL-MongoDB存储数据并分析" class="headerlink" title="使用SQL/MongoDB存储数据并分析"></a>使用SQL/MongoDB存储数据并分析</h4><p>课程里关于使用SQL还是MongoDB是需要学员根据自己的情况自行选择的，由于我工作中接触SQL比较多，所以这里我选择了MongoDB。</p>
<p>MongoDB 是一个基于分布式文件存储的数据库，他是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p>
<p>MongoDB 3.4 中文文档
MongoDB - MongoDB Manual 3.4</p>
<h5 id="MongoDB常用的操作："><a href="#MongoDB常用的操作：" class="headerlink" title="MongoDB常用的操作："></a>MongoDB常用的操作：</h5><h5 id="MongoDB导入语句"><a href="#MongoDB导入语句" class="headerlink" title="MongoDB导入语句"></a>MongoDB导入语句</h5><p>使用Mongoimport命令，适用于已有文件导入
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongoimport -<span class="keyword">d</span> dbname -c collectionname --<span class="keyword">file</span> <span class="keyword">input</span>-<span class="keyword">file</span>.json</div></pre></td></tr></table></figure></p>
<p>语句导入
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.insert</span>(&#123;<span class="string">"name"</span> : <span class="string">"Chicago"</span>&#125;)</div></pre></td></tr></table></figure></p>
<h6 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h6><h6 id="1-1-条件查询"><a href="#1-1-条件查询" class="headerlink" title="1.1 条件查询"></a>1.1 条件查询</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.find</span>(“name”: <span class="string">"Guangzhou"</span>, <span class="string">"class"</span>: <span class="string">"mid-size car"</span>)</div></pre></td></tr></table></figure>
<h6 id="1-2-投影查询"><a href="#1-2-投影查询" class="headerlink" title="1.2 投影查询"></a>1.2 投影查询</h6><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">query = &#123;“name”: <span class="string">"Guangzhou"</span>, <span class="string">"class"</span>: <span class="string">"mid-size car"</span>&#125;</div><div class="line">projection = &#123;<span class="string">"_id"</span> : 0,<span class="string">"name"</span> : 1&#125;</div><div class="line">db.cities.find(query, projection)</div></pre></td></tr></table></figure>
<h6 id="1-3-范围查询"><a href="#1-3-范围查询" class="headerlink" title="1.3 范围查询"></a>1.3 范围查询</h6><p>运算符：
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(&gt;) 大于 - $gt</div><div class="line">(&lt;) 小于 - $lt</div><div class="line">(&gt;=) 大于等于 - $gte</div><div class="line">(&lt;= ) 小于等于 - $lte</div><div class="line">$gt -------- greater than $gte --------- <span class="keyword">gt</span> equal $lt -------- less than $lte --------- <span class="keyword">lt</span> equal $ne ----------- <span class="keyword">not</span> equalquery = &#123;<span class="string">"foundingDate"</span>: &#123;<span class="string">"$gte"</span> : datetime(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>)&#125;&#125;</div><div class="line">db.cities.find(query)</div></pre></td></tr></table></figure></p>
<h6 id="1-4-Exists查询"><a href="#1-4-Exists查询" class="headerlink" title="1.4 Exists查询"></a>1.4 Exists查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"name"</span>: &#123;<span class="string">"$exists"</span> : <span class="number">1</span>&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-5-正则表达式查询"><a href="#1-5-正则表达式查询" class="headerlink" title="1.5 正则表达式查询"></a>1.5 正则表达式查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"name"</span>: &#123;<span class="string">"$regex"</span> : <span class="string">"[Ff]riendship|[Pp]ride"</span>&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-6-in查询"><a href="#1-6-in查询" class="headerlink" title="1.6 in查询"></a>1.6 in查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"manufacturer"</span>:<span class="string">"Ford Motor Company"</span>,<span class="string">"assembly"</span>:&#123;<span class="string">"$in"</span>:[<span class="string">"Germany"</span>,<span class="string">"United Kingdom"</span>,<span class="string">"Japan"</span>]&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-7-all查询"><a href="#1-7-all查询" class="headerlink" title="1.7 all查询"></a>1.7 all查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"manufacturer"</span>:<span class="string">"Ford Motor Company"</span>,<span class="string">"assembly"</span>:&#123;<span class="string">"$all"</span>:[<span class="string">"Germany"</span>,<span class="string">"United Kingdom"</span>,<span class="string">"Japan"</span>]&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-8点表示法"><a href="#1-8点表示法" class="headerlink" title="1.8点表示法"></a>1.8点表示法</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"dimensions.width"</span>:&#123;<span class="string">"$gt"</span>:<span class="number">2.5</span>&#125;&#125;</div></pre></td></tr></table></figure>
<h5 id="2-更新"><a href="#2-更新" class="headerlink" title="2.更新"></a>2.更新</h5><h6 id="2-1-save-方法"><a href="#2-1-save-方法" class="headerlink" title="2.1 save()方法"></a>2.1 save()方法</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city = db<span class="selector-class">.cities</span><span class="selector-class">.find_one</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>)</div><div class="line">city[<span class="string">"isoCountryCode"</span>] = <span class="string">"DEU"</span></div><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.save</span>(city)</div></pre></td></tr></table></figure>
<h6 id="2-2-update-方法-set-amp-unset"><a href="#2-2-update-方法-set-amp-unset" class="headerlink" title="2.2 update()方法 set &amp; unset"></a>2.2 update()方法 set &amp; unset</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">set:</div><div class="line">city = db.cities.<span class="keyword">update</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>,</div><div class="line">&#123;<span class="string">"$set"</span> : &#123;<span class="string">"isoCountryCode"</span> : <span class="string">"DEU"</span>&#125;&#125;</div><div class="line">)</div><div class="line"></div><div class="line">unset:</div><div class="line">city = db.cities.<span class="keyword">update</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>,</div><div class="line">&#123;<span class="string">"$set"</span> : &#123;<span class="string">"isoCountryCode"</span> : <span class="string">""</span>&#125;&#125;</div><div class="line">)</div></pre></td></tr></table></figure>
<h6 id="2-3-update-多项更新"><a href="#2-3-update-多项更新" class="headerlink" title="2.3 update()多项更新"></a>2.3 update()多项更新</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city = db.cities.<span class="keyword">update</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>,</div><div class="line">&#123;<span class="string">"$set"</span> : &#123;<span class="string">"isoCountryCode"</span> : <span class="string">""</span>&#125;&#125;</div><div class="line">，multi = True)</div></pre></td></tr></table></figure>
<h5 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h5><p>类似find语法
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.remove</span>(“name”: <span class="string">"Guangzhou"</span>, <span class="string">"class"</span>: <span class="string">"mid-size car"</span>)</div><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.drop</span>()删除collection所有内容</div></pre></td></tr></table></figure></p>
<h5 id="4-聚合框架"><a href="#4-聚合框架" class="headerlink" title="4.聚合框架"></a>4.聚合框架</h5><h6 id="4-1聚合框架使用："><a href="#4-1聚合框架使用：" class="headerlink" title="4.1聚合框架使用："></a>4.1聚合框架使用：</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$user.screen_name"</span>,</div><div class="line"><span class="string">"count"</span> : &#123;<span class="string">"$sum"</span> : <span class="number">1</span>&#125;&#125;&#125;,</div><div class="line">&#123;<span class="string">"$sort"</span> : &#123;<span class="string">"count"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>
<h6 id="4-2-match-amp-project运算符："><a href="#4-2-match-amp-project运算符：" class="headerlink" title="4.2 match&amp;project运算符："></a>4.2 match&amp;project运算符：</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line">&#123;“$match” : &#123;<span class="string">"user.friends_count"</span> : &#123;<span class="string">"$gt"</span> : <span class="number">0</span>&#125;,</div><div class="line"><span class="string">"user.followers_count"</span>: &#123;<span class="string">"$gt"</span> : <span class="number">0</span>&#125;&#125;&#125;,</div><div class="line">&#123;<span class="string">"$project"</span>: &#123;<span class="string">"ratio"</span> : &#123;<span class="string">"$divide"</span> : [<span class="string">"$user.followers_count"</span>,</div><div class="line"><span class="string">"$user.friends_count"</span>]&#125;,</div><div class="line"><span class="string">"screen_name"</span> : <span class="string">"$user.screen_name"</span>&#125;&#125;,</div><div class="line">&#123;<span class="string">"$sort"</span> : &#123;<span class="string">"ratio"</span> : -<span class="number">1</span>&#125;&#125;,</div><div class="line">&#123;<span class="string">"$limit"</span> : <span class="number">1</span>&#125;])</div></pre></td></tr></table></figure>
<h6 id="4-3-unwind运算符："><a href="#4-3-unwind运算符：" class="headerlink" title="4.3 unwind运算符："></a>4.3 unwind运算符：</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line">&#123;<span class="string">"$unwind"</span> : <span class="string">"$entities.user_mentions"</span>&#125;,</div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$user.screen_name"</span>,</div><div class="line"><span class="string">"count"</span> : &#123;<span class="string">"$sum"</span> : <span class="number">1</span>&#125;&#125;&#125;,</div><div class="line">&#123;<span class="string">"sort"</span> : &#123;<span class="string">"count"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>
<h6 id="分组累加运算符："><a href="#分组累加运算符：" class="headerlink" title="分组累加运算符："></a>分组累加运算符：</h6><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$sum</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$first</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$last</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$max</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$min</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$avg</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$push</span> (Arrays)</span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$addToSet</span> (Arrays)</span></div></pre></td></tr></table></figure>
<h6 id="avg"><a href="#avg" class="headerlink" title="avg:"></a>avg:</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line"></div><div class="line">&#123;<span class="string">"$unwind"</span> : <span class="string">"$entities.hashtags"</span>&#125;,</div><div class="line"></div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$entities.hashtags.text"</span>,</div><div class="line"></div><div class="line"><span class="string">"retweet_avg"</span> : &#123;<span class="string">"$avg"</span> : <span class="string">"$retweet_count"</span>&#125;&#125;&#125;,</div><div class="line"></div><div class="line">&#123;<span class="string">"sort"</span> : &#123;<span class="string">"retweet_avg"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>
<h6 id="addToSet"><a href="#addToSet" class="headerlink" title="addToSet:"></a>addToSet:</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line"></div><div class="line">&#123;<span class="string">"$unwind"</span> : <span class="string">"$entities.hashtags"</span>&#125;,</div><div class="line"></div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$entities.hashtags.text"</span>,</div><div class="line"></div><div class="line"><span class="string">"unique_hashtags"</span> : &#123;<span class="string">"$addToSet"</span> : </div><div class="line"></div><div class="line"><span class="string">"$entities.hashtags.text"</span>&#125;&#125;&#125;,</div><div class="line"></div><div class="line">&#123;<span class="string">"sort"</span> : &#123;<span class="string">"retweet_avg"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> DAND </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> DAND </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数据科学家与数据工程师]]></title>
      <url>/2017/04/24/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%B7%A5%E7%A8%8B%E5%B8%88/</url>
      <content type="html"><![CDATA[<p>最近看到一篇文章介绍数据科学家和数据工程师的区别，觉得解释的还不错，希望对有兴趣投入数据工作的同学有所启发。</p>
<p>数据科学家和数据工程师的主要区别，可以用ETL和DAD的区别来解释。</p>
<p>  ● ETL（提取/变换/载入）是数据工程师，还有数据架构师或数据库管理员（DBA）的职责。</p>
<p>  ● DAD（发现/获取/提炼）是数据科学家的职责。</p>
<p>数据工程师往往把重点放在软件工程、数据库设计、生产环境代码上，并确保数据在来源（在那里它被收集）和目的地之间平稳地流动（在目的地那里通过统计摘要提取和处理，或通过数据科学算法产生结果，并最终转移到源或其他地方）。数据科学家却需要了解数据的流动和如何优化（尤其是使用Hadoop时）。实际上不是优化数据流本身，而是数据处理的步骤，从数据中提取出价值。数据科学家与工程师和商业人员一起工作，定义指标、设计数据收集方案，并确保数据科学流程与企业数据系统（存储、数据流）有效地集成。对于在小公司工作的数据科学家，尤其如此，这也是数据科学家应该能编写可被工程师重复使用的代码的原因。</p>
<p>有时数据工程师也操作DAD，有时数据科学家也操作ETL，但这并不常见，且他们通常是在公司内部才这么做。例如，数据工程师可以做一些统计分析，以优化一些数据库流程，而数据科学家可以做一些数据库管理，以管理一个保存汇总信息的、小型的、本地的私有数据库。</p>
<p>DAD包含以下内容：</p>
<p>  ● 发现：识别良好的数据源和指标。有时（与数据工程师和业务分析师一起工作），对应该创建的数据提出需求。</p>
<p>  ● 获取：获取数据，有时通过API、网络爬虫、互联网下载或数据库，有时是从内存数据库获取数据。</p>
<p>  ● 提炼：从数据中提取信息，做出决策，增加投资回报率，并采取行动（比如，在自动投标系统中，确定最佳的投标价格）。它包括以下内容。</p>
<p>— 通过创建数据字典和进行探索性分析，对数据进行探索。</p>
<p>— 清洗数据杂质。</p>
<p>— 通过数据汇总进一步提炼数据，有时是通过多层汇总或分层汇总来
实现的。</p>
<p>— 对数据进行统计分析（有时会采取像实验设计这样的做法，所以在前面的“获取”阶段也可以进行），自动和手动都可以。可能需要设计统计模型，也可能不需要。</p>
<p>— 在某些自动过程中呈现结果或集成结果。</p>
<p>数据科学是计算机科学、商业工程、统计学、数据挖掘、机器学习、运筹学、六西格玛、自动化和行业知识的交叉点。这些不同的领域，加上业务的愿景和行动，汇集了一系列的技术、流程和方法。数据科学是连接不同组件的过程，有助于业务优化，并消除那些降低业务效率的孤岛。它也有自己独特的核心，（例如）包括以下主题：</p>
<p>  ● 高级可视化。
  ● 分析即服务（AaaS）和API服务。
  ● 大规模数据集的聚类与分类。
  ● 计算大数据的相关性和R平方。
  ● 任何数据库、SQL或NoSQL都应该有的11个特征。
  ● 快速特征选择。
  ● Hadoop/Map-Reduce。
  ● 网络拓扑。
  ● 大数据中关键词的相关性。
  ● 在常规空间、超平面、球面上或单纯形上的线性回归。
  ● 无模型置信区间。
  ● 特征的预测能力。
  ● 无模型的统计建模。
  ● 大数据“诅咒”。
  ● MapReduce不能做的事。</p>
<p>请记住，一些雇主寻找的是具备丰富统计知识的Java或数据库开发人员。这些开发人员是非常罕见的，所以雇主反而有时会试图雇用数据科学家，但希望他在开发生产代码方面很优秀。所以职位到底是需要具备统计知识的Java开发者，还是具有较强的Java技术的统计学家，你应该事先询问雇主（如果可能的话，在电话面试的过程中去询问）。然而，有时招聘经理不知道他真正想要的是什么，如果你告诉他你的专业知识所带来的附加价值，你可能会说服他雇用你，哪怕欠缺他们预期的某些技能。对于雇主，招聘Java软件工程师，再要他们学习统计学，比反过来更容易。</p>
<p><strong>数据科学家与统计学家</strong></p>
<p>许多统计学家认为，数据科学是关于分析数据的，但它远不止分析数据。数据科学还涉及实现算法、自动处理数据，并提供自动化的预测和行动，比如：</p>
<p>  ● 分析美国宇航局的照片，以寻找新的行星或小行星。
  ● 自动报价系统。
  ● 自动驾驶（飞机和汽车）。
  ● 在Amazon.com或Facebook上推荐书和朋友。
  ● 针对所有酒店客房的客户定制（实时）定价系统。
  ● 在计算化学中模拟用于癌症治疗的新分子。
  ● 流行病的早期检测。
  ● （实时）估计美国所有房屋的价值（Zillow.com）。
  ● 高频交易。
  ● 为用户和网页匹配谷歌广告，以最大限度地提高转化率。
  ● 为所有谷歌搜索返回高度相关的结果。
  ● 信用卡交易评分（欺诈检测）。
  ● 税收欺诈检测与恐怖行为检测。
  ● 天气预报。</p>
<p>所有这些都涉及统计科学和TB级的数据。大多数做这些类型的项目的人，并不称自己为统计学家。他们称自己为数据科学家。</p>
<p>几个世纪以来，统计学家一直在收集数据并进行线性回归分析。300年前、20年前、现在或在2015年由统计学家进行的DAD，跟如今数据科学家进行的DAD大相径庭。关键是，最终随着越来越多的统计学家学会这些新技术，而更多的数据科学家学会统计科学知识（采样、实验设计、置信区间——不只是第5章中描述的那些），数据科学家和统计学家之间的边界将变得更加模糊。事实上，我可以看到另一种数据科学家正在兴起：具备深厚统计知识的数据科学家。</p>
<p><strong>数据科学家和计算机科学家的区别是，数据科学家有更强大的统计学背景，特别是在计算统计方面，但有时则是在实验设计、采样和蒙特卡洛模拟方面。</strong></p>
<p><strong>数据科学家与业务分析师</strong>
业务分析师专注于数据库设计（高层次的数据库建模，包括指标定义、仪表盘设计、检索和生成管理报告，并设计报警系统）、评估各种业务项目和支出的投资回报率及预算问题。一些业务分析师从事营销或财务的规划、优化和风险管理工作。许多业务分析师从事高层次的项目管理工作，直接向公司主管汇报。</p>
<p>有些任务也由数据科学家完成，特别是在较小的公司：指标的创建和定义、高层次的数据库设计（收集什么样的数据以及如何收集），或计算营销，甚至增长黑客（最近创造的一个词，来形容一种角色，它能够快速增加公司互联网访问流量，扩大公司或产品的影响力，这种工作涉及较强的工程和分析技能）。</p>
<p>数据科学家让业务分析师有提升空间，例如，帮助将报表制作过程自动化，使数据提取速度更快。数据科学家还可以教给业务分析师FTP和基础的UNIX指令知识：ls -l、rm -i、head、tail、cat、cp、mv、sort、grep、uniq -c及管道和重定向操作符（|, &gt;）。然后，可以在数据库服务器上编程或安装一段代码（业务分析师通常是通过浏览器或工具，如Toad或Brio访问服务器），以检索数据。所有的业务分析师都必须做的是：</p>
<p>1．创建SQL查询（甚至要有可视化工具），并保存为SQL文本文件。
2．将它上传到服务器并运行程序（例如，一个Python脚本，读取SQL文件并执行它，检索数据，并将结果存储在CSV文件中）。
3．输出结果（CSV文件）到业务分析师的电脑中，做进一步分析。</p>
<p>对于业务分析师和数据科学家，这样的合作是双赢的。在实践中，这样的合作已经帮助业务分析师提取的数据比他们过去所使用的数据要大100倍，而且提取速度快10倍。</p>
<p>总之，数据科学家并不是业务分析师，但前者可以极大地帮助后者，包括帮助业务分析师将任务自动化。此外，如果数据科学家能带来额外的价值，具备额外的经验，他更容易找到工作，特别是在只有一个职位预算的公司，当雇主不能确定是雇用业务分析师（开展整体分析和数据任务）还是数据科学家（有商业头脑，可以执行一些通常分配给业务分析师的任务）时。在一般情况下，业务分析师是优先聘请的，但如果数据和算法变得过于复杂，也会雇用数据科学家。如果你创建自己的创业公司，你需要扮演两个角色：数据科学家和业务分析师。</p>
<p>数据科学家的思维方式不同于工程师、运筹学专业人士、计算机科学家。虽然运筹学涉及很多分析，但这一领域的焦点是具体业务优化层面，如库存管理和质量控制。运筹学涉及国防、经济、工程、军事等领域。它采用马尔可夫模型、蒙特卡洛模拟、排队论、随机过程，以及（由于历史原因）Matlab和Informatica工具。</p>
<p>数据科学会遇到两种基本类型的问题。</p>
<p>1．内部数据科学问题，如损坏的数据、粗心的分析或使用不恰当的技术。内部问题不是针对业务而言，而是针对数据科学社区。因此，解决办法包括训练数据科学家更好地工作，要他们遵循最佳做法。
2．业务应用问题是现实世界中的问题，因此要寻求解决方案，如欺诈检测，或识别一个因素是原因还是结果。这些可能涉及内部或外部（第三方）数据。</p>
<p>End</p>
<p>本文作者Vincent Granville，吴博、 张晓峰、季春霖参与编译。
转自：「36大数据」
更多：<a href="36dsj.com">36dsj.com</a></p>
]]></content>
      
        <categories>
            
            <category> 数据分析 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DAND </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> Data scientist </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用Python进行豆瓣影视数据分析]]></title>
      <url>/2017/03/02/%E8%B1%86%E7%93%A3%E5%BD%B1%E8%A7%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8E%A2%E7%B4%A2/</url>
      <content type="html"><![CDATA[<h3 id="豆瓣影视数据分析"><a href="#豆瓣影视数据分析" class="headerlink" title="豆瓣影视数据分析"></a>豆瓣影视数据分析</h3><p>最近学习了Pandas以及相关数据分析的知识，今天尝试使用Pandas对豆瓣影视数据进行分析，数据事先已经通过爬虫抓取，接下来对这个数据进行一些分析，尝试一下数据分析的过程。</p>
<h4 id="定义排名的算法规则"><a href="#定义排名的算法规则" class="headerlink" title="定义排名的算法规则"></a>定义排名的算法规则</h4><p>排名规则主要由两个关键字段构成，一个是影评分数，一个是观影人数，通过对这两个值采用统计学的Z-score标准化方法，来计算排名。</p>
<p>这里我们根据rate和audience计算出一个指数index，我们将用index值来作为排序的依据，并将index作为新的column添加到movie_frame中</p>
<p>index值是由rate和audience相加得到的，我们对rate和audience都采用z-score 标准化，即（数值-平均值）/标准差，来保证两个数值都在相等一定范围内。
<a id="more"></a></p>
<h4 id="数据探索"><a href="#数据探索" class="headerlink" title="数据探索"></a>数据探索</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="comment"># 导入我们事先准备好的csv，dataframe命名为data</span></div><div class="line">data = pd.DataFrame(pd.read_csv(<span class="string">'douban2016all.csv'</span>))</div><div class="line"><span class="comment"># 因为虽然打上了2016的标签，但是部分影视剧不是2016年的，用一行代码过滤时间，仅保留2016年的影视剧</span></div><div class="line">data = data[data.year == <span class="string">'(2016)'</span>]</div><div class="line">data = data[np.isfinite(data[<span class="string">'rate'</span>])] <span class="comment">#去除没有评分的影片</span></div><div class="line">data.reset_index(drop=<span class="keyword">True</span>, inplace=<span class="keyword">True</span>) <span class="comment">#重置index</span></div><div class="line">data.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: left;">
      <th></th>
      <th>actors</th>
      <th>area</th>
      <th>audience</th>
      <th>director</th>
      <th>genre</th>
      <th>rate</th>
      <th>title</th>
      <th>year</th>
      <th>…</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>[“李家鼎”, “谭玉瑛”]</td>
      <td>香港</td>
      <td>73.0</td>
      <td>[“林志荣”, “张洪翅”]</td>
      <td>[“真人秀”]</td>
      <td>9.0</td>
      <td>阿爷厨房 阿爺廚房</td>
      <td>(2016)</td>
      <td>{}</td>
    </tr>
    <tr>
      <th>1</th>
      <td>[“薛皓文”, “詹思萌”, “马刚”, “言杰”, “任萧楠”, “苏芸盟”, “秦子婷”…</td>
      <td>中国大陆</td>
      <td>69.0</td>
      <td>[“蒋丛”]</td>
      <td>[“剧情”]</td>
      <td>3.2</td>
      <td>屠门镇之破茧之子</td>
      <td>(2016)</td>
      <td>{}</td>
    </tr>
    <tr>
      <th>2</th>
      <td>[“吹石一惠”]</td>
      <td>日本</td>
      <td>68.0</td>
      <td>[“NHK”]</td>
      <td>[“纪录片”]</td>
      <td>7.6</td>
      <td>纪实72小时～东京 铁塔下的新年祈愿 ドキュメント72時間 東京タワーで見る初夢は</td>
      <td>(2016)</td>
      <td>{}</td>
    </tr>
    <tr>
      <th>3</th>
      <td>[]</td>
      <td>台湾</td>
      <td>278.0</td>
      <td>[“徐国峰”]</td>
      <td>[“动画”, “短片”]</td>
      <td>6.8</td>
      <td>缺乏名字的场所 缺乏名字的場所</td>
      <td>(2016)</td>
      <td>{}</td>
    </tr>
    <tr>
      <th>4</th>
      <td>[]</td>
      <td>日本</td>
      <td>68.0</td>
      <td>[]</td>
      <td>[“纪录片”]</td>
      <td>8.0</td>
      <td>纪实72小时 隆冬的东京 有一种温暖叫“花子” ドキュメント72時間 真冬の東京 その名は“…</td>
      <td>(2016)</td>
      <td>{}</td>
    </tr>
  </tbody>
</table>
</div>

<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#生成新的dataframe，命名为douban，保留"title","year","actors", "director", "genre", "rate","audience","area"</span></div><div class="line">douban = pd.DataFrame(data, columns=[<span class="string">"title"</span>,<span class="string">"year"</span>,<span class="string">"actors"</span>, <span class="string">"director"</span>, <span class="string">"genre"</span>, <span class="string">"rate"</span>,<span class="string">"audience"</span>,<span class="string">"area"</span>])</div><div class="line">douban.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>year</th>
      <th>actors</th>
      <th>director</th>
      <th>genre</th>
      <th>rate</th>
      <th>audience</th>
      <th>area</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>阿爷厨房 阿爺廚房</td>
      <td>(2016)</td>
      <td>[“李家鼎”, “谭玉瑛”]</td>
      <td>[“林志荣”, “张洪翅”]</td>
      <td>[“真人秀”]</td>
      <td>9.0</td>
      <td>73.0</td>
      <td>香港</td>
    </tr>
    <tr>
      <th>1</th>
      <td>屠门镇之破茧之子</td>
      <td>(2016)</td>
      <td>[“薛皓文”, “詹思萌”, “马刚”, “言杰”, “任萧楠”, “苏芸盟”, “秦子婷”…</td>
      <td>[“蒋丛”]</td>
      <td>[“剧情”]</td>
      <td>3.2</td>
      <td>69.0</td>
      <td>中国大陆</td>
    </tr>
    <tr>
      <th>2</th>
      <td>纪实72小时～东京 铁塔下的新年祈愿 ドキュメント72時間 東京タワーで見る初夢は</td>
      <td>(2016)</td>
      <td>[“吹石一惠”]</td>
      <td>[“NHK”]</td>
      <td>[“纪录片”]</td>
      <td>7.6</td>
      <td>68.0</td>
      <td>日本</td>
    </tr>
    <tr>
      <th>3</th>
      <td>缺乏名字的场所 缺乏名字的場所</td>
      <td>(2016)</td>
      <td>[]</td>
      <td>[“徐国峰”]</td>
      <td>[“动画”, “短片”]</td>
      <td>6.8</td>
      <td>278.0</td>
      <td>台湾</td>
    </tr>
    <tr>
      <th>4</th>
      <td>纪实72小时 隆冬的东京 有一种温暖叫“花子” ドキュメント72時間 真冬の東京 その名は“…</td>
      <td>(2016)</td>
      <td>[]</td>
      <td>[]</td>
      <td>[“纪录片”]</td>
      <td>8.0</td>
      <td>68.0</td>
      <td>日本</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">len(douban) <span class="comment">#查看总体数目</span></div></pre></td></tr></table></figure>
<pre><code>2520
</code></pre><h4 id="数据清洗整理"><a href="#数据清洗整理" class="headerlink" title="数据清洗整理"></a>数据清洗整理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># 将dataframe直接转换成json</span></div><div class="line">douban_json = douban.to_dict(orient =<span class="string">'index'</span>)</div><div class="line">print(douban_json[<span class="number">2510</span>]) </div><div class="line"></div><div class="line">&#123;<span class="string">'title'</span>: <span class="string">'\xe9\xa9\xb4\xe5\xbe\x97\xe6\xb0\xb4'</span>, <span class="string">'area'</span>: <span class="string">'\xe4\xb8\xad\xe5\x9b\xbd\xe5\xa4\xa7\xe9\x99\x86'</span>, <span class="string">'audience'</span>: <span class="number">229548.0</span>, <span class="string">'director'</span>: <span class="string">'["\xe5\x91\xa8\xe7\x94\xb3", "\xe5\x88\x98\xe9\x9c\xb2"]'</span>, <span class="string">'rate'</span>: <span class="number">8.3</span>, <span class="string">'actors'</span>: <span class="string">'["\xe4\xbb\xbb\xe7\xb4\xa0\xe6\xb1\x90", "\xe5\xa4\xa7\xe5\x8a\x9b", "\xe5\x88\x98\xe5\xb8\x85\xe8\x89\xaf", "\xe8\xa3\xb4\xe9\xad\x81\xe5\xb1\xb1", "\xe9\x98\xbf\xe5\xa6\x82\xe9\x82\xa3", "\xe9\x9f\xa9\xe5\xbd\xa6\xe5\x8d\x9a", "\xe5\x8d\x9c\xe5\x86\xa0\xe4\xbb\x8a", "\xe7\x8e\x8b\xe5\xa0\x83", "\xe9\xab\x98\xe9\x98\xb3", "\xe8\x8b\x8f\xe5\x8d\x83\xe8\xb6\x8a", "\xe6\x9f\xa5\xe5\xb0\x94\xe6\x96\xaf\xc2\xb7\xe4\xba\x9a\xe7\x91\x9f", "\xe7\x8e\x8b\xe5\xb3\xb0"]'</span>, <span class="string">'year'</span>: <span class="string">'(2016)'</span>, <span class="string">'genre'</span>: <span class="string">'["\xe5\x89\xa7\xe6\x83\x85", "\xe5\x96\x9c\xe5\x89\xa7"]'</span>&#125;</div></pre></td></tr></table></figure>
<p>我们观察到actors, director,genre键所代表的值都是字符串，不是我们想要的list形式，我们需要把这些值转变变成一个list方便之后的读取。</p>
<p>举个例子，在导演这里，我们希望把’director’: ‘[“周申”, “刘露”]’转变成’director’: [‘周申’, ‘刘露’]</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 这是一个update函数，用于更新douban_json中的actors, director, genre键下的值</span></div><div class="line"><span class="comment">#data是指我们要导入的数据，item就是指我们要更新的值的键，比如"actors"，"director"这种</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(data, item)</span>:</span></div><div class="line">    <span class="keyword">for</span> movie <span class="keyword">in</span> data:</div><div class="line">        aa = []</div><div class="line">        <span class="keyword">if</span> item <span class="keyword">in</span> data[movie]:</div><div class="line">            subset = data[movie][item]</div><div class="line">            sublist_new = subset[<span class="number">1</span>:<span class="number">-1</span>].split(<span class="string">","</span>)</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> sublist_new:</div><div class="line">                i = i.replace(<span class="string">" "</span>, <span class="string">""</span>)</div><div class="line">                i = i.replace(<span class="string">'"'</span>,<span class="string">''</span>)</div><div class="line">                aa.append(i)</div><div class="line">        data[movie][item] = aa</div><div class="line">    <span class="keyword">return</span> data</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 更新后的json命名为new_data</span></div><div class="line">new_data = update(douban_json,<span class="string">"actors"</span>) </div><div class="line">new_data = update(douban_json,<span class="string">"director"</span>)</div><div class="line">new_data = update(douban_json,<span class="string">"genre"</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看任意一个new_data中的值</span></div><div class="line">new_data[<span class="number">2510</span>]</div></pre></td></tr></table></figure>
<pre><code>{&apos;actors&apos;: [&apos;\xe4\xbb\xbb\xe7\xb4\xa0\xe6\xb1\x90&apos;,
  &apos;\xe5\xa4\xa7\xe5\x8a\x9b&apos;,
  &apos;\xe5\x88\x98\xe5\xb8\x85\xe8\x89\xaf&apos;,
  &apos;\xe8\xa3\xb4\xe9\xad\x81\xe5\xb1\xb1&apos;,
  &apos;\xe9\x98\xbf\xe5\xa6\x82\xe9\x82\xa3&apos;,
  &apos;\xe9\x9f\xa9\xe5\xbd\xa6\xe5\x8d\x9a&apos;,
  &apos;\xe5\x8d\x9c\xe5\x86\xa0\xe4\xbb\x8a&apos;,
  &apos;\xe7\x8e\x8b\xe5\xa0\x83&apos;,
  &apos;\xe9\xab\x98\xe9\x98\xb3&apos;,
  &apos;\xe8\x8b\x8f\xe5\x8d\x83\xe8\xb6\x8a&apos;,
  &apos;\xe6\x9f\xa5\xe5\xb0\x94\xe6\x96\xaf\xc2\xb7\xe4\xba\x9a\xe7\x91\x9f&apos;,
  &apos;\xe7\x8e\x8b\xe5\xb3\xb0&apos;],
 &apos;area&apos;: &apos;\xe4\xb8\xad\xe5\x9b\xbd\xe5\xa4\xa7\xe9\x99\x86&apos;,
 &apos;audience&apos;: 229548.0,
 &apos;director&apos;: [&apos;\xe5\x91\xa8\xe7\x94\xb3&apos;, &apos;\xe5\x88\x98\xe9\x9c\xb2&apos;],
 &apos;genre&apos;: [&apos;\xe5\x89\xa7\xe6\x83\x85&apos;, &apos;\xe5\x96\x9c\xe5\x89\xa7&apos;],
 &apos;rate&apos;: 8.3,
 &apos;title&apos;: &apos;\xe9\xa9\xb4\xe5\xbe\x97\xe6\xb0\xb4&apos;,
 &apos;year&apos;: &apos;(2016)&apos;}
</code></pre><p>由于我们此次探索的是国产影视数据，所以这里需要筛选掉非国产制作的影视剧，这里的规则是通过查找”area”是否包含“中国”，所以，严格意义上来说，合资也包含在内了。
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 排除非中国制作的影视剧</span></div><div class="line">notchina = [movie <span class="keyword">for</span> movie <span class="keyword">in</span> new_data <span class="keyword">if</span> new_data[movie][<span class="string">"area"</span>].find(<span class="string">"中国"</span>) != <span class="number">0</span>]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> notchina:</div><div class="line">    new_data.pop(i)</div><div class="line">len(new_data)</div></pre></td></tr></table></figure></p>
<pre><code>644
</code></pre><p>数据已经清理完毕，最终new_data里面保存了我们清理后的结果，接下来我们将对new_data进行数据分析</p>
<h4 id="数据分析探索"><a href="#数据分析探索" class="headerlink" title="数据分析探索"></a>数据分析探索</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 把清理过后的josn格式的数据new_data转换为pandas dataframe，命名为new_data_frame</span></div><div class="line">new_data_frame = pd.DataFrame.from_dict(new_data,orient=<span class="string">'index'</span>)</div><div class="line">new_data_frame.head(<span class="number">10</span>)</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>area</th>
      <th>audience</th>
      <th>director</th>
      <th>rate</th>
      <th>actors</th>
      <th>year</th>
      <th>genre</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>屠门镇之破茧之子</td>
      <td>中国大陆</td>
      <td>69.0</td>
      <td>[蒋丛]</td>
      <td>3.2</td>
      <td>[薛皓文, 詹思萌, 马刚, 言杰, 任萧楠, 苏芸盟, 秦子婷, 蒋瑞征]</td>
      <td>(2016)</td>
      <td>[剧情]</td>
    </tr>
    <tr>
      <th>14</th>
      <td>手机芯战</td>
      <td>中国大陆</td>
      <td>165.0</td>
      <td>[冯小刚]</td>
      <td>4.7</td>
      <td>[冯小刚, 余文乐]</td>
      <td>(2016)</td>
      <td>[短片]</td>
    </tr>
    <tr>
      <th>15</th>
      <td>爆笑先森</td>
      <td>中国大陆</td>
      <td>171.0</td>
      <td>[崔志佳]</td>
      <td>5.0</td>
      <td>[崔志佳, 潘斌龙, 肖旭]</td>
      <td>(2016)</td>
      <td>[]</td>
    </tr>
    <tr>
      <th>22</th>
      <td>我的朋友陈白露小姐</td>
      <td>中国大陆</td>
      <td>1929.0</td>
      <td>[陈昆晖]</td>
      <td>3.9</td>
      <td>[陈娅安, 张天爱, 屈楚萧, 李子峰, 李茜, 明道, 谭凯, 周奕彤, 崔可法, 李卓霖…</td>
      <td>(2016)</td>
      <td>[剧情, 爱情]</td>
    </tr>
    <tr>
      <th>25</th>
      <td>半面人 三剑豪之半面人</td>
      <td>中国大陆</td>
      <td>57.0</td>
      <td>[洪德伟，唐妍，杨学浦，冯艾]</td>
      <td>6.3</td>
      <td>[余志成, 李京, 谢松博]</td>
      <td>(2016)</td>
      <td>[剧情, 动作, 动画, 奇幻]</td>
    </tr>
    <tr>
      <th>26</th>
      <td>年兽大作战</td>
      <td>中国大陆</td>
      <td>2099.0</td>
      <td>[张扬]</td>
      <td>5.7</td>
      <td>[雷佳音, 周冬雨, 陈赫, 陶虹, 郭涛, 郭子睿, 刘仪伟, 沈腾, 张一白, 王迅, …</td>
      <td>(2016)</td>
      <td>[喜剧, 动画, 奇幻]</td>
    </tr>
    <tr>
      <th>27</th>
      <td>假如我有超能力</td>
      <td>中国大陆</td>
      <td>448.0</td>
      <td>[刘迪洋]</td>
      <td>7.7</td>
      <td>[王子睿, 刘语乔, 张歌, 杨舒枫]</td>
      <td>(2016)</td>
      <td>[喜剧, 爱情, 奇幻]</td>
    </tr>
    <tr>
      <th>28</th>
      <td>诡娃</td>
      <td>中国大陆</td>
      <td>487.0</td>
      <td>[蒋国权]</td>
      <td>2.4</td>
      <td>[李抒航, 程媛媛, 孔维]</td>
      <td>(2016)</td>
      <td>[惊悚, 恐怖]</td>
    </tr>
    <tr>
      <th>30</th>
      <td>超级女声2016</td>
      <td>中国大陆</td>
      <td>122.0</td>
      <td>[周山]</td>
      <td>4.5</td>
      <td>[史兆怡, 方圆, 张晓钰, 王金金, 黄汐源, 汪睿, 李雨, 袁子仪, 金雯昕, 强东玥…</td>
      <td>(2016)</td>
      <td>[音乐, 真人秀]</td>
    </tr>
    <tr>
      <th>34</th>
      <td>中国好歌曲 第三季</td>
      <td>中国大陆</td>
      <td>2089.0</td>
      <td>[]</td>
      <td>7.2</td>
      <td>[刘欢, 陶喆, 范晓萱, 胡海泉, 陈羽凡]</td>
      <td>(2016)</td>
      <td>[音乐, 真人秀]</td>
    </tr>
  </tbody>
</table>
</div>


<h4 id="最佳影片和最差影片"><a href="#最佳影片和最差影片" class="headerlink" title="最佳影片和最差影片"></a>最佳影片和最差影片</h4><p>新建一个movie_frame的dataframe，只保留”title”,”rate”, “audience”</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 新建一个movie_frame的dataframe，只保留"title","rate", "audience"</span></div><div class="line">movie_frame = pd.DataFrame(new_data_frame, columns = [<span class="string">"title"</span>,<span class="string">"rate"</span>, <span class="string">"audience"</span>])</div><div class="line">movie_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>rate</th>
      <th>audience</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>屠门镇之破茧之子</td>
      <td>3.2</td>
      <td>69.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>手机芯战</td>
      <td>4.7</td>
      <td>165.0</td>
    </tr>
    <tr>
      <th>15</th>
      <td>爆笑先森</td>
      <td>5.0</td>
      <td>171.0</td>
    </tr>
    <tr>
      <th>22</th>
      <td>我的朋友陈白露小姐</td>
      <td>3.9</td>
      <td>1929.0</td>
    </tr>
    <tr>
      <th>25</th>
      <td>半面人 三剑豪之半面人</td>
      <td>6.3</td>
      <td>57.0</td>
    </tr>
  </tbody>
</table>
</div>


<p>根据rate和audience计算出一个指数index，我们将用index值来作为排序的依据，并将index作为新的column添加到movie_frame中。</p>
<p>index值是由rate和audience相加得到的，我们对rate和audience都采用z-score 标准化，即（数值-平均值）/标准差，来保证两个数值都在相等一定范围内。</p>
<p>也可以采用（数值-最小值）/（最大值-最小值）来保证rate和audience标准化后的值在（0，1）范围内 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 计算index指数 </span></div><div class="line">movie_frame[<span class="string">'index'</span>] = (movie_frame.rate - movie_frame.rate.mean())/movie_frame.rate.std() + (movie_frame.audience - movie_frame.audience.mean())/movie_frame.audience.std()</div><div class="line"></div><div class="line">movie_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>屠门镇之破茧之子</td>
      <td>3.2</td>
      <td>69.0</td>
      <td>-1.826201</td>
    </tr>
    <tr>
      <th>14</th>
      <td>手机芯战</td>
      <td>4.7</td>
      <td>165.0</td>
      <td>-1.009050</td>
    </tr>
    <tr>
      <th>15</th>
      <td>爆笑先森</td>
      <td>5.0</td>
      <td>171.0</td>
      <td>-0.846053</td>
    </tr>
    <tr>
      <th>22</th>
      <td>我的朋友陈白露小姐</td>
      <td>3.9</td>
      <td>1929.0</td>
      <td>-1.385304</td>
    </tr>
    <tr>
      <th>25</th>
      <td>半面人 三剑豪之半面人</td>
      <td>6.3</td>
      <td>57.0</td>
      <td>-0.144325</td>
    </tr>
  </tbody>
</table>
</div>


<p>分别根据index进行升序和倒序排列，找出最佳影片和最差影片</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 最差影片</span></div><div class="line">movie_frame = movie_frame.sort_values(by=<span class="string">'index'</span>)</div><div class="line">movie_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>233</th>
      <td>渡灵人</td>
      <td>2.2</td>
      <td>257.0</td>
      <td>-2.362700</td>
    </tr>
    <tr>
      <th>68</th>
      <td>绝战</td>
      <td>2.3</td>
      <td>443.0</td>
      <td>-2.302330</td>
    </tr>
    <tr>
      <th>415</th>
      <td>功夫四侠</td>
      <td>2.4</td>
      <td>276.0</td>
      <td>-2.253543</td>
    </tr>
    <tr>
      <th>1314</th>
      <td>越囧</td>
      <td>2.4</td>
      <td>320.0</td>
      <td>-2.252099</td>
    </tr>
    <tr>
      <th>117</th>
      <td>诡梦凶铃</td>
      <td>2.4</td>
      <td>385.0</td>
      <td>-2.249966</td>
    </tr>
  </tbody>
</table>
</div>



<p>最佳影片
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 最佳影片</span></div><div class="line">movie_frame = movie_frame.sort_values(by=<span class="string">'index'</span>, ascending=<span class="keyword">False</span>)</div><div class="line">movie_frame.head()</div></pre></td></tr></table></figure></p>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2487</th>
      <td>美人鱼</td>
      <td>6.8</td>
      <td>372061.0</td>
      <td>12.333137</td>
    </tr>
    <tr>
      <th>2503</th>
      <td>湄公河行动</td>
      <td>8.0</td>
      <td>296258.0</td>
      <td>10.497104</td>
    </tr>
    <tr>
      <th>2510</th>
      <td>驴得水</td>
      <td>8.3</td>
      <td>229548.0</td>
      <td>8.471027</td>
    </tr>
    <tr>
      <th>2514</th>
      <td>七月与安生</td>
      <td>7.6</td>
      <td>210274.0</td>
      <td>7.458745</td>
    </tr>
    <tr>
      <th>2480</th>
      <td>大鱼海棠</td>
      <td>6.5</td>
      <td>203513.0</td>
      <td>6.639970</td>
    </tr>
  </tbody>
</table>
</div>


<p>将总表转化为演员，导演和电影类型的dataframe</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 将总表转化为演员，导演和电影类型的dataframe</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_list</span><span class="params">(data, item)</span>:</span>  <span class="comment">#分别获取演员，导演，和类型名单</span></div><div class="line">    results = []</div><div class="line">    <span class="keyword">for</span> movie <span class="keyword">in</span> new_data:</div><div class="line">        <span class="keyword">if</span> item <span class="keyword">in</span> new_data[movie]:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> new_data[movie][item]:</div><div class="line">                <span class="keyword">if</span> len(i)&gt;<span class="number">0</span>:</div><div class="line">                    results.append(i)</div><div class="line">    results = list(set(results))</div><div class="line">    <span class="keyword">return</span> results</div><div class="line"></div><div class="line">actor_list = get_list(new_data, <span class="string">"actors"</span>)</div><div class="line">director_list = get_list(new_data, <span class="string">"director"</span>)</div><div class="line">genre_list = get_list(new_data, <span class="string">"genre"</span>)</div><div class="line">movie_list = get_list(new_data, <span class="string">"title"</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">classbyitem</span><span class="params">(listname, items)</span>:</span></div><div class="line">    sum_list = []</div><div class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> listname:</div><div class="line">        movie_name = []</div><div class="line">        count = <span class="number">0</span></div><div class="line">        total_rate = <span class="number">0</span></div><div class="line">        total_auidence = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> movie <span class="keyword">in</span> new_data:        </div><div class="line">            <span class="keyword">if</span> name <span class="keyword">in</span> new_data[movie][items]:</div><div class="line">                <span class="keyword">if</span> new_data[movie][<span class="string">"rate"</span>] &gt; <span class="number">0</span> <span class="keyword">and</span> new_data[movie][<span class="string">"audience"</span>]&gt;<span class="number">0</span>:</div><div class="line">                    total_rate = total_rate + new_data[movie][<span class="string">"rate"</span>]</div><div class="line">                    total_auidence = total_auidence + new_data[movie][<span class="string">"audience"</span>]</div><div class="line">                    movie_name.append(new_data[movie][<span class="string">"title"</span>])</div><div class="line">                    count = count + <span class="number">1</span>        </div><div class="line">        sum_list.append([name,count,total_rate,total_auidence,movie_name])</div><div class="line">    <span class="keyword">return</span> sum_list</div><div class="line"></div><div class="line">genre_frame = pd.DataFrame(classbyitem(genre_list, <span class="string">"genre"</span>),columns=[<span class="string">"name"</span>, <span class="string">"count"</span>,<span class="string">"total_rate"</span>,<span class="string">"total_audience"</span>,<span class="string">"movies"</span>])</div><div class="line">actor_frame = pd.DataFrame(classbyitem(actor_list, <span class="string">"actors"</span>),columns=[<span class="string">"name"</span>, <span class="string">"count"</span>,<span class="string">"total_rate"</span>, <span class="string">"total_audience"</span>,<span class="string">"movies"</span>])</div><div class="line">director_frame = pd.DataFrame(classbyitem(director_list, <span class="string">"director"</span>),columns=[<span class="string">"name"</span>, <span class="string">"count"</span>,<span class="string">"total_rate"</span>, <span class="string">"total_audience"</span>,<span class="string">"movies"</span>])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看我们之前生成的actor_frame</span></div><div class="line">actor_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>郑国霖</td>
      <td>2</td>
      <td>10.9</td>
      <td>64698.0</td>
      <td>[老九门, 青云志]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>朱袁员</td>
      <td>1</td>
      <td>5.0</td>
      <td>105.0</td>
      <td>[毛泽东三兄弟]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>中村绘里子</td>
      <td>1</td>
      <td>7.1</td>
      <td>1766.0</td>
      <td>[从前有座灵剑山 霊剣山 星屑たちの宴]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>李曼筠</td>
      <td>1</td>
      <td>2.7</td>
      <td>189.0</td>
      <td>[少女龙婆]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>宋运成</td>
      <td>1</td>
      <td>5.3</td>
      <td>77.0</td>
      <td>[寒山令]</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看我们之前生成的director_frame</span></div><div class="line">director_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>余庆</td>
      <td>1</td>
      <td>6.3</td>
      <td>509.0</td>
      <td>[特殊嫌疑犯]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>马伟豪</td>
      <td>1</td>
      <td>4.9</td>
      <td>7033.0</td>
      <td>[我们的十年]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>深圳卫视</td>
      <td>1</td>
      <td>8.1</td>
      <td>554.0</td>
      <td>[深圳卫视“时间的朋友”2016跨年演讲]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>程丹</td>
      <td>1</td>
      <td>7.9</td>
      <td>209.0</td>
      <td>[中国文房四宝]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>赖俊羽</td>
      <td>1</td>
      <td>2.6</td>
      <td>4214.0</td>
      <td>[泡沫之夏]</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看我们之前生成的genre_frame</span></div><div class="line">genre_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>歌舞</td>
      <td>8</td>
      <td>54.8</td>
      <td>3637.0</td>
      <td>[江苏卫视2016跨年演唱会, 星动亚洲 第二季, 2016辽宁卫视春节联欢晚会, 极限公益…</td>
    </tr>
    <tr>
      <th>1</th>
      <td>犯罪</td>
      <td>33</td>
      <td>197.5</td>
      <td>1125388.0</td>
      <td>[拐人 人さらい, 诡梦凶铃, 特殊嫌疑犯, 浴缸神探, 爱的追踪, 轻松+愉快, 十宗罪,…</td>
    </tr>
    <tr>
      <th>2</th>
      <td>戏曲</td>
      <td>1</td>
      <td>7.1</td>
      <td>116.0</td>
      <td>[Lying man 第五季 lying man 第五季]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>脱口秀</td>
      <td>37</td>
      <td>270.2</td>
      <td>85884.0</td>
      <td>[有请老梁, 大学生来了, 电影最TOP, 暴走法条君, 黄小厨的春夏秋冬 第二季, 你正常…</td>
    </tr>
    <tr>
      <th>4</th>
      <td>动作</td>
      <td>49</td>
      <td>268.3</td>
      <td>1286648.0</td>
      <td>[半面人 三剑豪之半面人, 全职法师, 绝战, 白雪公主和三只小猪, 喜乐长安, 看见我和你…</td>
    </tr>
  </tbody>
</table>
</div>


<p>按照我们对最佳影片添加index的方法，计算出actor表中的index指数
注意：因为一名演员2016年可能出演多部电影，所以在计算index指数时候要把total_rate和total_audience除以count转化为平均值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 计算index指数</span></div><div class="line">actor_frame[<span class="string">'rate'</span>] = actor_frame.total_rate/actor_frame[<span class="string">'count'</span>]</div><div class="line">actor_frame[<span class="string">'audience'</span>] = actor_frame.total_audience/actor_frame[<span class="string">'count'</span>]</div><div class="line">actor_frame[<span class="string">'index'</span>] = (actor_frame.rate - actor_frame.rate.mean())/actor_frame.rate.std() + (actor_frame.audience - actor_frame.audience.mean())/actor_frame.audience.std()</div><div class="line">actor_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>郑国霖</td>
      <td>2</td>
      <td>10.9</td>
      <td>64698.0</td>
      <td>[老九门, 青云志]</td>
      <td>5.45</td>
      <td>32349.0</td>
      <td>0.299686</td>
    </tr>
    <tr>
      <th>1</th>
      <td>朱袁员</td>
      <td>1</td>
      <td>5.0</td>
      <td>105.0</td>
      <td>[毛泽东三兄弟]</td>
      <td>5.00</td>
      <td>105.0</td>
      <td>-0.895912</td>
    </tr>
    <tr>
      <th>2</th>
      <td>中村绘里子</td>
      <td>1</td>
      <td>7.1</td>
      <td>1766.0</td>
      <td>[从前有座灵剑山 霊剣山 星屑たちの宴]</td>
      <td>7.10</td>
      <td>1766.0</td>
      <td>0.413805</td>
    </tr>
    <tr>
      <th>3</th>
      <td>李曼筠</td>
      <td>1</td>
      <td>2.7</td>
      <td>189.0</td>
      <td>[少女龙婆]</td>
      <td>2.70</td>
      <td>189.0</td>
      <td>-2.275758</td>
    </tr>
    <tr>
      <th>4</th>
      <td>宋运成</td>
      <td>1</td>
      <td>5.3</td>
      <td>77.0</td>
      <td>[寒山令]</td>
      <td>5.30</td>
      <td>77.0</td>
      <td>-0.716422</td>
    </tr>
  </tbody>
</table>
</div>


<p>按照index指数，对出演一部以上节目的演员进行排序，找出指数最高的演员</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 指数最高的演员</span></div><div class="line">actor_frame = actor_frame[actor_frame[<span class="string">'count'</span>] &gt; <span class="number">1</span>].sort_values(by=<span class="string">'index'</span>, ascending=<span class="keyword">False</span>)</div><div class="line">actor_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2795</th>
      <td>张涵予</td>
      <td>2</td>
      <td>13.0</td>
      <td>483216.0</td>
      <td>[长城 The Great Wall, 湄公河行动]</td>
      <td>6.50</td>
      <td>241608.0</td>
      <td>6.934855</td>
    </tr>
    <tr>
      <th>2377</th>
      <td>陈宝国</td>
      <td>2</td>
      <td>15.1</td>
      <td>296418.0</td>
      <td>[信者无敌, 湄公河行动]</td>
      <td>7.55</td>
      <td>148209.0</td>
      <td>4.886045</td>
    </tr>
    <tr>
      <th>2010</th>
      <td>张雨绮</td>
      <td>2</td>
      <td>9.8</td>
      <td>377109.0</td>
      <td>[蒸发太平洋 Lost in the Pacific, 美人鱼]</td>
      <td>4.90</td>
      <td>188554.5</td>
      <td>4.451055</td>
    </tr>
    <tr>
      <th>783</th>
      <td>赵健</td>
      <td>2</td>
      <td>13.1</td>
      <td>304126.0</td>
      <td>[九州天空城, 湄公河行动]</td>
      <td>6.55</td>
      <td>152063.0</td>
      <td>4.395645</td>
    </tr>
    <tr>
      <th>534</th>
      <td>卢惠光</td>
      <td>2</td>
      <td>13.2</td>
      <td>297207.0</td>
      <td>[四平青年之浩哥大战古惑仔, 湄公河行动]</td>
      <td>6.60</td>
      <td>148603.5</td>
      <td>4.326433</td>
    </tr>
  </tbody>
</table>
</div>



<p>导演的index指数
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#导演的index指数</span></div><div class="line">director_frame[<span class="string">'rate'</span>] = director_frame.total_rate/director_frame[<span class="string">'count'</span>]</div><div class="line">director_frame[<span class="string">'audience'</span>] = director_frame.total_audience/director_frame[<span class="string">'count'</span>]</div><div class="line">director_frame[<span class="string">'index'</span>] = (director_frame.rate - director_frame.rate.mean())/director_frame.rate.std() + (director_frame.audience - director_frame.audience.mean())/director_frame.audience.std()</div><div class="line">director_frame.head()</div></pre></td></tr></table></figure></p>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>余庆</td>
      <td>1</td>
      <td>6.3</td>
      <td>509.0</td>
      <td>[特殊嫌疑犯]</td>
      <td>6.3</td>
      <td>509.0</td>
      <td>-0.105881</td>
    </tr>
    <tr>
      <th>1</th>
      <td>马伟豪</td>
      <td>1</td>
      <td>4.9</td>
      <td>7033.0</td>
      <td>[我们的十年]</td>
      <td>4.9</td>
      <td>7033.0</td>
      <td>-0.653301</td>
    </tr>
    <tr>
      <th>2</th>
      <td>深圳卫视</td>
      <td>1</td>
      <td>8.1</td>
      <td>554.0</td>
      <td>[深圳卫视“时间的朋友”2016跨年演讲]</td>
      <td>8.1</td>
      <td>554.0</td>
      <td>0.858370</td>
    </tr>
    <tr>
      <th>3</th>
      <td>程丹</td>
      <td>1</td>
      <td>7.9</td>
      <td>209.0</td>
      <td>[中国文房四宝]</td>
      <td>7.9</td>
      <td>209.0</td>
      <td>0.740731</td>
    </tr>
    <tr>
      <th>4</th>
      <td>赖俊羽</td>
      <td>1</td>
      <td>2.6</td>
      <td>4214.0</td>
      <td>[泡沫之夏]</td>
      <td>2.6</td>
      <td>4214.0</td>
      <td>-1.970680</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#导演的index指数排名</span></div><div class="line">director_frame = director_frame.sort_values(by=<span class="string">'index'</span>, ascending=<span class="keyword">False</span>)</div><div class="line">director_frame.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>447</th>
      <td>周星驰</td>
      <td>1</td>
      <td>6.8</td>
      <td>372061.0</td>
      <td>[美人鱼]</td>
      <td>6.8</td>
      <td>372061.0</td>
      <td>11.635786</td>
    </tr>
    <tr>
      <th>464</th>
      <td>林超贤</td>
      <td>1</td>
      <td>8.0</td>
      <td>296258.0</td>
      <td>[湄公河行动]</td>
      <td>8.0</td>
      <td>296258.0</td>
      <td>9.936759</td>
    </tr>
    <tr>
      <th>207</th>
      <td>周申</td>
      <td>1</td>
      <td>8.3</td>
      <td>229548.0</td>
      <td>[驴得水]</td>
      <td>8.3</td>
      <td>229548.0</td>
      <td>8.037109</td>
    </tr>
    <tr>
      <th>143</th>
      <td>刘露</td>
      <td>1</td>
      <td>8.3</td>
      <td>229548.0</td>
      <td>[驴得水]</td>
      <td>8.3</td>
      <td>229548.0</td>
      <td>8.037109</td>
    </tr>
    <tr>
      <th>463</th>
      <td>曾国祥</td>
      <td>1</td>
      <td>7.6</td>
      <td>210274.0</td>
      <td>[七月与安生]</td>
      <td>7.6</td>
      <td>210274.0</td>
      <td>7.067446</td>
    </tr>
  </tbody>
</table>
</div>



<p>电影类型的index指数及index指数排名
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 电影类型的index指数及index指数排名</span></div><div class="line">genre_frame[<span class="string">'rate'</span>] = genre_frame.total_rate/genre_frame[<span class="string">'count'</span>]</div><div class="line">genre_frame[<span class="string">'audience'</span>] = genre_frame.total_audience/genre_frame[<span class="string">'count'</span>]</div><div class="line">genre_frame[<span class="string">'index'</span>] = (genre_frame.rate - genre_frame.rate.mean())/genre_frame.rate.std() + (genre_frame.audience - genre_frame.audience.mean())/genre_frame.audience.std()</div><div class="line">genre_frame = genre_frame.sort_values(by=<span class="string">'index'</span>, ascending=<span class="keyword">False</span>)</div><div class="line">genre_frame.head()</div></pre></td></tr></table></figure></p>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>count</th>
      <th>total_rate</th>
      <th>total_audience</th>
      <th>movies</th>
      <th>rate</th>
      <th>audience</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>犯罪</td>
      <td>33</td>
      <td>197.5</td>
      <td>1125388.0</td>
      <td>[拐人 人さらい, 诡梦凶铃, 特殊嫌疑犯, 浴缸神探, 爱的追踪, 轻松+愉快, 十宗罪,…</td>
      <td>5.984848</td>
      <td>34102.666667</td>
      <td>3.119047</td>
    </tr>
    <tr>
      <th>4</th>
      <td>动作</td>
      <td>49</td>
      <td>268.3</td>
      <td>1286648.0</td>
      <td>[半面人 三剑豪之半面人, 全职法师, 绝战, 白雪公主和三只小猪, 喜乐长安, 看见我和你…</td>
      <td>5.475510</td>
      <td>26258.122449</td>
      <td>1.768434</td>
    </tr>
    <tr>
      <th>19</th>
      <td>纪录片</td>
      <td>51</td>
      <td>424.7</td>
      <td>111765.0</td>
      <td>[拐人 人さらい, 张梁记, 书房里的中国：纸寿千年, 米歇尔·福柯, 跑步日记, 聆听中国…</td>
      <td>8.327451</td>
      <td>2191.470588</td>
      <td>1.639117</td>
    </tr>
    <tr>
      <th>21</th>
      <td>奇幻</td>
      <td>50</td>
      <td>269.1</td>
      <td>1257842.0</td>
      <td>[半面人 三剑豪之半面人, 年兽大作战, 假如我有超能力, 孙悟空七打九尾狐, 暮夜传说, …</td>
      <td>5.382000</td>
      <td>25156.840000</td>
      <td>1.558814</td>
    </tr>
    <tr>
      <th>13</th>
      <td>传记</td>
      <td>5</td>
      <td>39.1</td>
      <td>1853.0</td>
      <td>[摇摇晃晃的人间, 毛泽东三兄弟, 创新之路, 海棠依旧, 木心物语]</td>
      <td>7.820000</td>
      <td>370.600000</td>
      <td>0.971681</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="根据Index电影指数我们可以得出以下结论："><a href="#根据Index电影指数我们可以得出以下结论：" class="headerlink" title="根据Index电影指数我们可以得出以下结论："></a>根据Index电影指数我们可以得出以下结论：</h4><ol>
<li>2016年度华语影视圈最佳影片：《美人鱼》</li>
<li>2016年度华语影视圈最佳演员：张涵予</li>
<li>2016年度华语影视圈最佳导演：孔笙</li>
<li>2016年度华语观众最喜欢的影视类型：犯罪（难道是大家心里都有一颗想要犯罪的心？）</li>
</ol>
]]></content>
      
        <categories>
            
            <category> DAND </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> DAND </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> Pandas </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python回调函数的理解(转)]]></title>
      <url>/2017/02/24/Python%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>作者：桥头堡
链接：<a href="https://www.zhihu.com/question/19801131/answer/27459821" target="_blank" rel="external">https://www.zhihu.com/question/19801131/answer/27459821</a>
来源：知乎</p>
<p><strong>什么是回调函数？</strong></p>
<p>我们绕点远路来回答这个问题。</p>
<p>编程分为两类：<strong>系统编程（system programming）</strong>和<strong>应用编程（application programming）</strong>。所谓系统编程，简单来说，就是编写库；而应用编程就是利用写好的各种库来编写具某种功用的程序，也就是应用。系统程序员会给自己写的库留下一些接口，即API（application programming interface，应用编程接口），以供应用程序员使用。所以在抽象层的图示里，库位于应用的底下。</p>
<p>当程序跑起来时，一般情况下，应用程序（application program）会时常通过API调用库里所预先备好的函数。但是有些库函数（library function）却要求应用先传给它一个函数，好在合适的时候调用，以完成目标任务。这个被传入的、后又被调用的函数就称为回调函数（callback function）。</p>
<p>打个比方，有一家旅馆提供叫醒服务，但是要求旅客自己决定叫醒的方法。可以是打客房电话，也可以是派服务员去敲门，睡得死怕耽误事的，还可以要求往自己头上浇盆水。这里，“叫醒”这个行为是旅馆提供的，相当于库函数，但是叫醒的方式是由旅客决定并告诉旅馆的，也就是回调函数。而旅客告诉旅馆怎么叫醒自己的动作，也就是把回调函数传入库函数的动作，称为登记回调函数（to register a callback function）。如下图所示：
<img src="/2017/02/24/Python回调函数的理解/1.jpg" alt="图 1" title="图 1"></p>
<p>可以看到，回调函数通常和应用处于同一抽象层（因为传入什么样的回调函数是在应用级别决定的）。而回调就成了一个高层调用底层，底层再回过头来调用高层的过程。（我认为）这应该是回调最早的应用之处，也是其得名如此的原因。</p>
<p>回调机制的优势</p>
<p>从上面的例子可以看出，回调机制提供了非常大的灵活性。请注意，从现在开始，我们把图中的库函数改称为中间函数了，这是因为回调并不仅仅用在应用和库之间。任何时候，只要想获得类似于上面情况的灵活性，都可以利用回调。</p>
<p>这种灵活性是怎么实现的呢？乍看起来，回调似乎只是函数间的调用，但仔细一琢磨，可以发现两者之间的一个关键的不同：在回调中，我们利用某种方式，把回调函数像参数一样传入中间函数。可以这么理解，在传入一个回调函数之前，中间函数是不完整的。换句话说，程序可以在运行时，通过登记不同的回调函数，来决定、改变中间函数的行为。这就比简单的函数调用要灵活太多了。请看下面这段Python写成的回调的简单示例：</p>
<p><code>even.py</code>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#回调函数1</span></div><div class="line"><span class="comment">#生成一个2k形式的偶数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span><span class="params">(x)</span></span>:</div><div class="line">    <span class="keyword">return</span> x * <span class="number">2</span></div><div class="line">  </div><div class="line"><span class="comment">#回调函数2</span></div><div class="line"><span class="comment">#生成一个4k形式的偶数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">quadruple</span><span class="params">(x)</span></span>:</div><div class="line">    <span class="keyword">return</span> x * <span class="number">4</span></div></pre></td></tr></table></figure></p>
<p><code>callback_demo.py</code>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> even <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="comment">#中间函数</span></div><div class="line"><span class="comment">#接受一个生成偶数的函数作为参数</span></div><div class="line"><span class="comment">#返回一个奇数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOddNumber</span><span class="params">(k, getEvenNumber)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> + getEvenNumber(k)</div><div class="line">    </div><div class="line"><span class="comment">#起始函数，这里是程序的主函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span>    </div><div class="line">    k = <span class="number">1</span></div><div class="line">    <span class="comment">#当需要生成一个2k+1形式的奇数时</span></div><div class="line">    i = getOddNumber(k, double)</div><div class="line">    print(i)</div><div class="line">    <span class="comment">#当需要一个4k+1形式的奇数时</span></div><div class="line">    i = getOddNumber(k, quadruple)</div><div class="line">    print(i)</div><div class="line">    <span class="comment">#当需要一个8k+1形式的奇数时</span></div><div class="line">    i = getOddNumber(k, <span class="keyword">lambda</span> x: x * <span class="number">8</span>)</div><div class="line">    print(i)</div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure></p>
<p>运行<code>callback_demp.py</code>，输出如下：
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">3</span></div><div class="line"><span class="number">5</span></div><div class="line"><span class="number">9</span></div></pre></td></tr></table></figure></p>
<p>上面的代码里，给<code>getOddNumber</code>传入不同的回调函数，它的表现也不同，这就是回调机制的优势所在。值得一提的是，上面的第三个回调函数是一个匿名函数。</p>
<p><strong>易被忽略的第三方</strong></p>
<p>通过上面的论述可知，中间函数和回调函数是回调的两个必要部分，不过人们往往忽略了回调里的第三位要角，就是中间函数的调用者。绝大多数情况下，这个调用者可以和程序的主函数等同起来，但为了表示区别，我这里把它称为起始函数（如上面的代码中注释所示）。</p>
<p>之所以特意强调这个第三方，是因为我在网上读相关文章时得到一种印象，很多人把它简单地理解为两个个体之间的来回调用。譬如，很多中文网页在解释“回调”（callback）时，都会提到这么一句话：“If you call me, I will call you back.”我没有查到这句英文的出处。我个人揣测，很多人把起始函数和回调函数看作为一体，大概有两个原因：第一，可能是“回调”这一名字的误导；第二，给中间函数传入什么样的回调函数，是在起始函数里决定的。实际上，回调并不是“你我”两方的互动，而是ABC的三方联动。有了这个清楚的概念，在自己的代码里实现回调时才不容易混淆出错。</p>
<p>另外，回调实际上有两种：<strong>阻塞式回调</strong>和<strong>延迟式回调</strong>。两者的区别在于：阻塞式回调里，回调函数的调用一定发生在起始函数返回之前；而延迟式回调里，回调函数的调用有可能是在起始函数返回之后。这里不打算对这两个概率做更深入的讨论，之所以把它们提出来，也是为了说明强调起始函数的重要性。网上的很多文章，提到这两个概念时，只是笼统地说阻塞式回调发生在主调函数返回之前，却没有明确这个主调函数到底是起始函数还是中间函数，不免让人糊涂，所以这里特意说明一下。另外还请注意，本文中所举的示例均为阻塞式回调。延迟式回调通常牵扯到多线程，我自己还没有完全搞明白，所以这里就不多说了。</p>
<p>回调有三个部分组成：<strong>回调函数</strong>、<strong>中间函数</strong>和<strong>起始函数</strong><br>举个住旅馆叫醒服务的例子：<br>1.旅馆提供叫醒服务是起始函数<br>2.有三种叫醒旅客的方式：打电话叫、服务员敲门叫，在你头上浇盆水，这三种叫醒方式属于三种回调函数<br>3.旅客通知旅馆使用何种叫醒方式的动作，属于中间函数  </p>
<p>一、创建三种回调函数：<br>1.morning_call(me)<br>2.knocking_door(me)<br>3.watering_head(me)  </p>
<p>二、创建中间函数：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ask_for_wakeup</span><span class="params">(people, call_function)</span></span></div><div class="line"><span class="keyword">return</span> call_function(people)</div></pre></td></tr></table></figure></p>
<p>三、用起始函数（主函数）来做这件事情
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span></span>:</div><div class="line"><span class="keyword">return</span> ask_for_wakeup(<span class="string">'Antony'</span>, watering_head)</div></pre></td></tr></table></figure></p>
<p>酱紫，最后一部调用回调函数，又返回回调函数，最终得到结果</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shell实现web服务进程监控并自动重启]]></title>
      <url>/2017/02/09/shell-monitor/</url>
      <content type="html"><![CDATA[<h3 id="一、目的需求"><a href="#一、目的需求" class="headerlink" title="一、目的需求"></a>一、目的需求</h3><p>根据业务需要，目前负责维护的产品形式基本是属于分布式的，有多个web服务部署在不同项目现场，针对这些web服务的维护就成了比较麻烦的事情。为了保障系统服务，之前已经采用LNMP+zabbix的方案搭建了一套web服务监控系统，可以方便的查看各项目的web服务状态，方便及时发现问题并解决。<br>采用Grafana的前端监控界面（比zabbix自带的图表好看点 - -）：<br><img src="/2017/02/09/shell-monitor/1.png" alt="1.png" title=""> </p>
<p>不过虽然有zabbix贴心的监控和提醒（实际上由于网络不稳定或等等玄学因素，冗余警告非常多，多了就烦了。。。），但是解决具体问题还是需要远程到项目现场进行，特别是一些进程运行时间久了之后的异常，或者数据库连接异常断开等，简单重启一下web服务即可解决。但是，问题频繁了之后就很浪费时间了，于是打算通过shell来监控各项目地的web服务并实现异常自动重启，作为程序猿，当然要用代码来偷懒啦~（懒惰是三大生产力之一）</p>
<h3 id="二、分析过程"><a href="#二、分析过程" class="headerlink" title="二、分析过程"></a>二、分析过程</h3><p>思路如下：</p>
<p>1.定时执行monitor监控脚本，获取服务状态；</p>
<p>2.monitor功能：
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>:web服务异常</div><div class="line"></div><div class="line">   restart web服务</div><div class="line"></div><div class="line"><span class="keyword">else</span>:皆大欢喜</div></pre></td></tr></table></figure></p>
<p>逻辑很简单清楚，貌似很容易，不过这里有一个问题，如何判定web服务异常？</p>
<p><strong>根据实际经验，异常常见原因共如下几种：</strong></p>
<p>1.web服务进程莫名挂掉；</p>
<p>2.web服务数据库连接失败，多次尝试后挂起；</p>
<p>3.项目地网络出现波动；（不用吐槽，教育网还有偏远地区是这样的，指不定哪天光纤被挖断或者交换机故障(╯▽╰)）</p>
<p><strong>对应解决方案：</strong></p>
<p>1.判断进程是否存在，不存在则重启web服务；</p>
<p>2.这个直接通过shell不好判断，借鉴了之前在zabbix做http监控时的方法，通过模拟登录的方式，登录一个测试页面，获取http_code，若200则正常，非200则属于异常。</p>
<p>3.这个可以通过判断本地服务，如果本地访问无问题则正常。</p>
<h3 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h3><p>monitor逻辑分析清楚了，可以开始进行了，其中模拟登录使用curl来获取http_code。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /bin/sh  </span></div><div class="line">  </div><div class="line">host_dir=<span class="string">"/opt/ybg/"</span>                                     <span class="comment"># 当前用户根目录  </span></div><div class="line">proc_name=<span class="string">"java"</span>                                        <span class="comment"># 进程名  </span></div><div class="line">file_name=<span class="string">"monitor.log"</span>                                <span class="comment"># 日志文件  </span></div><div class="line">pid=0  </div><div class="line">  </div><div class="line">proc_num()                                              <span class="comment"># 计算进程数  </span></div><div class="line">&#123;  </div><div class="line">    num=`ps -ef | grep <span class="variable">$proc_name</span> | grep -v grep | wc <span class="_">-l</span>`  </div><div class="line">    <span class="built_in">return</span> <span class="variable">$num</span>  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">proc_id()                                               <span class="comment"># 进程号  </span></div><div class="line">&#123;  </div><div class="line">    pid=`ps -ef | grep <span class="variable">$proc_name</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`  </div><div class="line">&#125;  </div><div class="line"><span class="comment"># 通过curl模拟登录获取http_code,模拟登录参数仅供参考</span></div><div class="line"><span class="comment"># 如果只需要判断某页面的状态可使用curl -I -s -w "%&#123;http_code&#125;" -o /dev/null http://www.baidu.com/ 直接获取即可</span></div><div class="line">http_code=`curl -I <span class="_">-s</span> -w <span class="string">"%&#123;http_code&#125;"</span> -o <span class="_">-d</span> <span class="string">"userKey=admin&amp;pass=c9127e832b41a"</span> /dev/null  http://portal.ly-sky.com/login.do?login= | head -n 1 | cut <span class="_">-d</span>$<span class="string">' '</span> <span class="_">-f</span>2`  </div><div class="line"></div><div class="line">proc_num  </div><div class="line">number=$?  </div><div class="line"><span class="keyword">if</span> [[ <span class="variable">$number</span> <span class="_">-eq</span> 0 ]]||[[ <span class="variable">$http_code</span> <span class="_">-ne</span> 200 ]]          <span class="comment"># 判断进程是否存在  </span></div><div class="line"><span class="keyword">then</span>   </div><div class="line">    <span class="built_in">cd</span> /opt/ybg/URP/bin/</div><div class="line">    nohup ./run.sh&gt;../logs/urp.log 2&gt;&amp;1 &amp;    <span class="comment"># 重启进程的命令，请相应修改  </span></div><div class="line">    sleep 3                                  <span class="comment">#延迟3秒是为了确保进程已正常启动并方便获取pid，否则有可能获取不到pid</span></div><div class="line">trueproc_id                                         <span class="comment"># 获取新进程号  </span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$pid</span>, `date` &gt;&gt; <span class="variable">$host_dir</span><span class="variable">$file_name</span>      <span class="comment"># 将新进程号和重启时间记录  </span></div><div class="line"><span class="keyword">fi</span> </div></pre></td></tr></table></figure></p>
<p>执行成功的日志记录：</p>
<p>记录了PID和启动时间，前面几条就是因为未加入sleep获取Pid失败，显示为空了</p>
<img src="/2017/02/09/shell-monitor/2.png" alt="2.png" title="">   
<h3 id="四、安装部署"><a href="#四、安装部署" class="headerlink" title="四、安装部署"></a>四、安装部署</h3><p>部署到服务器后只需要在crontab添加任务，定时执行就行了：</p>
<p>[root@localhost ybg]# crontab -e  </p>
<p>添加web服务监控，每5分钟一次，可根据实际要求修改监控频率. 
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*/5 * * * * /opt/monitor.sh</div></pre></td></tr></table></figure></p>
<p>添加完毕后，可以手动kill -9 pid来测试监控是否正常运行。提示：测试时注意生产环境哦，如果服务宕了被老板请去喝茶就不好啦~✧(≖ ◡ ≖✿)</p>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
            <tag> Zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git学习笔记]]></title>
      <url>/2016/11/12/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><strong>git命令：</strong></p>
<p>git add xxx 添加文件</p>
<p>git commit -m “Manual” 提交修改并添加说明，Manual对应本次修改的内容</p>
<p>git log –pretty=oneline 显示提交日志，完整版本号</p>
<p>git reflog 查看命令历史</p>
<p>git reset –hard HEAD^ 回到上一版本</p>
<p>git reset –hard cb926e7e 回到某一个版本</p>
<p>git diff 1.暂存区已有内容，对比工作区和暂存区的内容。2.暂存区无内容，对比工作区和master的内容。</p>
<p>git diff HEAD 对比master和工作区的区别</p>
<p><strong>修改撤回：</strong></p>
<p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout – file。</p>
<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。</p>
<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，可进行版本回退，不过前提是没有推送到远程库。</p>
<p><strong>添加远程库：</strong></p>
<p>git remote add origin git@server-name:path/repo-name.git 关联一个远程库</p>
<p>git push -u origin master 第一次推送master分支的所有内容</p>
<p>git push origin master 推送最新修改</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello HEXO]]></title>
      <url>/2016/11/02/HelloHEXO/</url>
      <content type="html"><![CDATA[<p>本着不折腾不死的精神，费了6个小时，终于把HEXO + github pages的博客搭建起来了，虽然搭建教程一大堆，不过，有些问题还是得自己摸索去解决。不过其实最费时间的其实是注册域名的过程，这里吐槽一下西部数码域名商，域名管理功能实在是差劲，本来早就屯了4个域名，心想这次能用上了，结果各种域名过户失败，导致无法修改DNS解析，提交工单也只是说让重试。一气之下，直接重新在阿里云注册了.com域名，并顺利做好DNS解析（真的不是广告~逃）</p>
<p>别说，HEXO还是用着很爽，可以愉快的使用markdown了，这下可以把之前数据分析的相关.md直接发布过来了，哈哈哈！最关键的是没有那么多限制了，自己的后台，自己的域名，爱怎么折腾怎么折腾。github pages简直是解放VPS管理的神器，不用关心服务器，web服务了，安心写内容即可，赞赞赞！新博客第一篇，Mark一下，改天陆续把以前的文章迁移过来。</p>
<p><a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">HEXO’s document</a></p>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Beatiful Soup的效率问题]]></title>
      <url>/2016/10/29/Beatiful-Soup%E7%9A%84%E6%95%88%E7%8E%87%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>今天写爬虫的时候看bs4的官方文档，说使用lxml作为解析器比使用内置解析器速度快很多，于是写了个函数测试了一下，但不知道为什么，测试跑出来的结果刚好相反，暂时未找到原因，先做下记录后续继续研究。
<img src="/2016/10/29/Beatiful-Soup的效率问题/1.png" alt="图 1" title="图 1"></p>
<p>测试代码如下：
<figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> bs4 import BeautifulSoup</div><div class="line">import <span class="built_in">time</span></div><div class="line"><span class="keyword">from</span> wswp.WebScraping import download</div><div class="line"></div><div class="line">def time_test():</div><div class="line">    FIELDS = (<span class="string">'area'</span>, <span class="string">'population'</span>, <span class="string">'iso'</span>, <span class="string">'country'</span>, <span class="string">'capital'</span>, <span class="string">'continent'</span>, <span class="string">'tld'</span>, <span class="string">'currency_code'</span>, <span class="string">'currency_name'</span>, <span class="string">'phone'</span>, <span class="string">'postal_code_format'</span>, <span class="string">'postal_code_regex'</span>, <span class="string">'languages'</span>,  <span class="string">'neighbours'</span>)</div><div class="line">    NUM_ITERATIONS = <span class="number">1000</span> <span class="meta"># number of times to test each scraper</span></div><div class="line">    html = download(<span class="string">'http://example.webscraping.com/view/Aland-Islands-2'</span>)</div><div class="line">    start = <span class="built_in">time</span>.<span class="built_in">time</span>()</div><div class="line">    <span class="keyword">for</span> <span class="built_in">name</span> <span class="built_in">in</span> [<span class="string">'html.parser'</span>, <span class="string">'lxml'</span>]:</div><div class="line">        <span class="keyword">for</span> i <span class="built_in">in</span> range(NUM_ITERATIONS):</div><div class="line">            result = &#123;&#125;</div><div class="line">            soup = BeautifulSoup(html, <span class="built_in">name</span>)</div><div class="line">            <span class="keyword">for</span> field <span class="built_in">in</span> FIELDS:</div><div class="line">                result[field]=soup.<span class="built_in">find</span>(<span class="string">'tr'</span>, id=<span class="string">'places_%s__row'</span> % field).<span class="built_in">find</span>(<span class="string">'td'</span>, class_=<span class="string">'w2p_fw'</span>).<span class="built_in">text</span></div><div class="line">            <span class="built_in">assert</span>(result[<span class="string">'area'</span>] == <span class="string">'1,580 square kilometres'</span>)</div><div class="line">        end = <span class="built_in">time</span>.<span class="built_in">time</span>()</div><div class="line">        print(<span class="string">'%s the time is: %.2f seconds'</span> % (<span class="built_in">name</span>, (end - start)))</div><div class="line"></div><div class="line">time_test()</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> BeatifulSoup </tag>
            
            <tag> lxml </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle索引原理]]></title>
      <url>/2016/10/14/oracle-index/index/</url>
      <content type="html"><![CDATA[<h3 id="B-TREE索引"><a href="#B-TREE索引" class="headerlink" title="B-TREE索引"></a>B-TREE索引</h3><p>一个B树索引只有一个根节点，它实际就是位于树的最顶端的分支节点。
可以用下图一来描述B树索引的结构。其中，B表示分支节点，而L表示叶子节点。<br><img src="/2016/10/14/oracle-index/index/1.jpg" alt="B-Tree Index" title="B-Tree Index">  </p>
<p>对于分支节点块（包括根节点块）来说，其所包含的索引条目都是按照顺序排列的（缺省是升序排列，也可以在创建索引时指定为降序排列）。每个索引条目（也可以叫做每条记录）都具有两个字段。第一个字段表示当前该分支节点块下面所链接的索引块中所包含的最小键值；第二个字段为四个字节，表示所链接的索引块的地址，该地址指向下面一个索引块。在一个分支节点块中所能容纳的记录行数由数据块大小以及索引键值的长度决定。比如从上图一可以看到，对于根节点块来说，包含三条记录，分别为（0 B1）、（500 B2）、（1000 B3），它们指向三个分支节点块。其中的0、500和1000分别表示这三个分支节点块所链接的键值的最小值。而B1、B2和B3则表示所指向的三个分支节点块的地址。</p>
<p>对于叶子节点块来说，其所包含的索引条目与分支节点一样，都是按照顺序排列的（缺省是升序排列，也可以在创建索引时指定为降序排列）。每个索引条目（也可以叫做每条记录）也具有两个字段。第一个字段表示索引的键值，对于单列索引来说是一个值；而对于多列索引来说则是多个值组合在一起的。第二个字段表示键值所对应的记录行的ROWID，该ROWID是记录行在表里的物理地址。如果索引是创建在非分区表上或者索引是分区表上的本地索引的话，则该ROWID占用6个字节；如果索引是创建在分区表上的全局索引的话，则该ROWID占用10个字节。</p>
<h3 id="bitmap索引"><a href="#bitmap索引" class="headerlink" title="bitmap索引"></a>bitmap索引</h3><p>位图（bitmap）索引是另外一种索引类型，它的组织形式与B树索引相同，也是一棵平衡树。与B树索引的区别在于叶子节点里存放索引条目的方式不同。从前面我们知道，B树索引的叶子节点里，对于表里的每个数据行，如果被索引列的值不为空的，则会为该记录行在叶子节点里维护一个对应的索引条目。而位图索引则不是这样，其叶子节点里存放的索引条目如下图所示。</p>
<p>假设某个表T里所有的记录在列C1上只具有三个值：01、02和03。在表T的C1列上创建位图索引以后，则叶子节点的内容如图9-14所示。可以看到，位图索引只有三个索引条目，也就是每个C1列的值对应一个索引条目。位图索引条目上还包含表里第一条记录所对应的ROWID以及最后一条记录所对应的ROWID。索引条目的最后一部分则是由多个bit位所组成的bitmap，每个bit位就对应一条记录。
<img src="/2016/10/14/oracle-index/index/2.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<p>当发出where c1=’01’这样的SQL语句时，oracle会去搜索01所在的索引条目，然后扫描该索引条目中的bitmap里所有的bit位。第一个bit位为1，则说明第一条记录上的C1值为01，于是返回第一条记录所在的ROWID（根据该索引条目里记录的start ROWID加上行号得到该记录所在的ROWID）。第二个bit位为0，则说明第二条记录上的C1值不为01，依此类推。另外，如果索引列为空，也会在位图索引里记录，也就是将对应的bit位设置为0即可。</p>
<p>如果索引列上不同值的个数比较少的时候，比如对于性别列（男或女）等，则使用位图索引会比较好，因为它对空间的占用非常少（因为都是用bit位来表示表里的数据行），从而在扫描索引的时候，扫描的索引块的个数也比较少。可以试想一下，如果在列的不同值非常多的列上，比如主键列上，创建位图索引，则产生的索引条目就等于表里记录的条数，同时每个索引条目里的bitmap里，只有一个1，其它都是0。这样还不如B树索引的效率高。
如果被索引的列经常被更新的话，则不适合使用位图索引。因为当更新位图所在的列时，由于要在不同的索引条目之间修改bit位，比如将第一条记录从01变为02，则必须将01所在的索引条目的第一个bit位改为0，再将02所在的索引条目的第一个bit位改为1。因此，在更新索引条目的过程中，会锁定位图索引里多个索引条目。也就是同时只能有一个用户能够更新表T，从而降低了并发性。位图索引比较适合用在数据仓库系统里，不适合用在OLTP系统里。</p>
<h3 id="HASH索引"><a href="#HASH索引" class="headerlink" title="HASH索引"></a>HASH索引</h3><p>使用HASH索引必须要使用HASH集群。建立一个集群或HASH集群的同时，也就定义了一个集群键。这个键告诉Oracle如何在集群上存储表。在存储数据时，所有与这个集群键相关的行都被存储在一个数据库块上。如果数据都存储在同一个数据库块上，并且将HASH索引作为WHERE子句中的确切匹配，Oracle就可以通过执行一个HASH函数和I/O来访问数据– 而通过使用一个二元高度为4的B树索引来访问数据，则需要在检索数据时使用4个I/O。如图2-5所示，其中的查询是一个等价查询，用于匹配HASH列和确切的值。Oracle可以快速使用该值，基于HASH函数确定行的物理存储位置。</p>
<p>HASH索引可能是访问数据库中数据的最快方法，但它也有自身的缺点。集群键上不同值的数目必须在创建HASH集群之前就要知道。需要在创建HASH集群的时候指定这个值。低估了集群键的不同值的数字可能会造成集群的冲突(两个集群的键值拥有相同的HASH值)。这种冲突是非常消耗资源的。冲突会造成用来存储额外行的缓冲溢出，然后造成额外的I/O。如果不同HASH值的数目已经被低估，您就必须在重建这个集群之后改变这个值。ALTER CLUSTER命令不能改变HASH键的数目。</p>
<p>HASH集群还可能浪费空间。如果无法确定需要多少空间来维护某个集群键上的所有行，就可能造成空间的浪费。如果不能为集群的未来增长分配好附加的空间，HASH集群可能就不是最好的选择。</p>
<p>如果应用程序经常在集群表上进行全表扫描，HASH集群可能也不是最好的选择。由于需要为未来的增长分配好集群的剩余空间量，全表扫描可能非常消耗资源。
<img src="/2016/10/14/oracle-index/index/3.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<p>在实现HASH集群之前一定要小心。您需要全面地观察应用程序，保证在实现这个选项之前已经了解关于表和数据的大量信息。通常，HASH对于一些包含有序值的静态数据非常有效。</p>
<p>技巧：</p>
<p>HASH索引在有限制条件(需要指定一个确定的值而不是一个值范围)的情况下非常有用。</p>
<h3 id="聚族索引"><a href="#聚族索引" class="headerlink" title="聚族索引"></a>聚族索引</h3><p>在这里还是用字典来进行类比，一般来说汉语字典中有几种索引，如拼音、偏旁、笔画等。字典本身的组织也是排序的，我记得一般是按照拼音排序的。这里的拼音就是聚族索引。也就是说聚族索引的组织顺序和数据本身的组织顺序是一致的 ，这也解释了数据库中只能定义一个聚族索引的原因，因为数据本身只能按一种方式进行排序。  </p>
<p>那聚族索引有什么特别的好处呢，这个好处就是在数据库中执行查找一批数据的语句会比较快，因为数据已经按照聚族索引排好序了，很少的io操作就可以将数据从库中取出。好比你在字典中查找发音从从a到c的汉字，只需要查到a的开始页和c的结束页，中间的所有页都符合查询要求，不用再一页一页地查找。
<img src="/2016/10/14/oracle-index/index/4.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<h3 id="非聚族索引"><a href="#非聚族索引" class="headerlink" title="非聚族索引"></a>非聚族索引</h3><p>非聚族索引就好比字典里的偏旁、笔画索引，其 索引组织顺序和数据组织顺序不一致 ，因此非聚族索引可以创建多个。当查找一条数据时，非聚族索引和聚族索引的效率相差不大，但查找一批数据(n)时，非聚族索引需要的io可能是聚族索引的n倍，因为非聚族索引需要一条一条地进行查找。
<img src="/2016/10/14/oracle-index/index/5.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<p>原文地址：<a href="http://orange5458.iteye.com/blog/1165319" target="_blank" rel="external">http://orange5458.iteye.com/blog/1165319</a></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python3中urllib详细使用方法]]></title>
      <url>/2016/08/03/Python3%E4%B8%ADurllib%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><strong>Python3中urllib详细使用方法(header,代理,超时,认证,异常处理)</strong></p>
<p>urllib是python的一个获取url(Uniform Resource Locators,统一资源定址器)了，我们可以利用它来抓取远程的数据进行保存哦，下面整理了一些关于urllib使用中的一些关于header,代理,超时,认证,异常处理处理方法:</p>
<p>python3 抓取网页资源的 N 种方法</p>
<p>###1、最简单</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import urllib<span class="selector-class">.request</span></div><div class="line">response = urllib<span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(<span class="string">'http://python.org/'</span>)</div><div class="line"><span class="selector-tag">html</span> = response.read()</div></pre></td></tr></table></figure>
<h3 id="2、使用-Request"><a href="#2、使用-Request" class="headerlink" title="2、使用 Request"></a>2、使用 Request</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">import urllib<span class="selector-class">.request</span></div><div class="line"></div><div class="line">req = urllib<span class="selector-class">.request</span><span class="selector-class">.Request</span>(<span class="string">'http://python.org/'</span>)</div><div class="line">response = urllib<span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(req)</div><div class="line">the_page = response.read()</div></pre></td></tr></table></figure>
<h3 id="3、发送数据"><a href="#3、发送数据" class="headerlink" title="3、发送数据"></a>3、发送数据</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#! /usr/bin/env python3</div><div class="line"></div><div class="line">import urllib<span class="selector-class">.parse</span></div><div class="line">import urllib<span class="selector-class">.request</span></div><div class="line"></div><div class="line">url = <span class="string">'http://localhost/login.php'</span></div><div class="line">user_agent = <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span></div><div class="line">values = &#123;</div><div class="line"><span class="string">'act'</span> : <span class="string">'login'</span>,</div><div class="line"><span class="string">'login[email]'</span> : <span class="string">'yzhang@i9i8.com'</span>,</div><div class="line"><span class="string">'login[password]'</span> : <span class="string">'123456'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">data = urllib<span class="selector-class">.parse</span><span class="selector-class">.urlencode</span>(values)</div><div class="line">req = urllib<span class="selector-class">.request</span><span class="selector-class">.Request</span>(url, data)</div><div class="line">req.add_header(<span class="string">'Referer'</span>, <span class="string">'http://www.python.org/'</span>)</div><div class="line">response = urllib<span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(req)</div><div class="line">the_page = response.read()</div><div class="line"></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(the_page.decode(<span class="string">"utf8"</span>)</span></span>)</div></pre></td></tr></table></figure>
<h3 id="4、发送数据和header"><a href="#4、发送数据和header" class="headerlink" title="4、发送数据和header"></a>4、发送数据和header</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#! /usr/bin/env python3</div><div class="line"></div><div class="line">import urllib<span class="selector-class">.parse</span></div><div class="line">import urllib<span class="selector-class">.request</span></div><div class="line"></div><div class="line">url = <span class="string">'http://localhost/login.php'</span></div><div class="line">user_agent = <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span></div><div class="line">values = &#123;</div><div class="line"><span class="string">'act'</span> : <span class="string">'login'</span>,</div><div class="line"><span class="string">'login[email]'</span> : <span class="string">'yzhang@i9i8.com'</span>,</div><div class="line"><span class="string">'login[password]'</span> : <span class="string">'123456'</span></div><div class="line">&#125;</div><div class="line">headers = &#123; <span class="string">'User-Agent'</span> : user_agent &#125;</div><div class="line"></div><div class="line">data = urllib<span class="selector-class">.parse</span><span class="selector-class">.urlencode</span>(values)</div><div class="line">req = urllib<span class="selector-class">.request</span><span class="selector-class">.Request</span>(url, data, headers)</div><div class="line">response = urllib<span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(req)</div><div class="line">the_page = response.read()</div><div class="line"></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(the_page.decode(<span class="string">"utf8"</span>)</span></span>)</div></pre></td></tr></table></figure>
<h3 id="5、http-错误"><a href="#5、http-错误" class="headerlink" title="5、http 错误"></a>5、http 错误</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#! /usr/bin/env python3</div><div class="line"></div><div class="line">import urllib<span class="selector-class">.request</span></div><div class="line"></div><div class="line">req = urllib<span class="selector-class">.request</span><span class="selector-class">.Request</span>(<span class="string">'http://www.111cn.net '</span>)</div><div class="line">try:</div><div class="line">urllib<span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(req)</div><div class="line">except urllib<span class="selector-class">.error</span><span class="selector-class">.HTTPError</span> as e:</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(e.code)</span></span></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(e.read()</span></span>.decode(<span class="string">"utf8"</span>))</div></pre></td></tr></table></figure>
<h3 id="6、异常处理1"><a href="#6、异常处理1" class="headerlink" title="6、异常处理1"></a>6、异常处理1</h3><figure class="highlight monkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /usr/bin/env python3</span></div><div class="line"></div><div class="line">from urllib.request <span class="keyword">import</span> Request, urlopen</div><div class="line">from urllib.<span class="built_in">error</span> <span class="keyword">import</span> URLError, HTTPError</div><div class="line">req = Request(<span class="string">"http://www.111cn.net /"</span>)</div><div class="line"><span class="keyword">try</span>:</div><div class="line">response = urlopen(req)</div><div class="line">except HTTPError as e:</div><div class="line"><span class="built_in">print</span>(<span class="comment">'The server couldn't fulfill the request.')</span></div><div class="line"><span class="built_in">print</span>(<span class="comment">'Error code: ', e.code)</span></div><div class="line">except URLError as e:</div><div class="line"><span class="built_in">print</span>(<span class="comment">'We failed to reach a server.')</span></div><div class="line"><span class="built_in">print</span>(<span class="comment">'Reason: ', e.reason)</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line"><span class="built_in">print</span>(<span class="string">"good!"</span>)</div><div class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">"utf8"</span>))</div></pre></td></tr></table></figure>
<h3 id="7、异常处理2"><a href="#7、异常处理2" class="headerlink" title="7、异常处理2"></a>7、异常处理2</h3><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /usr/bin/env python3</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> urllib.request import Request, urlopen</div><div class="line"><span class="keyword">from</span> urllib.<span class="keyword">error</span> import  URLError</div><div class="line">req = Request(<span class="string">"http://www.111cn.net /"</span>)</div><div class="line"><span class="keyword">try</span>:</div><div class="line">response = urlopen(req)</div><div class="line">except URLError <span class="keyword">as</span> e:</div><div class="line"><span class="keyword">if</span> hasattr(e, <span class="comment">'reason'):</span></div><div class="line">print(<span class="comment">'We failed to reach a server.')</span></div><div class="line">print(<span class="comment">'Reason: ', e.reason)</span></div><div class="line">elif hasattr(e, <span class="comment">'code'):</span></div><div class="line">print(<span class="comment">'The server couldn't fulfill the request.')</span></div><div class="line">print(<span class="comment">'Error code: ', e.code)</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">print(<span class="string">"good!"</span>)</div><div class="line">print(response.read().decode(<span class="string">"utf8"</span>))</div></pre></td></tr></table></figure>
<h3 id="8、HTTP-认证"><a href="#8、HTTP-认证" class="headerlink" title="8、HTTP 认证"></a>8、HTTP 认证</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python3</span></div><div class="line"></div><div class="line">import urllib.request</div><div class="line"></div><div class="line"><span class="comment"># create a password manager</span></div><div class="line">password_mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()</div><div class="line"></div><div class="line"><span class="comment"># Add the username and password.</span></div><div class="line"><span class="comment"># If we knew the realm, we could use it instead of None.</span></div><div class="line">top_level_url = <span class="string">"https://www.111cn.net /"</span></div><div class="line">password_mgr.add_password(None, top_level_url, 'rekfan', 'xxxxxx')</div><div class="line"></div><div class="line">handler = urllib.request.HTTPBasicAuthHandler(password_mgr)</div><div class="line"></div><div class="line"><span class="comment"># create "opener" (OpenerDirector instance)</span></div><div class="line">opener = urllib.request.build_opener(handler)</div><div class="line"></div><div class="line"><span class="comment"># use the opener to fetch a URL</span></div><div class="line">a_url = <span class="string">"https://www.111cn.net /"</span></div><div class="line">x = opener.open(a_url)</div><div class="line">print(x.read())</div><div class="line"></div><div class="line"><span class="comment"># Install the opener.</span></div><div class="line"><span class="comment"># Now all calls to urllib.request.urlopen use our opener.</span></div><div class="line">urllib.request.install_opener(opener)</div><div class="line"></div><div class="line">a = urllib.request.urlopen(a_url).read().decode('utf8')</div><div class="line">print(a)</div></pre></td></tr></table></figure>
<h3 id="9、使用代理"><a href="#9、使用代理" class="headerlink" title="9、使用代理"></a>9、使用代理</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#! /usr/bin/env python3</div><div class="line"></div><div class="line">import urllib<span class="selector-class">.request</span></div><div class="line"></div><div class="line">proxy_support = urllib<span class="selector-class">.request</span><span class="selector-class">.ProxyHandler</span>(&#123;<span class="string">'sock5'</span>: <span class="string">'localhost:1080'</span>&#125;)</div><div class="line">opener = urllib<span class="selector-class">.request</span><span class="selector-class">.build_opener</span>(proxy_support)</div><div class="line">urllib<span class="selector-class">.request</span><span class="selector-class">.install_opener</span>(opener)</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-tag">a</span> = urllib<span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(<span class="string">"http://www.111cn.net "</span>).read().decode(<span class="string">"utf8"</span>)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(a)</span></span></div></pre></td></tr></table></figure>
<h3 id="10、超时"><a href="#10、超时" class="headerlink" title="10、超时"></a>10、超时</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python3</span></div><div class="line"></div><div class="line">import <span class="built_in">socket</span></div><div class="line">import urllib.request</div><div class="line"></div><div class="line"><span class="comment"># timeout in seconds</span></div><div class="line">timeout = <span class="number">2</span></div><div class="line"><span class="built_in">socket</span>.setdefaulttimeout(timeout)</div><div class="line"></div><div class="line"><span class="comment"># this call to urllib.request.urlopen now uses the default timeout</span></div><div class="line"><span class="comment"># we have set in the socket module</span></div><div class="line">req = urllib.request.Request(<span class="string">'http://www.111cn.net /'</span>)</div><div class="line"><span class="keyword">a</span> = urllib.request.urlopen(req).<span class="built_in">read</span>()</div><div class="line">print(<span class="keyword">a</span>)</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[oracle segmentation fault错误]]></title>
      <url>/2016/06/23/oracle-segmentation-fault%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天某客户现场反馈数据库无法连接，web服务无法正常访问，初步判断是数据库出现问题，远程登录oracle服务器准备进行检查。</p>
<p>根据经验，一般这种情况可能是监听有问题，准备查看下监听状态：
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[oracle<span class="variable">@sysu</span> opt]<span class="variable">$ </span>lsnrctl status</div><div class="line">Segmentation fault</div></pre></td></tr></table></figure></p>
<p>一脸懵逼，“Segmentation fault”传说中的段错误，一种不祥的预感涌上心头，接下来看看数据库服务
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[oracle<span class="variable">@sysu</span> opt]<span class="variable">$ </span>sqlplus /nolog</div><div class="line"></div><div class="line">Segmentation fault</div></pre></td></tr></table></figure></p>
<p>what fu*k？！这下麻烦了，sqlplus没法用，好多事情就没法做了。。</p>
<h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h3><p>第一反应查看/opt/oracle/admin/orcl/bdump/alert_orcl.log日志文件，看了半天没发现什么重要的错误信息，这下只能借助搜索引擎看看了。</p>
<p>搜索出来的结果主要是这两种：</p>
<p>1.该报错信息是因为在/usr/bin目录下的gcc/g++ compilers是一个文件，引起了在link的时候错误编译</p>
<p>解决办法：
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">　  <span class="number">1.</span> cd /usr/bin (as root)</div><div class="line"></div><div class="line">　　<span class="number">2.</span> mv gcc gcc.script</div><div class="line"></div><div class="line">　　<span class="number">3.</span> mv g++ g++.script</div><div class="line"></div><div class="line">　　<span class="number">4.</span> ln -s gcc32 gcc</div><div class="line"></div><div class="line">　　<span class="number">5.</span> ln -s g++<span class="number">32</span> g++</div><div class="line"></div><div class="line">　　<span class="number">6.</span> login as oracle software owner (make sure environment is correct)</div><div class="line"></div><div class="line">　　<span class="number">7.</span> cd $ORACLE_HOME/bin</div><div class="line"></div><div class="line">　　<span class="number">8.</span> relink all</div></pre></td></tr></table></figure></p>
<p>根据以上命令敲完之后，sqlplus还是不行，仍然是segmentation fault错误，后来又./relink all了下，shutdown -Fr now系统，系统起来之后，oracle已经启动了。</p>
<p>来源：<a href="http://blog.itpub.net/3090/viewspace-669836/" target="_blank" rel="external">http://blog.itpub.net/3090/viewspace-669836/</a></p>
<p>2.重新编译生成sqlplus</p>
<p>参考来源：<a href="http://www.askmaclean.com/archives/%E8%A7%A3%E5%86%B3sqlplus-segmentation-fault%E6%88%96hang%E9%97%AE%E9%A2%98.html" target="_blank" rel="external">http://www.askmaclean.com/archives/%E8%A7%A3%E5%86%B3sqlplus-segmentation-fault%E6%88%96hang%E9%97%AE%E9%A2%98.html</a></p>
<p>因为了解到服务器在出问题前升级过zlib,openssl-fips,openssh，怀疑是相关的软件更新导致该错误，隐约记得stackoverflow上有个类似问题是说过一些环境的update会导致这个错误。</p>
<h3 id="问题解决："><a href="#问题解决：" class="headerlink" title="问题解决："></a>问题解决：</h3><p>于是尝试使用方法1解决，其实是替换了gcc的版本，操作时发现未安装gcc32，于是通过yum进行安装，在yum源里查看其实是gcc34，记得切换root账户进行安装
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">compat-gcc-34-3</span><span class="selector-class">.4</span><span class="selector-class">.6-19</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span>      </div><div class="line"><span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">compat-gcc-34-c</span>++<span class="selector-tag">-3</span><span class="selector-class">.4</span><span class="selector-class">.6-19</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure></p>
<p>安装完成后，relink all 发现问题依旧，重启服务器，问题仍未解决。</p>
<p>无奈，采用方法2，发现根本无法成功生成，因为这个文件根本没找到</p>
<img src="/2016/06/23/oracle-segmentation-fault错误/1.png" alt="图 1" title="图 1">
<p>多方尝试未果，突然在一个帖子里看到同样问题的同学，最早几个回复都是提示环境变量是否正常，虽然该同学最终解决问题是通过重启服务器解决，不过也提供了思路，是否重启服务器后重置了环境变量然后恢复呢。</p>
<img src="/2016/06/23/oracle-segmentation-fault错误/2.png" alt="图 2" title="图 2">
<p>查看LD_LIBRARY_PATH环境变量，正常情况下这个应该是空值的，不过在这里发现是有值的：
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[oracle@sysu ~]$ echo $LD_LIBRARY_PATH</div><div class="line">/usr/local/<span class="class"><span class="keyword">lib</span>:/<span class="title">usr</span>/<span class="title">lib</span>/<span class="title">oracle</span>/12.1/<span class="title">client64</span>/<span class="title">lib</span></span></div></pre></td></tr></table></figure></p>
<p>LD_LIBRARY_PATH环境变量主要是用于指定动态链接器（ld）查找ELF可执行文件运行时所依赖的动态库（so）的路径，其内容是以冒号分隔的路径列表。ld链接器将优先在该变量设置的路径中查找，若未找到则在标准库路径/lib和/usr/lib中继续搜索</p>
<p>于是尝试清空该变量中与oracle相关部分进行测试：</p>
<pre><code>[oracle@sysu ~]$ export LD_LIBRARY_PATH=/usr/local/lib
[oracle@sysu ~]$ sqlplus

SQL*Plus: Release 10.2.0.1.0 - Production on Mon Feb 20 12:40:36 2017

Copyright (c) 1982, 2005, Oracle.  All rights reserved.

Enter user-name:
</code></pre><p>确认问题原因就是$LD_LIBRARY_PATH环境变量问题，鉴于/usr/lib/oracle/12.1/client64/lib被移除后正常，于是将其mv到tmp下，以免再次影响。</p>
<p>顺利重启监听和数据库服务后，一切恢复正常！！</p>
<p>再次查看下$LD_LIBRARY_PATH环境变量，发现又重新生成了/usr/lib/oracle/12.1/client64/lib，不过这次数据库就已经正常了，猜测应该是oracle运行过程中自动生成，可能在升级软件过程中重新lib库里相关文件更新导致oracle无法正常运行，总之这个segmentation fault实在是磨人，异常的莫名其妙，连出错原因都很难查找。</p>
<p>在此记下该问题解决过程，也给其他同学带来一点借鉴！</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows、linux修改pip镜像源及conda修改镜像源]]></title>
      <url>/2016/04/10/pip-source/</url>
      <content type="html"><![CDATA[<h4 id="一、在windows环境下修改pip镜像源的方法-以python3-5为例"><a href="#一、在windows环境下修改pip镜像源的方法-以python3-5为例" class="headerlink" title="一、在windows环境下修改pip镜像源的方法(以python3.5为例)"></a>一、在windows环境下修改pip镜像源的方法(以python3.5为例)</h4><p>(1):在windows文件管理器中,输入 %APPDATA%<br><img src="/2016/04/10/pip-source/1.jpg" alt="图 1" title="图 1"> </p>
<p>(2):会定位到一个新的目录下，在该目录下新建pip文件夹，然后到pip文件夹里面去新建个pip.ini文件<br><img src="/2016/04/10/pip-source/2.jpg" alt="图 2" title="图 2"> </p>
<p>(3):在新建的pip.ini文件中输入以下内容，搞定 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="keyword">global</span>]</div><div class="line">timeout = <span class="number">6000</span></div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>
<h4 id="二、在linux系统中更新pip源的方式-以centos-python2-7为例"><a href="#二、在linux系统中更新pip源的方式-以centos-python2-7为例" class="headerlink" title="二、在linux系统中更新pip源的方式(以centos,python2.7为例)"></a>二、在linux系统中更新pip源的方式(以centos,python2.7为例)</h4><p>在linux环境下的修改方式和在windows环境下修改方式基本相同，这里简单总结一下:</p>
<p>(1):在用户的根目录下面创建名为.pip文件夹</p>
<p>(2):在创建好的.pip文件夹中创建名为pip.conf的文件</p>
<p>(3):在pip.conf文件中输入以下内容，ok!!!</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="keyword">global</span>]</div><div class="line">timeout = <span class="number">6000</span></div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>
<h4 id="三、conda环境下更新"><a href="#三、conda环境下更新" class="headerlink" title="三、conda环境下更新"></a>三、conda环境下更新</h4><p>Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。</p>
<p>Anaconda 安装包可以到 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a> 下载。</p>
<p>TUNA 还提供了 Anaconda 仓库的镜像，运行以下命令:
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</div><div class="line">conda config --set show_channel_urls yes</div></pre></td></tr></table></figure></p>
<p>即可添加 Anaconda Python 免费仓库。</p>
<p>运行 conda install numpy 测试一下吧。</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux系统中安装和配置snmp服务]]></title>
      <url>/2016/03/24/Linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AEsnmp%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<p>最近公司需要在监控一下各项目地的服务器运行状况，查找资料发现监控宝可以直接通过SNMP服务实现，于是打算测试一下在RedHat Linux系统中安装和配置snmp服务</p>
<h3 id="检查系统是否安装snmp服务"><a href="#检查系统是否安装snmp服务" class="headerlink" title="检查系统是否安装snmp服务"></a>检查系统是否安装snmp服务</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># rpm -qa|grep snmp</div><div class="line">net-snmp<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div><div class="line">net-snmp-perl<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div><div class="line">net-snmp-devel<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div><div class="line">net-snmp-libs<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div><div class="line">net-snmp-utils<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div><div class="line">net-snmp-libs<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div><div class="line">net-snmp-devel<span class="number">-5.3</span><span class="number">.2</span><span class="number">.2</span><span class="number">-17.</span>el5</div></pre></td></tr></table></figure>
<p>SNMP服务安装后会有以上安装包</p>
<h3 id="安装SNMP服务"><a href="#安装SNMP服务" class="headerlink" title="安装SNMP服务"></a>安装SNMP服务</h3><h4 id="1-配置好本地yum服务，使用yum安装"><a href="#1-配置好本地yum服务，使用yum安装" class="headerlink" title="1.配置好本地yum服务，使用yum安装"></a>1.配置好本地yum服务，使用yum安装</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> -y net-snmp*</div></pre></td></tr></table></figure>
<h4 id="2-配置SNMP服务开机启动"><a href="#2-配置SNMP服务开机启动" class="headerlink" title="2.配置SNMP服务开机启动"></a>2.配置SNMP服务开机启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">chkconfig snmpd on</span></div><div class="line"><span class="meta">#</span><span class="bash">chkconfig --list | grep snmpd</span></div></pre></td></tr></table></figure>
<p>查看开机启动设置是否成功
snmpd 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭</p>
<h3 id="验证SNMP服务"><a href="#验证SNMP服务" class="headerlink" title="验证SNMP服务"></a>验证SNMP服务</h3><h4 id="1-使用snmpwalk获取主机名"><a href="#1-使用snmpwalk获取主机名" class="headerlink" title="1.使用snmpwalk获取主机名"></a>1.使用snmpwalk获取主机名</h4><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># snmpwalk -v <span class="number">2</span><span class="keyword">c</span> -<span class="keyword">c</span> public localhost sysName.<span class="number">0</span></div><div class="line">SNMPv<span class="number">2</span>-MIB::sysName.<span class="number">0</span> = STRING: wh<span class="number">69</span></div><div class="line">snmpwalk用法</div><div class="line">snmpwalk -v <span class="number">1</span>|<span class="number">2</span><span class="keyword">c</span>|<span class="number">3</span>(代表SNMP版本) -<span class="keyword">c</span> &lt;community string&gt; IP地址 OID(对象标示符)</div></pre></td></tr></table></figure>
<h4 id="2-使用snmptranslate命令，检查snmp工具是否可以使用"><a href="#2-使用snmptranslate命令，检查snmp工具是否可以使用" class="headerlink" title="2.使用snmptranslate命令，检查snmp工具是否可以使用"></a>2.使用snmptranslate命令，检查snmp工具是否可以使用</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># snmptranslate -To | head</div><div class="line"><span class="number">.1</span><span class="number">.3</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.1</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.2</span></div><div class="line"><span class="number">.1</span><span class="number">.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.2</span><span class="number">.1</span><span class="number">.1</span><span class="number">.3</span></div></pre></td></tr></table></figure>
<p>查出了部分oid，则表示snmp工具可以正常使用</p>
<h3 id="配置SNMP服务"><a href="#配置SNMP服务" class="headerlink" title="配置SNMP服务"></a>配置SNMP服务</h3><h4 id="1-配置SNMP连接字符串-community-string"><a href="#1-配置SNMP连接字符串-community-string" class="headerlink" title="1.配置SNMP连接字符串 community string"></a>1.配置SNMP连接字符串 community string</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">vi /etc/snmp/snmpd.conf</span></div></pre></td></tr></table></figure>
<p>修改下面字段</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#      sec.name  source          community</span></div><div class="line">com2sec notConfigUser  <span class="keyword">default</span>    <span class="keyword">public</span></div></pre></td></tr></table></figure>
<p>修改public为自己定义的community string，这里修改为jiankongbao</p>
<h4 id="2-修改查看设备节点权限"><a href="#2-修改查看设备节点权限" class="headerlink" title="2.修改查看设备节点权限"></a>2.修改查看设备节点权限</h4><p>在配置文件/etc/snmp/snmpd.conf中找到如下位置</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">####</div><div class="line"># Third, create a view for us to let the group have rights to:</div><div class="line"></div><div class="line"></div><div class="line"># Make <span class="meta">at</span> least  snmpwalk -v <span class="number">1</span> localhost -c <span class="meta">public</span> system fast again.</div><div class="line">#      name          incl/excl    subtree        mask(optional)</div><div class="line">view    systemview    included  .<span class="number">1.3</span><span class="meta">.6</span><span class="meta">.1</span><span class="meta">.2</span><span class="meta">.1</span><span class="meta">.1</span></div><div class="line">view    systemview    included  .<span class="number">1.3</span><span class="meta">.6</span><span class="meta">.1</span><span class="meta">.2</span><span class="meta">.1</span><span class="meta">.25</span><span class="meta">.1</span><span class="meta">.1</span></div></pre></td></tr></table></figure>
<p>view：定义了可以查看哪些节点设备的信息。
snmp默认配置只能查看.1.3.6.1.2.1.1和.1.3.6.1.2.1.25.1.1节点下的设备信息，
而主机CPU和内存等设备都不在这些节点下，所以无法获取这些数据。
因此，可以修改这个配置，如下：</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">####</div><div class="line"># Third, create a view for us to let the group have rights to:</div><div class="line"></div><div class="line"></div><div class="line"># Make <span class="meta">at</span> least  snmpwalk -v <span class="number">1</span> localhost -c <span class="meta">public</span> system fast again.</div><div class="line">#      name          incl/excl    subtree        mask(optional)</div><div class="line">view    systemview    included  .<span class="number">1</span></div><div class="line">view    systemview    included  .<span class="number">1.3</span><span class="meta">.6</span><span class="meta">.1</span><span class="meta">.2</span><span class="meta">.1</span><span class="meta">.1</span></div><div class="line">view    systemview    included  .<span class="number">1.3</span><span class="meta">.6</span><span class="meta">.1</span><span class="meta">.2</span><span class="meta">.1</span><span class="meta">.25</span><span class="meta">.1</span><span class="meta">.1</span></div></pre></td></tr></table></figure>
<p>在此处添加了一行：
<figure class="highlight cos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">view</span> systemview included .<span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>表示可以查看.1节点下的所有设备信息。</p>
<h4 id="3-添加jiankongbao用户，并进行测试"><a href="#3-添加jiankongbao用户，并进行测试" class="headerlink" title="3.添加jiankongbao用户，并进行测试"></a>3.添加jiankongbao用户，并进行测试</h4><p>执行创建jiankongbao用户，密码为jiankongbao，创建时必须关闭snmpd服务，以及SElinux</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#service</span> snmpd stop</div><div class="line"></div><div class="line"><span class="selector-id">#net-snmp-config</span> --create-snmpv3-user -ro -<span class="selector-tag">a</span> jiankongbao  -x DES -X jiankongbao jiankongbao</div></pre></td></tr></table></figure>
<p>添加好后，会显示add用户成功</p>
<p>配置防火墙，开放snmp端口，默认161，这里配置是将监控宝的3个IP设为可访问，方便后续加入监控平台</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#iptables</span> -A INPUT -<span class="selector-tag">i</span> eth0 -<span class="selector-tag">p</span> udp -s <span class="number">124.202</span>.<span class="number">149.13</span> --dport <span class="number">161</span> -j ACCEPT</div><div class="line"><span class="selector-id">#iptables</span> -A INPUT -<span class="selector-tag">i</span> eth0 -<span class="selector-tag">p</span> udp -s <span class="number">124.202</span>.<span class="number">149.17</span> --dport <span class="number">161</span> -j ACCEPT</div><div class="line"><span class="selector-id">#iptables</span> -A INPUT -<span class="selector-tag">i</span> eth0 -<span class="selector-tag">p</span> udp -s <span class="number">60.195</span>.<span class="number">252.107</span> --dport <span class="number">161</span> -j ACCEPT</div></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">service iptables restart</span></div></pre></td></tr></table></figure>
<p>启动snmpd服务，在本地进行测试</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">servcei snmpd start</span></div></pre></td></tr></table></figure>
<p>此处使用协议3进行测试</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#snmpwalk -v <span class="number">3</span> -u jiankongbao -a MD5 -A <span class="string">"jiankongbao"</span> -l authNoPriv <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> sysDescr</div></pre></td></tr></table></figure>
<img src="/2016/03/24/Linux系统中安装和配置snmp服务/1.png" alt="snmpwalk" title="snmpwalk">
<p>出现如图所示即本地测试成功，若服务器161端口已开放到外网，即可在监控宝平台添加监控，否则需要使用内网采集器。</p>
<p><strong>参考资料：</strong>
Zabbix 之SNMP配置 <a href="http://www.linuxidc.com/Linux/2013-09/90263.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2013-09/90263.htm</a></p>
<p>SNMP实现网络状态监控 <a href="http://www.linuxidc.com/Linux/2013-04/83187.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2013-04/83187.htm</a></p>
<p>CentOS 6.3下搭建SNMP测试环境 <a href="http://www.linuxidc.com/Linux/2013-02/79233.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2013-02/79233.htm</a></p>
<p>Linux (Ubuntu/CentOS) SNMP配置 <a href="http://www.linuxidc.com/Linux/2012-12/76837.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2012-12/76837.htm</a></p>
<p>开启并配置Citrix Xenserver的SNMP服务 <a href="http://www.linuxidc.com/Linux/2013-01/78487.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2013-01/78487.htm</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Redhat </tag>
            
            <tag> CentOS </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[非归档模式数据恢复 oracle11g r2]]></title>
      <url>/2015/12/03/%E9%9D%9E%E5%BD%92%E6%A1%A3%E6%A8%A1%E5%BC%8F%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D-oracle11g-r2/</url>
      <content type="html"><![CDATA[<h3 id="1-创建实验表空间数据文件"><a href="#1-创建实验表空间数据文件" class="headerlink" title="1.创建实验表空间数据文件"></a>1.创建实验表空间数据文件</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"> <span class="number">1</span> SQL&gt; conn /as sysdba  <span class="number">2</span> </div><div class="line"> <span class="number">3</span> Connected.  <span class="number">4</span> </div><div class="line"> <span class="number">5</span> SQL&gt; create tablespace data01 datafile '/u01/app/oracle/oradata/oracle/data01.dbf'size <span class="number">10</span>m;  <span class="number">6</span> </div><div class="line"> <span class="number">7</span> Tablespace created.  <span class="number">8</span> </div><div class="line"> <span class="number">9</span> SQL&gt; create table david_01 tablespace data01 as select * from dba_objects; <span class="number">10</span> </div><div class="line"><span class="number">11</span> Table created.</div></pre></td></tr></table></figure>
<h3 id="2-数据文件offline"><a href="#2-数据文件offline" class="headerlink" title="2.数据文件offline"></a>2.数据文件offline</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>SQL&gt; alter database datafile <span class="comment">'/u01/app/oracle/oradata/oracle/data01.dbf' offline; 2 </span></div><div class="line"><span class="symbol">3 </span>Database altered. <span class="number">4</span> </div><div class="line"><span class="symbol">5 </span>SQL&gt; alter <span class="keyword">system</span> switch logfile; <span class="number">6</span> </div><div class="line"><span class="symbol">7 </span><span class="keyword">System</span> altered.</div></pre></td></tr></table></figure>
<h3 id="3-数据文件online"><a href="#3-数据文件online" class="headerlink" title="3.数据文件online"></a>3.数据文件online</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="number"> 1 </span>SQL&gt; alter database datafile '/u01/app/oracle/oradata/oracle/data01.dbf' online; <span class="number"> 2 </span></div><div class="line"><span class="number"> 3 </span>alter database datafile '/u01/app/oracle/oradata/oracle/data01.dbf' online <span class="number"> 4 </span></div><div class="line"><span class="number"> 5 </span>*</div><div class="line"><span class="number"> 6 </span></div><div class="line"><span class="number"> 7 </span>ERROR at line 1: <span class="number"> 8 </span></div><div class="line"><span class="number"> 9 </span>ORA-01113: file<span class="number"> 5 </span>needs media recovery<span class="number"> 10 </span></div><div class="line">11 ORA-01110: data file 5: '/u01/app/oracle/oradata/oracle/data01.dbf'</div></pre></td></tr></table></figure>
<h3 id="4-数据文件进行介质恢复"><a href="#4-数据文件进行介质恢复" class="headerlink" title="4.数据文件进行介质恢复"></a>4.数据文件进行介质恢复</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"> 1 SQL&gt; recover datafile 5;  2 </div><div class="line"> 3 ORA-00279: change 1179122 generated at 04/03/2012 23:35:49 needed <span class="keyword">for</span> thread 1</div><div class="line"> 4 </div><div class="line"> 5 ORA-00289: suggestion : /u01/<span class="keyword">app</span>/oracle/flash_recovery_area/ORACLE/archivelog/2012_04_03/o1_mf_1_25_7qp6 nqxt_.arc  6 </div><div class="line"> 7 ORA-00280: change 1179122 <span class="keyword">for</span> thread 1 is <span class="keyword">in</span> sequence #25</div><div class="line"> 8 </div><div class="line"> 9  </div><div class="line">10 </div><div class="line">11 Specify <span class="keyword">log</span>: &#123;&lt;<span class="keyword">RET</span>&gt;=suggested | filename | AUTO | CANCEL&#125; 12 </div><div class="line">13 auto（自动搜索归档日志，本实验无归档日志） 14 </div><div class="line">15 ORA-00308: cannot <span class="keyword">open</span> archived <span class="keyword">log</span> '/u01/<span class="keyword">app</span>/oracle/flash_recovery_area/ORACLE/archivelog/2012_04_03/o1_mf_1_25_7qp 6nqxt_.arc'</div><div class="line">16 </div><div class="line">17 ORA-27037: unable to obtain <span class="keyword">file</span> status 18 </div><div class="line">19 Linux-x86_64 <span class="keyword">Error</span>: 2: <span class="keyword">No</span> such <span class="keyword">file</span> or directory 20 </div><div class="line">21 Additional information: 3</div><div class="line">22 </div><div class="line">23  </div><div class="line">24 </div><div class="line">25 ORA-00308: cannot <span class="keyword">open</span> archived <span class="keyword">log</span> '/u01/<span class="keyword">app</span>/oracle/flash_recovery_area/ORACLE/archivelog/2012_04_03/o1_mf_1_25_7qp 6nqxt_.arc'</div><div class="line">26 </div><div class="line">27 ORA-27037: unable to obtain <span class="keyword">file</span> status 28 </div><div class="line">29 Linux-x86_64 <span class="keyword">Error</span>: 2: <span class="keyword">No</span> such <span class="keyword">file</span> or directory 30 </div><div class="line">31 Additional information: 3</div></pre></td></tr></table></figure>
<h3 id="5-加上until-cancle参数再次尝试恢复，恢复数据原则要进程不断尝试"><a href="#5-加上until-cancle参数再次尝试恢复，恢复数据原则要进程不断尝试" class="headerlink" title="5.加上until cancle参数再次尝试恢复，恢复数据原则要进程不断尝试"></a>5.加上until cancle参数再次尝试恢复，恢复数据原则要进程不断尝试</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="number"> 1 </span>SYS SQL&gt; recover datafile<span class="number"> 5 </span>until cancel; <span class="number"> 2 </span></div><div class="line"><span class="number"> 3 </span>ORA-00274: illegal recovery option UNTIL <span class="number"> 4 </span></div><div class="line"><span class="number"> 5 </span> </div><div class="line"><span class="number"> 6 </span></div><div class="line"><span class="number"> 7 </span>SQL&gt; alter database datafile<span class="number"> 5 </span>online; <span class="number"> 8 </span></div><div class="line"><span class="number"> 9 </span>alter database datafile<span class="number"> 5 </span>online<span class="number"> 10 </span></div><div class="line">11 *</div><div class="line">12 </div><div class="line">13 ERROR at line 1:<span class="number"> 14 </span></div><div class="line">15 ORA-01113: file<span class="number"> 5 </span>needs media recovery<span class="number"> 16 </span></div><div class="line">17 ORA-01110: data file 5: '/u01/app/oracle/oradata/oracle/data01.dbf'</div></pre></td></tr></table></figure>
<h3 id="6-将库加载到mount状态，再次尝试介质恢复"><a href="#6-将库加载到mount状态，再次尝试介质恢复" class="headerlink" title="6.将库加载到mount状态，再次尝试介质恢复"></a>6.将库加载到mount状态，再次尝试介质恢复</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> <span class="number">1</span> SQL&gt; shutdown immediate;  <span class="number">2</span> </div><div class="line"> <span class="number">3</span> Database closed.  <span class="number">4</span> </div><div class="line"> <span class="number">5</span> Database dismounted.  <span class="number">6</span> </div><div class="line"> <span class="number">7</span> ORACLE instance shut down.  <span class="number">8</span> </div><div class="line"> <span class="number">9</span> SQL&gt; startup mount; <span class="number">10</span> </div><div class="line"><span class="number">11</span> ORACLE instance started. <span class="number">12</span> </div><div class="line"><span class="number">13</span> Total System Global Area  <span class="number">534462464</span> bytes <span class="number">14</span> </div><div class="line"><span class="number">15</span> Fixed Size                  <span class="number">2215064</span> bytes <span class="number">16</span> </div><div class="line"><span class="number">17</span> Variable Size             <span class="number">406848360</span> bytes <span class="number">18</span> </div><div class="line"><span class="number">19</span> Database Buffers          <span class="number">121634816</span> bytes <span class="number">20</span> </div><div class="line"><span class="number">21</span> Redo Buffers                <span class="number">3764224</span> bytes <span class="number">22</span> </div><div class="line"><span class="number">23</span> Database mounted.</div></pre></td></tr></table></figure>
<p>恢复成功
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>SQL&gt; recover database until cancel; <span class="number">2</span> </div><div class="line"><span class="symbol">3 </span>Media recovery complete.</div></pre></td></tr></table></figure></p>
<h3 id="7-尝试打开数据库"><a href="#7-尝试打开数据库" class="headerlink" title="7.尝试打开数据库"></a>7.尝试打开数据库</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="number"> 1 </span>SQL&gt; alter database open; <span class="number"> 2 </span></div><div class="line"><span class="number"> 3 </span>alter database open</div><div class="line"><span class="number"> 4 </span></div><div class="line"><span class="number"> 5 </span>*</div><div class="line"><span class="number"> 6 </span></div><div class="line"><span class="number"> 7 </span>ERROR at line 1: <span class="number"> 8 </span></div><div class="line"><span class="number"> 9 </span>ORA-01589: must use RESETLOGS or NORESETLOGS option for database open</div><div class="line">10 </div><div class="line">11  </div><div class="line">12 </div><div class="line">13 SQL&gt; alter database open RESETLOGS;<span class="number"> 14 </span></div><div class="line">15 Database altered.</div></pre></td></tr></table></figure>
<p>将数据文件online
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="number"> 1 </span>SQL&gt; alter database datafile<span class="number"> 5 </span>online; <span class="number"> 2 </span></div><div class="line"><span class="number"> 3 </span>alter database datafile<span class="number"> 5 </span>online <span class="number"> 4 </span></div><div class="line"><span class="number"> 5 </span>*</div><div class="line"><span class="number"> 6 </span></div><div class="line"><span class="number"> 7 </span>ERROR at line 1: <span class="number"> 8 </span></div><div class="line"><span class="number"> 9 </span>ORA-01190: control file or data file<span class="number"> 5 </span>is from before the last RESETLOGS<span class="number"> 10 </span></div><div class="line">11 ORA-01110: data file 5: '/u01/app/oracle/oradata/oracle/data01.dbf'</div></pre></td></tr></table></figure></p>
<p>报错信息提示：控制文件或文件5不在同一个resetlogs版本，再次尝试恢复
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>SQL&gt; recover datafile <span class="number">5</span>; <span class="number">2</span> </div><div class="line"><span class="symbol">3 </span>ORA-<span class="number">00283</span>: recovery session canceled due <span class="keyword">to</span> errors <span class="number">4</span> </div><div class="line"><span class="symbol">5 </span>ORA-<span class="number">19909</span>: datafile <span class="number">5</span> belongs <span class="keyword">to</span> an orphan incarnation <span class="number">6</span> </div><div class="line"><span class="symbol">7 </span>ORA-<span class="number">01110</span>: <span class="keyword">data</span> file <span class="number">5</span>: <span class="comment">'/u01/app/oracle/oradata/oracle/data01.dbf'</span></div></pre></td></tr></table></figure></p>
<p>还是失败</p>
<h3 id="8-修改参数"><a href="#8-修改参数" class="headerlink" title="8.修改参数"></a>8.修改参数</h3><p>尝试手动调整SCN,手动调整SCN以后必须用resetlogs模式打开数据库，所以需要设置参数’_allow_resetlogs_corruption=true’</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"> <span class="number">1</span> SQL&gt; alter system set <span class="string">"_allow_resetlogs_corruption"</span>=true scope=spfile;  <span class="number">2</span> </div><div class="line"> <span class="number">3</span> System altered.  <span class="number">4</span> </div><div class="line"> <span class="number">5</span>  </div><div class="line"> <span class="number">6</span> </div><div class="line"> <span class="number">7</span> SQL&gt; shutdown immediate;  <span class="number">8</span> </div><div class="line"> <span class="number">9</span> Database closed. <span class="number">10</span> </div><div class="line"><span class="number">11</span> Database dismounted. <span class="number">12</span> </div><div class="line"><span class="number">13</span> ORACLE instance shut down. <span class="number">14</span> </div><div class="line"><span class="number">15</span> SQL&gt; startup mount; <span class="number">16</span> </div><div class="line"><span class="number">17</span> ORACLE instance started. <span class="number">18</span> </div><div class="line"><span class="number">19</span> Total System Global Area  <span class="number">534462464</span> bytes <span class="number">20</span> </div><div class="line"><span class="number">21</span> Fixed Size                  <span class="number">2215064</span> bytes <span class="number">22</span> </div><div class="line"><span class="number">23</span> Variable Size             <span class="number">406848360</span> bytes <span class="number">24</span> </div><div class="line"><span class="number">25</span> Database Buffers          <span class="number">121634816</span> bytes <span class="number">26</span> </div><div class="line"><span class="number">27</span> Redo Buffers                <span class="number">3764224</span> bytes <span class="number">28</span> </div><div class="line"><span class="number">29</span> Database mounted.</div></pre></td></tr></table></figure>
<h3 id="9-再次介质恢复"><a href="#9-再次介质恢复" class="headerlink" title="9.再次介质恢复"></a>9.再次介质恢复</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>SQL&gt; recover database until cancel; <span class="number">2</span> </div><div class="line"><span class="symbol">3 </span>Media recovery complete.</div></pre></td></tr></table></figure>
<p>备注：因为用RESETLOGS来打开数据库，所以上面这一步很又做了一遍介质恢复（虽然不做这个操作也能打开数据库），但个人觉得是必须要的，然后再将数据文件状态联机
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>SQL&gt; alter database datafile <span class="number">5</span> online; <span class="number">2</span> </div><div class="line"><span class="symbol">3 </span>Database altered.</div><div class="line"><span class="symbol">1 </span>SQL&gt; alter database <span class="keyword">open</span> RESETLOGS; <span class="number">2</span> </div><div class="line"><span class="symbol">3 </span>Database altered.</div></pre></td></tr></table></figure></p>
<h3 id="10-修改参数，将该参数修改回原来状态"><a href="#10-修改参数，将该参数修改回原来状态" class="headerlink" title="10.修改参数，将该参数修改回原来状态"></a>10.修改参数，将该参数修改回原来状态</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>SQL&gt; alter <span class="keyword">system</span> <span class="keyword">reset</span> <span class="string">"_allow_resetlogs_corruption"</span> scope=spfile sid=<span class="comment">'*'; 2 </span></div><div class="line"><span class="symbol">3 </span><span class="keyword">System</span> altered.</div></pre></td></tr></table></figure>
<h3 id="11-查看数据文件"><a href="#11-查看数据文件" class="headerlink" title="11.查看数据文件"></a>11.查看数据文件</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; <span class="keyword">select</span> FILE_ID,FILE_NAME,TABLESPACE_NAME,ONLINE_STATUS <span class="keyword">from</span> dba_data_files;</div></pre></td></tr></table></figure>
<img src="/2015/12/03/非归档模式数据恢复-oracle11g-r2/1.jpg" alt="查看数据文件状态" title="查看数据文件状态">
<p>再查看下恢复视图</p>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">1 </span>select * from v$recover_file</div></pre></td></tr></table></figure>
<p>无任何内容显示，到此本实验结束
总结：本实验讨论在非归档情况下数据恢复，实验中需注重oracle提示的错误信息，针对提示信息采取措施同时还需不断尝试打开数据库。</p>
<p><strong>转载</strong>：
作者：david_zhang@sh 
链接：<a href="http://www.cnblogs.com/david-zhang-index/archive/2012/04/03/2431490.html?updated=1" target="_blank" rel="external">http://www.cnblogs.com/david-zhang-index/archive/2012/04/03/2431490.html?updated=1</a></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle数据库文件迁移步骤]]></title>
      <url>/2015/11/23/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB%E6%AD%A5%E9%AA%A4/</url>
      <content type="html"><![CDATA[<p>根据实际需要，有时安装了oracle之后需要扩展磁盘空间时，往往是新增一个单独的文件路径并挂载存储，这时便需要整体迁移数据库文件</p>
<p><strong>（1）首先确认需要迁移的数据库文件</strong>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">SQL&gt; select name from v<span class="formula">$controlfile;</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">NAME</div><div class="line"></div><div class="line">-----------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">CONTROL</span></span>01.CTL</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">CONTROL</span></span>02.CTL</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">SQL&gt; select name from v$datafile;</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">NAME</div><div class="line"></div><div class="line">-----------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">SYSTEM</span></span>01.DBF</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">SYSAUX</span></span>01.DBF</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">UNDOTBS</span></span>01.DBF</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">USERS</span></span>01.DBF</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">SQL&gt; select member from v<span class="formula">$logfile;</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">MEMBER</div><div class="line"></div><div class="line">---------------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">REDO</span></span>01.LOG</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">REDO</span></span>02.LOG</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">REDO</span></span>03.LOG</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">SQL&gt; select name from v$tempfile;</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">NAME</div><div class="line"></div><div class="line">--------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">TEMP</span></span>01.DBF</div></pre></td></tr></table></figure></p>
<p><strong>（2）创建pfile，备份spfile</strong>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SQL&gt; create pfile from spfile<span class="comment">;</span></div><div class="line"></div><div class="line"><span class="keyword">move </span>SPFILEXSFREE.<span class="keyword">ORA </span>SPFILEXSFREE.<span class="keyword">ORA_bak</span></div></pre></td></tr></table></figure></p>
<p><strong>（3）关闭数据库</strong>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; <span class="keyword">shutdown </span>immediate<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p><strong>（4）迁移数据库文件</strong></p>
<p>将D:\oracle\oradata下的文件复制到D:\oracle\oradata_bak下（本测试是将oradata目录下的数据库文件迁移至oradata_bak下）</p>
<p><strong>（5）修改pfile中控制文件路径</strong>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*.control_files='D:<span class="symbol">\o</span>racle<span class="symbol">\o</span>radata_bak<span class="symbol">\x</span>sfree<span class="symbol">\c</span>ontrol01.ctl','D:<span class="symbol">\o</span>racle<span class="symbol">\o</span>radata_bak<span class="symbol">\x</span>sfree<span class="symbol">\c</span>ontrol02.ctl'</div></pre></td></tr></table></figure></p>
<p><strong>（6）rename文件</strong>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">SQL&gt; startup mount pfile='D:<span class="symbol">\o</span>racle<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1<span class="symbol">\d</span>atabase<span class="symbol">\I</span>NITxsfree.ORA';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSTEM01.DBF'  to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSTEM01.DBF';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSAUX01.DBF'  to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSAUX01.DBF';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>NDOTBS01.DBF' to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>NDOTBS01.DBF';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>SERS01.DBF'   to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>SERS01.DBF'; </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO01.LOG'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO01.LOG'; </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO02.LOG'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO02.LOG';  </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO03.LOG'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO03.LOG'; </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\T</span>EMP01.DBF'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\T</span>EMP01.DBF';</div></pre></td></tr></table></figure></p>
<p><strong>（7）打开数据库</strong>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter database open;</div><div class="line"></div><div class="line">SQL&gt; create spfile from pfile='D:<span class="symbol">\o</span>racle<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1<span class="symbol">\d</span>atabase<span class="symbol">\I</span>NITxsfree.ORA';</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux平台下的oracle自动备份案例(使用exp工具)]]></title>
      <url>/2015/10/23/oracle-exp/</url>
      <content type="html"><![CDATA[<h3 id="一、配置环境"><a href="#一、配置环境" class="headerlink" title="一、配置环境"></a>一、配置环境</h3><p>在服务器上安装oracle精简客户端，实现在备份服务器的定时整库备份。</p>
<p>服务器：备份服务器</p>
<p>操作系统：Linux Redhat6.3 x64</p>
<p>主要功能：在Linux备份服务器上完成数据库备份</p>
<h3 id="二、配置目标"><a href="#二、配置目标" class="headerlink" title="二、配置目标"></a>二、配置目标</h3><p>无需安装oracle服务器或客户端软件，达到能使用以下功能的目标，并在服务器上进行数据库备份： </p>
<ul>
<li>Ø oci、occi、jdbc的支持  </li>
<li>Ø tnsping</li>
<li>Ø sqlplus</li>
<li>Ø sqlldr</li>
<li>Ø exp</li>
<li>Ø imp </li>
</ul>
<h3 id="三、软件准备"><a href="#三、软件准备" class="headerlink" title="三、软件准备"></a>三、软件准备</h3><p>instantclient-basic-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>instantclient-jdbc-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>instantclient-sqlplus-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>instantclient-sdk-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>exp.zip</p>
<h3 id="四、配置步骤"><a href="#四、配置步骤" class="headerlink" title="四、配置步骤"></a>四、配置步骤</h3><h4 id="1、安装包上传及安装"><a href="#1、安装包上传及安装" class="headerlink" title="1、安装包上传及安装"></a>1、安装包上传及安装</h4><p>root用户登录，创建目录：
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> mkdir -p /opt/oracle</span></div></pre></td></tr></table></figure></p>
<p>将instantclient客户端压缩包上传至/opt/oracle/下，依次解压程序包
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># cd /opt/oracle</div><div class="line"></div><div class="line"># unzip instantclient-basic-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div><div class="line"></div><div class="line"># unzip instantclient-jdbc-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div><div class="line"></div><div class="line"># unzip instantclient-sdk-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div><div class="line"></div><div class="line"># unzip instantclient-sqlplus-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div></pre></td></tr></table></figure></p>
<p>解压后，会在/opt/oracle下生成instantclient_11_2文件夹</p>
<p>上传exp.zip到/opt/oracle/instantclient_10_2下，将exp、imp程序解压到当前路径下  </p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> instantclient_10_2/</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> unzip exp.zip</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> chmod 755 imp</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> chmod 755 exp</span></div></pre></td></tr></table></figure>
<p>此时应新增出两个可执行文件和一个文件夹</p>
<h4 id="2、配置环境变量"><a href="#2、配置环境变量" class="headerlink" title="2、配置环境变量"></a>2、配置环境变量</h4><p>创建文件/opt/oracle/instantclient_10_2/tnsnames.ora
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi <span class="regexp">/opt/</span>oracle<span class="regexp">/instantclient_10_2/</span>tnsnames.ora</div></pre></td></tr></table></figure></p>
<p>在文件中填入以下内容，粗体部分根据实际情况修改</p>
<p>格式如下：
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">ORCL =</div><div class="line"></div><div class="line">  (<span class="name">DESCRIPTION</span> =</div><div class="line"></div><div class="line">    (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = TCP)(<span class="name">HOST</span> = <span class="number">192.168</span>.<span class="number">5.22</span> )(<span class="name">PORT</span> = <span class="number">1521</span>))</div><div class="line"></div><div class="line">    (<span class="name">CONNECT_DATA</span> =</div><div class="line"></div><div class="line">      (<span class="name">SERVER</span> = DEDICATED)</div><div class="line"></div><div class="line">      (<span class="name">SERVICE_NAME</span> = orcl )</div><div class="line"></div><div class="line">    )</div><div class="line"></div><div class="line">  )</div><div class="line"> </div><div class="line"></div><div class="line">EXTPROC_CONNECTION_DATA =</div><div class="line"></div><div class="line">  (<span class="name">DESCRIPTION</span> =</div><div class="line"></div><div class="line">    (<span class="name">ADDRESS_LIST</span> =</div><div class="line"></div><div class="line">      (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = IPC)(<span class="name">KEY</span> = EXTPROC1))</div><div class="line"></div><div class="line">    )</div><div class="line"></div><div class="line">    (<span class="name">CONNECT_DATA</span> =</div><div class="line"></div><div class="line">      (<span class="name">SID</span> = PLSExtProc)</div><div class="line"></div><div class="line">      (<span class="name">PRESENTATION</span> = RO)</div><div class="line"></div><div class="line">    )</div><div class="line"></div><div class="line">  )</div></pre></td></tr></table></figure></p>
<p>打开/etc/profile文件，并在文件末尾添加以下环境变量
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> vi /etc/profile</span></div></pre></td></tr></table></figure></p>
<p>添加如下配置，粗体部分根据实际情况修改： 
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> NLS_LANG=AMERICAN_AMERICA.ZHS16GBK</div><div class="line"><span class="built_in">export</span> ORACLE_IC_HOME=/opt/oracle/instantclient_10_2</div><div class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_IC_HOME</span></div><div class="line"><span class="built_in">export</span> TNS_ADMIN=<span class="variable">$ORACLE_IC_HOME</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin:<span class="variable">$ORACLE_IC_HOME</span></div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$ORACLE_IC_HOME</span>:/usr/lib</div><div class="line"><span class="built_in">export</span> ORACLE_SID=orcl</div></pre></td></tr></table></figure></p>
<p>输入命令使环境变量立即生效
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></div></pre></td></tr></table></figure></p>
<p>查看环境变量是否成功，出现下图所示路径即为成功，否则检查环境变量设置
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$ORACLE_HOME</span></span></div></pre></td></tr></table></figure></p>
<p>测试sqlplus和exp命令：
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> sqlplus</span></div></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> exp</span></div></pre></td></tr></table></figure>
<p>出现如图所示时即表明配置成功，可正常使用；注意此时若出现报错，回头检查环境变量是否设置正确！</p>
<h4 id="3、配置备份脚本"><a href="#3、配置备份脚本" class="headerlink" title="3、配置备份脚本"></a>3、配置备份脚本</h4><p>创建备份用的文件夹
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> mkdir -p  /opt/bak</span></div></pre></td></tr></table></figure></p>
<p>创建备份脚本并添加以下内容：
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># <span class="keyword">vi</span> /<span class="keyword">opt</span>/bak/bak.<span class="keyword">sh</span></div></pre></td></tr></table></figure></p>
<p>添加内容，注意修改红色部分数据库连接地址和账号：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#bak.sh</span></div><div class="line"></div><div class="line"><span class="built_in">source</span> /etc/profile</div><div class="line"></div><div class="line">PATH=<span class="variable">$PATH</span>:/bin</div><div class="line"></div><div class="line"><span class="built_in">export</span> PATH</div><div class="line"></div><div class="line">BAKPATH=/opt/bak</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">LogFile=/opt/bak/baklog.log</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"-------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> $(date +<span class="string">"%y-%m-%d %H:%M:%S"</span>) &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"--------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line">rq=`date <span class="string">'+%Y%m%d'</span>`</div><div class="line"></div><div class="line">exp user/pass@ORCL file=<span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp  <span class="built_in">log</span>=<span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.log  owner=user&gt;/dev/null 2&gt;&amp;1</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="keyword">if</span> [  <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp ]</div><div class="line"></div><div class="line"><span class="keyword">then</span></div><div class="line"></div><div class="line">tar zcvf  <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.tar.gz  <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.log&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line">rm <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line">rm <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.log&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line"> <span class="built_in">echo</span> <span class="string">"backup success"</span>&gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"> <span class="built_in">echo</span> <span class="string">"backup success"</span></div><div class="line"></div><div class="line"><span class="keyword">else</span>   <span class="built_in">echo</span> <span class="string">"backup fail"</span>&gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"> <span class="built_in">echo</span> <span class="string">"backup fail"</span></div><div class="line"></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">OLDFILE=`date +%Y%m%d --date=<span class="string">'7 day ago'</span>`</div><div class="line"></div><div class="line"><span class="keyword">if</span> [  <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$OLDFILE</span>.tar.gz ]</div><div class="line"></div><div class="line"><span class="keyword">then</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"DELETE OLDFILE bak_<span class="variable">$OLDFILE</span>.tar.gz"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line">rm <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$OLDFILE</span>.tar.gz&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line"><span class="keyword">else</span>   <span class="built_in">echo</span> <span class="string">"no OLDFILE bak_<span class="variable">$OLDFILE</span>.tar.gz  "</span>&gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"-------end <span class="variable">$(date +"%y-%m-%d %H:%M:%S")</span>-------"</span> &gt;&gt; <span class="variable">$LogFile</span></div></pre></td></tr></table></figure>
<p>保存退出。</p>
<p>修改权限
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> chmod 755 /opt/bak/bak.sh</span></div></pre></td></tr></table></figure></p>
<p>手动执行脚本，确认脚本执行无误<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> /opt/bak/</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> ./bak.sh</span></div></pre></td></tr></table></figure></p>
<h4 id="4、设置定时调度任务"><a href="#4、设置定时调度任务" class="headerlink" title="4、设置定时调度任务"></a>4、设置定时调度任务</h4><p>输入命令
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crontab <span class="_">-e</span></span></div></pre></td></tr></table></figure></p>
<p>编辑文本，加入以下代码，每天凌晨四点进行数据备份：
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">0 </span><span class="number">4</span> * * * /opt/bak/bak.sh</div></pre></td></tr></table></figure></p>
<p>保存退出。</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Oracle </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ORACLE数据库数据文件转移方法(非系统表空间)]]></title>
      <url>/2015/10/11/ORACLE%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E8%BD%AC%E7%A7%BB%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>Oracle数据文件转移方法：
1） 手动拷贝要转移的数据数据文件’/opt/oracle/oradata/orcl/xxx.dbf’到新的位置’/opt/oracle/oradata/orcl2/xxx.dbf’。
新CP的数据库文件须授权给oracle用户组
chown -R oracle:oinstall /opt/oracle/oradata/orcl2/xxx.dbf
2） 把数据文件所属的表空间Offline，在SQLPLUS里运行如下命令：
<figure class="highlight plain"><figcaption><span>tablespace xxx offline;```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">3） 修改表空间文件路径alter database rename file &apos;旧文件路径&apos; to &apos;新文件路径&apos;；</div></pre></td></tr></table></figure></p>
<p>sqlplus&gt;ALTER DATABASE RENAME FILE ‘/opt/oracle/oradata/orcl/xxx.dbf’ to ‘/opt/oracle/oradata/orcl2/xxx.db’;
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="number">4</span>） 当执行重命名命令后，ORACLE会认为数据库文件损坏，提示：“需要恢复介质”</div></pre></td></tr></table></figure></p>
<p>sqlplus&gt;shutdown immediate;–关闭数据库
sqlplus&gt;startup mount;–以归档模式启动数据库，不打开数据库
sqlplus&gt; recover datafile ‘/opt/oracle/oradata/orcl2/xxx.db’; –介质恢复
sqlplus&gt;alter database open;
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line"><span class="number">5</span>） 把表空间Online，这样就可以了</div></pre></td></tr></table></figure></p>
<p>sqlplus&gt;alter tablespace xxx online;
 <figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">6</span>） 查看数据文件和表空间及状态</div></pre></td></tr></table></figure></p>
<p>sqlplus&gt; select file_name,tablespace_name,status from dba_data_files;
```</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle切换undo表空间]]></title>
      <url>/2015/09/01/Oracle%E5%88%87%E6%8D%A2undo%E8%A1%A8%E7%A9%BA%E9%97%B4/</url>
      <content type="html"><![CDATA[<h3 id="1-新建undo表空间"><a href="#1-新建undo表空间" class="headerlink" title="1.新建undo表空间"></a>1.新建undo表空间</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; <span class="built_in">create</span> undo tablespace undotbs2 datafile <span class="string">'/data/undotbs02.dbf'</span> size <span class="number">10</span>M autoextend <span class="keyword">on</span> <span class="title">next</span> <span class="title">10M</span> ;</div></pre></td></tr></table></figure>
<h3 id="2-由于undo-tablespace是个动态参数，所以任何时候都可以set。"><a href="#2-由于undo-tablespace是个动态参数，所以任何时候都可以set。" class="headerlink" title="2.由于undo_tablespace是个动态参数，所以任何时候都可以set。"></a>2.由于undo_tablespace是个动态参数，所以任何时候都可以set。</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter <span class="keyword">system</span> <span class="keyword">set</span> undo_tablespace=<span class="string">'undotbs2'</span> scope=both;</div></pre></td></tr></table></figure>
<p>系统已更改。  </p>
<h3 id="3-查看原来的undo表空间中的undo-segment是否都为offline"><a href="#3-查看原来的undo表空间中的undo-segment是否都为offline" class="headerlink" title="3.查看原来的undo表空间中的undo segment是否都为offline"></a>3.查看原来的undo表空间中的undo segment是否都为offline</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">SQL&gt; select tablespace_name,segment_name,status from dba_rollback_segs; </div><div class="line">TABLESPACE_NAME                SEGMENT_NAME                   STATUS </div><div class="line">------------------------------ ------------------------------ ---------------- </div><div class="line"><span class="keyword">SYSTEM</span>                         <span class="keyword">SYSTEM</span>                         ONLINE </div><div class="line">UNDOTBS1                       _SYSSMU1<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU2<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU3<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU4<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU5<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU6<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU7<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU8<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU9<span class="symbol">$</span>                      OFFLINE </div><div class="line">UNDOTBS1                       _SYSSMU10<span class="symbol">$</span>                     OFFLINE </div><div class="line">UNDOTBS2                       _SYSSMU11<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU12<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU13<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU14<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU15<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU16<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU17<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU18<span class="symbol">$</span>                     ONLINE </div><div class="line">UNDOTBS2                       _SYSSMU19<span class="symbol">$</span>                     ONLINE </div><div class="line">TABLESPACE_NAME                SEGMENT_NAME                   STATUS </div><div class="line">------------------------------ ------------------------------ ---------------- </div><div class="line">UNDOTBS2                       _SYSSMU20<span class="symbol">$</span>                     ONLINE </div><div class="line"><span class="number">21</span> rows selected</div></pre></td></tr></table></figure>
<p>原来undotbs1的undo_segment 都为offline，则可以删除undotbs1.
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">SQL&gt;</span><span class="bash"> alter tablespace undotbs1 offline;</span></div><div class="line"><span class="meta">SQL&gt;</span><span class="bash"> drop tablespace undotbs1 including contents and datafiles;</span></div></pre></td></tr></table></figure></p>
<p>表空间已删除。
再次查看：
<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">SQL&gt; select tablespace_name,segment_name,status from dba_rollback_segs;</div><div class="line">TABLESPACE_NAME                SEGMENT_NAME                   STATUS</div><div class="line">------------------------------ ------------------------------ ----------------</div><div class="line"><span class="keyword">SYSTEM</span>                         <span class="keyword">SYSTEM</span>                         ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU11<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU12<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU13<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU14<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU15<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU16<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU17<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU18<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU19<span class="symbol">$</span>                     ONLINE</div><div class="line">UNDOTBS2                       _SYSSMU20<span class="symbol">$</span>                     ONLINE</div><div class="line"><span class="number">11</span> rows selected  </div><div class="line"></div><div class="line">SQL&gt; show <span class="keyword">parameter</span> undo</div><div class="line">NAME                                 <span class="comment">TYPE        VALUE</span></div><div class="line">------------------------------------ ----------- ------------------------------</div><div class="line">undo_management                      <span class="comment">string      AUTO</span></div><div class="line">undo_retention                       <span class="comment">integer     900</span></div><div class="line">undo_tablespace                      <span class="comment">string      undotbs1</span></div><div class="line">--EOF</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[netstat 的10个基本用法]]></title>
      <url>/2015/07/24/netstat-%E7%9A%8410%E4%B8%AA%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><strong>Netstat 简介</strong>
Netstat 是一款命令行工具，可用于列出系统上所有的网络套接字连接情况，包括 tcp, udp 以及 unix 套接字，另外它还能列出处于监听状态（即等待接入请求）的套接字。如果你想确认系统上的 Web 服务有没有起来，你可以查看80端口有没有打开。以上功能使 netstat 成为网管和系统管理员的必备利器。在这篇教程中，我会列出几个例子，教大家如何使用 netstat 去查找网络连接信息和系统开启的端口号。</p>
<p>以下的简单介绍来自 netstat 的 man 手册：
netstat - 打印网络连接、路由表、连接的数据统计、伪装连接以及广播域成员。</p>
<h3 id="1-列出所有连接"><a href="#1-列出所有连接" class="headerlink" title="1. 列出所有连接"></a>1. 列出所有连接</h3><p>第一个要介绍的，是最简单的命令：列出所有当前的连接。使用 -a 选项即可。
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">$ netstat -a</div><div class="line"> </div><div class="line">Active Internet connections (servers <span class="keyword">and</span> established)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State </div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="symbol">enlightened:</span>domain *<span class="symbol">:*</span> LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="symbol">localhost:</span>ipp *<span class="symbol">:*</span> LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="symbol">local:</span><span class="number">54750</span> li24<span class="number">0</span>-<span class="number">5</span>.members.<span class="symbol">li:</span>http ESTABLISHED</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="symbol">local:</span><span class="number">49980</span> del01s07-<span class="keyword">in</span>-f14.<span class="number">1</span><span class="symbol">:https</span> ESTABLISHED</div><div class="line">tcp6 <span class="number">0</span> <span class="number">0</span> ip6-<span class="symbol">localhost:</span>ipp [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> LISTEN</div><div class="line">udp <span class="number">0</span> <span class="number">0</span> <span class="symbol">enlightened:</span>domain *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:bootpc</span> *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="symbol">local:</span>ntp *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> <span class="symbol">localhost:</span>ntp *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:ntp</span> *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:</span><span class="number">58570</span> *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:mdns</span> *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:</span><span class="number">49459</span> *<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> fe80::<span class="number">216</span><span class="symbol">:</span><span class="number">36</span><span class="symbol">ff:</span><span class="symbol">fef8:</span>ntp [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> ip6-<span class="symbol">localhost:</span>ntp [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:ntp</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:mdns</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:</span><span class="number">63811</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:</span><span class="number">54952</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">Active UNIX domain sockets (servers <span class="keyword">and</span> established)</div><div class="line">Proto RefCnt Flags Type State I-Node Path</div><div class="line">unix <span class="number">2</span> [ ACC ] STREAM LISTENING <span class="number">12403</span> @/tmp/dbus-IDgfj3UGXX</div><div class="line">unix <span class="number">2</span> [ ACC ] STREAM LISTENING <span class="number">40202</span> @/dbus-vfs-daemon/socket-<span class="number">6</span>nUC6CCx</div></pre></td></tr></table></figure></p>
<p>上述命令列出 tcp, udp 和 unix 协议下所有套接字的所有连接。然而这些信息还不够详细，管理员往往需要查看某个协议或端口的具体连接情况。</p>
<h3 id="2-只列出-TCP-或-UDP-协议的连接"><a href="#2-只列出-TCP-或-UDP-协议的连接" class="headerlink" title="2. 只列出 TCP 或 UDP 协议的连接"></a>2. 只列出 TCP 或 UDP 协议的连接</h3><p>使用 -t 选项列出 TCP 协议的连接：
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ netstat -<span class="keyword">at</span></div><div class="line">Active Internet connections (servers <span class="keyword">and</span> established)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State </div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> enlightened:domain *:* LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> localhost:ipp *:* LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="built_in">local</span>:<span class="number">36310</span> del01s07-<span class="keyword">in</span>-f24<span class="number">.1</span>:<span class="keyword">https</span> ESTABLISHED</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="built_in">local</span>:<span class="number">45038</span> a96<span class="number">-17</span><span class="number">-181</span><span class="number">-10.</span>depl:<span class="keyword">http</span> ESTABLISHED</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="built_in">local</span>:<span class="number">37892</span> ABTS-North-Static-:<span class="keyword">http</span> ESTABLISHED</div><div class="line">.....</div></pre></td></tr></table></figure></p>
<p>使用 -u 选项列出 UDP 协议的连接：
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ netstat -au</div><div class="line">Active Internet connections (servers <span class="keyword">and</span> established)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:</span><span class="number">34660</span> *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> <span class="symbol">enlightened:</span>domain *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:bootpc</span> *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> enlightened.<span class="symbol">local:</span>ntp *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> <span class="symbol">localhost:</span>ntp *<span class="symbol">:*</span> </div><div class="line">udp <span class="number">0</span> <span class="number">0</span> *<span class="symbol">:ntp</span> *<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> fe80::<span class="number">216</span><span class="symbol">:</span><span class="number">36</span><span class="symbol">ff:</span><span class="symbol">fef8:</span>ntp [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> ip6-<span class="symbol">localhost:</span>ntp [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span> </div><div class="line">udp6 <span class="number">0</span> <span class="number">0</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:ntp</span> [<span class="symbol">:</span><span class="symbol">:</span>]<span class="symbol">:*</span></div></pre></td></tr></table></figure></p>
<p>上面同时显示了 IPv4 和 IPv6 的连接。</p>
<h3 id="3-禁用反向域名解析，加快查询速度"><a href="#3-禁用反向域名解析，加快查询速度" class="headerlink" title="3. 禁用反向域名解析，加快查询速度"></a>3. 禁用反向域名解析，加快查询速度</h3><p>默认情况下 netstat 会通过反向域名解析技术查找每个 IP 地址对应的主机名。这会降低查找速度。如果你觉得 IP 地址已经足够，而没有必要知道主机名，就使用 -n 选项禁用域名解析功能。
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ netstat -ant</div><div class="line">Active Internet connections (servers <span class="keyword">and</span> established)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State </div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.1</span><span class="meta">.1</span>:<span class="number">53</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">631</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.2</span>:<span class="number">49058</span> <span class="number">173.255</span><span class="meta">.230</span><span class="meta">.5</span>:<span class="number">80</span> ESTABLISHED</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.2</span>:<span class="number">33324</span> <span class="number">173.194</span><span class="meta">.36</span><span class="meta">.117</span>:<span class="number">443</span> ESTABLISHED</div><div class="line">tcp6 <span class="number">0</span> <span class="number">0</span> ::<span class="number">1</span>:<span class="number">631</span> :::* LISTEN</div></pre></td></tr></table></figure></p>
<p>上述命令列出所有 TCP 协议的连接，没有使用域名解析技术。So easy ? 非常好。</p>
<h3 id="4-只列出监听中的连接"><a href="#4-只列出监听中的连接" class="headerlink" title="4. 只列出监听中的连接"></a>4. 只列出监听中的连接</h3><p>任何网络服务的后台进程都会打开一个端口，用于监听接入的请求。这些正在监听的套接字也和连接的套接字一样，也能被 netstat 列出来。使用 -l 选项列出正在监听的套接字。
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ netstat -tnl</div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State </div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.1</span><span class="meta">.1</span>:<span class="number">53</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">631</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN</div><div class="line">tcp6 <span class="number">0</span> <span class="number">0</span> ::<span class="number">1</span>:<span class="number">631</span> :::* LISTEN</div></pre></td></tr></table></figure></p>
<p>现在我们可以看到处于监听状态的 TCP 端口和连接。如果你查看所有监听端口，去掉 -t 选项。如果你只想查看 UDP 端口，使用 -u 选项，代替 -t 选项。
注意：不要使用 -a 选项，否则 netstat 会列出所有连接，而不仅仅是监听端口。</p>
<h3 id="5-获取进程名、进程号以及用户-ID"><a href="#5-获取进程名、进程号以及用户-ID" class="headerlink" title="5. 获取进程名、进程号以及用户 ID"></a>5. 获取进程名、进程号以及用户 ID</h3><p>查看端口和连接的信息时，能查看到它们对应的进程名和进程号对系统管理员来说是非常有帮助的。举个栗子，Apache 的 httpd 服务开启80端口，如果你要查看 http 服务是否已经启动，或者 http 服务是由 apache 还是 nginx 启动的，这时候你可以看看进程名。
使用 -p 选项查看进程信息。
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">~$ sudo netstat -nlpt</div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.1</span><span class="meta">.1</span>:<span class="number">53</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN <span class="number">1144</span>/dnsmasq</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">631</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:* LISTEN <span class="number">661</span>/cupsd</div><div class="line">tcp6 <span class="number">0</span> <span class="number">0</span> ::<span class="number">1</span>:<span class="number">631</span> :::* LISTEN <span class="number">661</span>/cupsd</div></pre></td></tr></table></figure></p>
<p>使用 -p 选项时，netstat 必须运行在 root 权限之下，不然它就不能得到运行在 root 权限下的进程名，而很多服务包括 http 和 ftp 都运行在 root 权限之下。
相比进程名和进程号而言，查看进程的拥有者会更有用。使用 -ep 选项可以同时查看进程名和用户名。
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ sudo netstat -ltpe</div><div class="line">Active Internet connections (only servers)</div><div class="line">Proto Recv-Q Send-Q Local Address Foreign Address State User Inode PID/Program name</div><div class="line">tcp<span class="number"> 0 </span>0 enlightened:domain *:* LISTEN root<span class="number"> 11090 </span>1144/dnsmasq</div><div class="line">tcp<span class="number"> 0 </span>0 localhost:ipp *:* LISTEN root<span class="number"> 9755 </span>661/cupsd</div><div class="line">tcp6<span class="number"> 0 </span>0 ip6-localhost:ipp [::]:* LISTEN root<span class="number"> 9754 </span>661/cupsd</div></pre></td></tr></table></figure></p>
<p>上面列出 TCP 协议下的监听套接字，同时显示进程信息和一些额外信息。
这些额外的信息包括用户名和进程的索引节点号。这个命令对网管来说很有用。
注意 - 假如你将 -n 和 -e 选项一起使用，User 列的属性就是用户的 ID 号，而不是用户名。</p>
<h3 id="6-打印统计数据"><a href="#6-打印统计数据" class="headerlink" title="6. 打印统计数据"></a>6. 打印统计数据</h3><p>netstat 可以打印出网络统计数据，包括某个协议下的收发包数量。
下面列出所有网络包的统计情况：
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ netstat -s</div><div class="line">Ip:</div><div class="line"><span class="number"> 32797 </span>total packets received</div><div class="line"><span class="number"> 0 </span>forwarded</div><div class="line"><span class="number"> 0 </span>incoming packets discarded</div><div class="line"><span class="number"> 32795 </span>incoming packets delivered</div><div class="line"><span class="number"> 29115 </span>requests sent out</div><div class="line"><span class="number"> 60 </span>outgoing packets dropped</div><div class="line">Icmp:</div><div class="line"><span class="number"> 125 </span>ICMP messages received</div><div class="line"><span class="number"> 0 </span>input ICMP message failed.</div><div class="line">ICMP input histogram:</div><div class="line">destination unreachable: 125</div><div class="line"><span class="number"> 125 </span>ICMP messages sent</div><div class="line"><span class="number"> 0 </span>ICMP messages failed</div><div class="line">ICMP output histogram:</div><div class="line">destination unreachable: 125</div><div class="line">... OUTPUT TRUNCATED ...</div></pre></td></tr></table></figure></p>
<p>如果想只打印出 TCP 或 UDP 协议的统计数据，只要加上对应的选项（-t 和 -u）即可，so easy。</p>
<h3 id="7-显示内核路由信息"><a href="#7-显示内核路由信息" class="headerlink" title="7. 显示内核路由信息"></a>7. 显示内核路由信息</h3><p>使用 -r 选项打印内核路由信息。打印出来的信息与 route 命令输出的信息一样。我们也可以使用 -n 选项禁止域名解析。
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ netstat -rn</div><div class="line">Kernel IP routing table</div><div class="line">Destination Gateway Genmask Flags MSS Window irtt Iface</div><div class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> UG <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> eth0</div><div class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> U <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> eth0</div></pre></td></tr></table></figure></p>
<h3 id="8-打印网络接口"><a href="#8-打印网络接口" class="headerlink" title="8. 打印网络接口"></a>8. 打印网络接口</h3><p>netstat 也能打印网络接口信息，-i 选项就是为这个功能而生。
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ netstat -i</div><div class="line">Kernel Interface table</div><div class="line">Iface MTU Met RX-OK RX-ERR RX-DRP RX-OVR TX-OK TX-ERR TX-DRP TX-OVR Flg</div><div class="line">eth0 <span class="number">1500</span> <span class="number">0</span> <span class="number">31611</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">27503</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> BMRU</div><div class="line">lo <span class="number">65536</span> <span class="number">0</span> <span class="number">2913</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2913</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> LRU</div></pre></td></tr></table></figure></p>
<p>上面输出的信息比较原始。我们将 -e 选项和 -i 选项搭配使用，可以输出用户友好的信息。
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ netstat -ie</div><div class="line">Kernel Interface table</div><div class="line">eth0 Link <span class="string">encap:</span>Ethernet HWaddr <span class="number">00</span>:<span class="number">16</span>:<span class="number">36</span>:<span class="string">f8:</span><span class="string">b2:</span><span class="number">64</span> </div><div class="line">inet <span class="string">addr:</span><span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> <span class="string">Bcast:</span><span class="number">192.168</span><span class="number">.1</span><span class="number">.255</span> <span class="string">Mask:</span><span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></div><div class="line">inet6 <span class="string">addr:</span> <span class="string">fe80:</span>:<span class="number">216</span>:<span class="number">36</span><span class="string">ff:</span><span class="string">fef8:</span>b264/<span class="number">64</span> <span class="string">Scope:</span>Link</div><div class="line">UP BROADCAST RUNNING MULTICAST <span class="string">MTU:</span><span class="number">1500</span> <span class="string">Metric:</span><span class="number">1</span></div><div class="line">RX <span class="string">packets:</span><span class="number">31682</span> <span class="string">errors:</span><span class="number">0</span> <span class="string">dropped:</span><span class="number">0</span> <span class="string">overruns:</span><span class="number">0</span> <span class="string">frame:</span><span class="number">0</span></div><div class="line">TX <span class="string">packets:</span><span class="number">27573</span> <span class="string">errors:</span><span class="number">0</span> <span class="string">dropped:</span><span class="number">0</span> <span class="string">overruns:</span><span class="number">0</span> <span class="string">carrier:</span><span class="number">0</span></div><div class="line"><span class="string">collisions:</span><span class="number">0</span> <span class="string">txqueuelen:</span><span class="number">1000</span> </div><div class="line">RX <span class="string">bytes:</span><span class="number">29637117</span> (<span class="number">29.6</span> MB) TX <span class="string">bytes:</span><span class="number">4590583</span> (<span class="number">4.5</span> MB)</div><div class="line"><span class="symbol"> Interrupt:</span><span class="number">18</span> <span class="string">Memory:</span>da000000-da020000</div><div class="line"> </div><div class="line">lo Link <span class="string">encap:</span>Local Loopback </div><div class="line">inet <span class="string">addr:</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">Mask:</span><span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></div><div class="line">inet6 <span class="string">addr:</span> ::<span class="number">1</span>/<span class="number">128</span> <span class="string">Scope:</span>Host</div><div class="line">UP LOOPBACK RUNNING <span class="string">MTU:</span><span class="number">65536</span> <span class="string">Metric:</span><span class="number">1</span></div><div class="line">RX <span class="string">packets:</span><span class="number">2921</span> <span class="string">errors:</span><span class="number">0</span> <span class="string">dropped:</span><span class="number">0</span> <span class="string">overruns:</span><span class="number">0</span> <span class="string">frame:</span><span class="number">0</span></div><div class="line">TX <span class="string">packets:</span><span class="number">2921</span> <span class="string">errors:</span><span class="number">0</span> <span class="string">dropped:</span><span class="number">0</span> <span class="string">overruns:</span><span class="number">0</span> <span class="string">carrier:</span><span class="number">0</span></div><div class="line"><span class="string">collisions:</span><span class="number">0</span> <span class="string">txqueuelen:</span><span class="number">0</span> </div><div class="line">RX <span class="string">bytes:</span><span class="number">305297</span> (<span class="number">305.2</span> KB) TX <span class="string">bytes:</span><span class="number">305297</span> (<span class="number">305.2</span> KB)</div></pre></td></tr></table></figure></p>
<p>上面的输出信息与 ifconfig 输出的信息一样。</p>
<h3 id="9-netstat-持续输出"><a href="#9-netstat-持续输出" class="headerlink" title="9. netstat 持续输出"></a>9. netstat 持续输出</h3><p>我们可以使用 netstat 的 -c 选项持续输出信息。
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> netstat -ct</span></div></pre></td></tr></table></figure></p>
<p>这个命令可持续输出 TCP 协议信息。</p>
<h3 id="10-显示多播组信息"><a href="#10-显示多播组信息" class="headerlink" title="10. 显示多播组信息"></a>10. 显示多播组信息</h3><p>选项 -g 会输出 IPv4 和 IPv6 的多播组信息。
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ netstat -g</div><div class="line">IPv6/IPv4 Group Memberships</div><div class="line">Interface RefCnt Group</div><div class="line">--------------- ------ ---------------------</div><div class="line">lo <span class="number">1</span> all-systems.mcast.net</div><div class="line">eth<span class="number">0</span> <span class="number">1</span> <span class="number">224.0</span>.<span class="number">0</span>.<span class="number">251</span></div><div class="line">eth<span class="number">0</span> <span class="number">1</span> all-systems.mcast.net</div><div class="line">lo <span class="number">1</span> ip6-allnodes</div><div class="line">lo <span class="number">1</span> ff01::<span class="number">1</span></div><div class="line">eth<span class="number">0</span> <span class="number">1</span> ff02::fb</div><div class="line">eth<span class="number">0</span> <span class="number">1</span> ff02::<span class="number">1</span><span class="symbol">:fff8</span><span class="symbol">:b264</span></div><div class="line">eth<span class="number">0</span> <span class="number">1</span> ip6-allnodes</div><div class="line">eth<span class="number">0</span> <span class="number">1</span> ff01::<span class="number">1</span></div><div class="line">wlan<span class="number">0</span> <span class="number">1</span> ip6-allnodes</div><div class="line">wlan<span class="number">0</span> <span class="number">1</span> ff01::<span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>更多用法
目前为止我们列出了 netstat 的基本用法，现在让我们一起来 geek 吧～
打印 active 状态的连接
active 状态的套接字连接用 “ESTABLISHED” 字段表示，所以我们可以使用 grep 命令获得 active 状态的连接：
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ netstat -atnp | grep ESTA</div><div class="line">(<span class="keyword">Not</span> all processes could be identified, non-owned process info</div><div class="line">will <span class="keyword">not</span> be shown, you would have to be root to see it all.)</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.2</span>:<span class="number">49156</span> <span class="number">173.255</span><span class="meta">.230</span><span class="meta">.5</span>:<span class="number">80</span> ESTABLISHED <span class="number">1691</span>/chrome</div><div class="line">tcp <span class="number">0</span> <span class="number">0</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.2</span>:<span class="number">33324</span> <span class="number">173.194</span><span class="meta">.36</span><span class="meta">.117</span>:<span class="number">443</span> ESTABLISHED <span class="number">1691</span>/chrome</div></pre></td></tr></table></figure></p>
<p>配合 watch 命令监视 active 状态的连接：
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> watch <span class="_">-d</span> -n0 <span class="string">"netstat -atnp | grep ESTA"</span></span></div></pre></td></tr></table></figure></p>
<p>查看服务是否在运行
如果你想看看 http,smtp 或 ntp 服务是否在运行，使用 grep。
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ sudo netstat -aple | grep ntp</div><div class="line">udp<span class="number"> 0 </span>0 enlightened.local:ntp *:* root<span class="number"> 17430 </span>1789/ntpd</div><div class="line">udp<span class="number"> 0 </span>0 localhost:ntp *:* root<span class="number"> 17429 </span>1789/ntpd</div><div class="line">udp<span class="number"> 0 </span>0 *:ntp *:* root<span class="number"> 17422 </span>1789/ntpd</div><div class="line">udp6<span class="number"> 0 </span>0 fe80::216:36ff:fef8:ntp [::]:* root<span class="number"> 17432 </span>1789/ntpd</div><div class="line">udp6<span class="number"> 0 </span>0 ip6-localhost:ntp [::]:* root<span class="number"> 17431 </span>1789/ntpd</div><div class="line">udp6<span class="number"> 0 </span>0 [::]:ntp [::]:* root<span class="number"> 17423 </span>1789/ntpd</div><div class="line">unix<span class="number"> 2 </span>[ ] DGRAM<span class="number"> 17418 </span>1789/ntpd</div></pre></td></tr></table></figure></p>
<p>从这里可以看到 ntp 服务正在运行。使用 grep 命令你可以查看 http 或 smtp 或其它任何你想查看的服务。
好了，netstat 的大部分功能都介绍过了，如果你想知道 netstat 更高级的功能，阅读它的手册吧（man netstat）。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 行列转换逻辑]]></title>
      <url>/2015/07/15/Oracle-%E8%A1%8C%E5%88%97%E8%BD%AC%E6%8D%A2%E9%80%BB%E8%BE%91/</url>
      <content type="html"><![CDATA[<p>该需求涉及到两个知识点：1、分析函数；2、行列转换。
先讲实现
第一步：建测试表</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> COL_TO_ROW</div><div class="line">(</div><div class="line">  COL1 VARCHAR2(<span class="number">20</span>),</div><div class="line">  COL2 VARCHAR2(<span class="number">20</span>)</div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'A'</span>,<span class="string">'1'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'A'</span>,<span class="string">'12'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'B'</span>,<span class="string">'2'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'B'</span>,<span class="string">'23'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'C'</span>,<span class="string">'3'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'C'</span>,<span class="string">'334'</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> col_to_row <span class="keyword">values</span>(<span class="string">'C'</span>,<span class="string">'355'</span>);</div><div class="line"></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> COL_TO_ROW;</div></pre></td></tr></table></figure>
<img src="/2015/07/15/Oracle-行列转换逻辑/1.jpg" alt="图 1" title="图 1">
<p>第二步：对表进行分组，组内编号1，2，3
<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> col1,col2,row_number()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> col1 <span class="keyword">order</span> <span class="keyword">by</span> col2)colnum </div><div class="line"><span class="keyword">from</span> COL_TO_ROW;</div></pre></td></tr></table></figure></p>
<img src="/2015/07/15/Oracle-行列转换逻辑/2.jpg" alt="图 2" title="图 2">
<p>第三步：行列转换，完成
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> col1,</div><div class="line"><span class="keyword">max</span>(<span class="keyword">decode</span>(colnum,<span class="number">1</span>,col2,<span class="literal">null</span>))colA,</div><div class="line"><span class="keyword">max</span>(<span class="keyword">decode</span>(colnum,<span class="number">2</span>,col2,<span class="literal">null</span>))colB,</div><div class="line"><span class="keyword">max</span>(<span class="keyword">decode</span>(colnum,<span class="number">3</span>,col2,<span class="literal">null</span>))colC <span class="keyword">from</span> </div><div class="line">(</div><div class="line"><span class="keyword">select</span> col1,col2,row_number()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> col1 <span class="keyword">order</span> <span class="keyword">by</span> col2)colnum <span class="keyword">from</span> COL_TO_ROW </div><div class="line">)</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> col1</div></pre></td></tr></table></figure></p>
<img src="/2015/07/15/Oracle-行列转换逻辑/3.jpg" alt="图 3" title="图 3">
<p>知识点</p>
<p>1、通过col1字段进行分组，并组内编号
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">row_number</span><span class="params">()</span><span class="title">over</span><span class="params">(partition by col1 order by col2)</span><span class="title">colnum</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="title">row_number</span><span class="params">()</span></span> over ([partition by col1] <span class="attribute">order</span> by col2) ) as 别名</div></pre></td></tr></table></figure></p>
<p>表示根据col1分组，在分组内部根据 col2排序
而这个“别名”的值就表示每组内部排序后的顺序编号（组内连续的唯一的）,[partition by col1] 可省略。
2、max(decode(colnum,1,col2,null))colA</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle计算datafile可以resize收缩的空间]]></title>
      <url>/2015/06/03/Oracle%E8%AE%A1%E7%AE%97datafile%E5%8F%AF%E4%BB%A5resize%E6%94%B6%E7%BC%A9%E7%9A%84%E7%A9%BA%E9%97%B4/</url>
      <content type="html"><![CDATA[<p>有时数据库服务器磁盘空间在不知不觉中已经不够用了，当数据库无法使用报错时，需要紧急恢复，再进行转移或磁盘扩容，这时可以临时释放一定磁盘空间，保障数据库正常运行</p>
<p>计算datafile可以resize收缩的空间.
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">col name <span class="keyword">for</span> a40</div><div class="line">col resizecmd <span class="keyword">for</span> a80</div><div class="line"></div><div class="line">select <span class="keyword">a</span>.<span class="built_in">file</span><span class="comment">#,a.name,a.bytes/1024/1024 CurrentMB,</span></div><div class="line">       ceil(HWM * <span class="keyword">a</span>.block_size)/<span class="number">1024</span>/<span class="number">1024</span> ResizeTo,</div><div class="line">       (<span class="keyword">a</span>.<span class="keyword">bytes</span> - HWM * <span class="keyword">a</span>.block_size)/<span class="number">1024</span>/<span class="number">1024</span> ReleaseMB,</div><div class="line">       <span class="string">'alter database datafile '</span><span class="string">''</span>||<span class="keyword">a</span>.name||<span class="string">''</span><span class="string">' resize '</span>||</div><div class="line">       ceil(HWM * <span class="keyword">a</span>.block_size/<span class="number">1024</span>/<span class="number">1024</span>) || <span class="string">'M;'</span> ResizeCMD</div><div class="line"><span class="built_in">from</span> v$datafile <span class="keyword">a</span>,</div><div class="line">     (select file_id,<span class="built_in">max</span>(block_id+blocks<span class="number">-1</span>) HWM</div><div class="line">       <span class="built_in">from</span> dba_extents</div><div class="line">       group <span class="keyword">by</span> file_id) b</div><div class="line">where <span class="keyword">a</span>.<span class="built_in">file</span><span class="comment"># = b.file_id(+)</span></div><div class="line"><span class="keyword">and</span> (<span class="keyword">a</span>.<span class="keyword">bytes</span> - HWM *block_size)&gt;<span class="number">0</span></div><div class="line">order <span class="keyword">by</span> <span class="number">5</span></div></pre></td></tr></table></figure></p>
<p>如果只是想对某个表个间的datafile resize,可采用:
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">select <span class="keyword">a</span>.<span class="built_in">file</span><span class="comment">#,a.name,a.bytes/1024/1024 CurrentMB,</span></div><div class="line">       ceil(HWM * <span class="keyword">a</span>.block_size)/<span class="number">1024</span>/<span class="number">1024</span> ResizeTo,</div><div class="line">       (<span class="keyword">a</span>.<span class="keyword">bytes</span> - HWM * <span class="keyword">a</span>.block_size)/<span class="number">1024</span>/<span class="number">1024</span> ReleaseMB,</div><div class="line">       <span class="string">'alter database datafile '</span><span class="string">''</span>||<span class="keyword">a</span>.name||<span class="string">''</span><span class="string">' resize '</span>||</div><div class="line">       ceil(HWM * <span class="keyword">a</span>.block_size/<span class="number">1024</span>/<span class="number">1024</span>) || <span class="string">'M;'</span> ResizeCMD</div><div class="line"><span class="built_in">from</span> v$datafile <span class="keyword">a</span>,</div><div class="line">     (select file_id,<span class="built_in">max</span>(block_id+blocks<span class="number">-1</span>) HWM</div><div class="line">       <span class="built_in">from</span> dba_extents where file_id <span class="keyword">in</span> </div><div class="line">              (select b.<span class="built_in">file</span><span class="comment">#  From v$tablespace a ,v$datafile b</span></div><div class="line">                where <span class="keyword">a</span>.ts<span class="comment">#=b.ts# and a.name='MP2000')</span></div><div class="line">       group <span class="keyword">by</span> file_id) b</div><div class="line">where <span class="keyword">a</span>.<span class="built_in">file</span><span class="comment"># = b.file_id(+)</span></div><div class="line"><span class="keyword">and</span> (<span class="keyword">a</span>.<span class="keyword">bytes</span> - HWM *block_size)&gt;<span class="number">0</span></div><div class="line">order <span class="keyword">by</span> <span class="number">5</span></div></pre></td></tr></table></figure></p>
<p>计划tempfile可以resize的空间.on apply that have only one tempfile
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="string">'alter database tempfile '''</span>||a.name ||<span class="string">''' reize '</span>||b.siz||<span class="string">'M;'</span> <span class="keyword">from</span> v$tempfile a,</div><div class="line">     (<span class="keyword">select</span> tmsize.maxblk*bk.value/<span class="number">1024</span>/<span class="number">1024</span> siz <span class="keyword">from</span></div><div class="line">         (<span class="keyword">select</span> nvl(<span class="keyword">max</span>(segblk#),<span class="number">128</span>) maxblk  <span class="keyword">from</span> v$sort_usage) tmsize,</div><div class="line">         (<span class="keyword">select</span> <span class="keyword">value</span> <span class="keyword">From</span> v$parameter <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'db_block_size'</span>) bk) b</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle数据分区表建立及自动建立分区存储过程]]></title>
      <url>/2015/05/22/Oracle%E6%95%B0%E6%8D%AE%E5%88%86%E5%8C%BA%E8%A1%A8%E5%BB%BA%E7%AB%8B%E5%8F%8A%E8%87%AA%E5%8A%A8%E5%BB%BA%E7%AB%8B%E5%88%86%E5%8C%BA%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>由于一卡通消费数据过多，不利于按时间统计计算，故采取建立分区表的方式来优化查询效率，建立过程如下</p>
<p>创建一卡通消费数据分区表，按时间进行分区，建立时可暂时只创建一个最早时间分区，后续分区通过存储过程自动创建。这里把一卡通消费表直接复制过来，由于操作时间在自动建立分区时不好处理，故修改为varchar类型。
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> M_REC_CONSUME</div><div class="line">(</div><div class="line">ECODE VARCHAR2(<span class="number">20</span>) <span class="keyword">default</span> <span class="number">00000000</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line"><span class="keyword">ID</span> <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">NOTECASE <span class="built_in">NUMBER</span>,</div><div class="line">CUSTOMERID <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">OUTID VARCHAR2(<span class="number">18</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">CARDSN <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">OPCOUNT <span class="built_in">NUMBER</span>,</div><div class="line">OPDT VARCHAR2(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">ODDFARE <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">OPFARE <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">MNGFARE <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">ACCCODE <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">DSCRP VARCHAR2(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">TERMID <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">RECNO <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">UPLOADDATE <span class="built_in">DATE</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">SAMCARDNO <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">SAMTRADENO <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">TRADECARDTYPE <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">TAC <span class="built_in">NUMBER</span>,</div><div class="line">ASN VARCHAR2(<span class="number">20</span>),</div><div class="line">UPDATEFLAG VARCHAR2(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">UPDATEDT <span class="built_in">DATE</span> <span class="keyword">default</span> <span class="keyword">sysdate</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">DOWNDT <span class="built_in">DATE</span>,</div><div class="line">SOURCETABLE <span class="built_in">NUMBER</span> <span class="keyword">not</span> <span class="literal">null</span></div><div class="line">)</div><div class="line"><span class="keyword">partition</span> <span class="keyword">by</span> <span class="keyword">range</span> (opdt)</div><div class="line"></div><div class="line">(</div><div class="line"></div><div class="line"><span class="keyword">partition</span> p201201 <span class="keyword">values</span> <span class="keyword">less</span> <span class="keyword">than</span> (<span class="string">'2012-02-01 00:00:00'</span>)</div></pre></td></tr></table></figure></p>
<p>–创建分区以历史有效记录的第一个月开始，这里要注意分区条件为less than
)</p>
<p>创建存储过程自动建立到当前月份的分区，并写入日志。
存储过程创建：
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">PROCEDURE</span> GENE_AUTO_ADD_PARTITION</div><div class="line"><span class="keyword">IS</span></div><div class="line"><span class="comment">/***********************************************************************</span></div><div class="line">/* Procedure : GENE_AUTO_ADD_PARTITION</div><div class="line">/* Description : General类程序，用于自动增加分区表的分区 == 计算到part_month为止，该增加多少个分区</div><div class="line">/* Logic : 1、找出需要增加分区的分区表，以及这些分区表的最近分区</div><div class="line">/* 2、计算这些分区表要增加几个分区</div><div class="line">/* 3、循环为这些分区表增加分区，直至增加到part_month分区为止</div><div class="line">/* 4、记录日志</div><div class="line">/* Warning : 确保有足够权限，需显示授权：Grant select on dba_segments to user;</div><div class="line">/* eg : call gene_auto_add_partition;</div><div class="line">/* Author YYYY-MM-DD DSC</div><div class="line">/* lihan 2015-04-24 初始版本</div><div class="line">/*</div><div class="line">/*********************************************************************/</div><div class="line">part_month varchar2(<span class="number">100</span>);</div><div class="line">vcurrPartitionName varchar2(100);</div><div class="line">vhistPartitionName varchar2(100);</div><div class="line">vCount number;</div><div class="line">vDDLSql varchar2(1024);</div><div class="line">vLessthan varchar2(100);</div><div class="line">i1 number;</div><div class="line">i2 number;</div><div class="line"></div><div class="line"><span class="keyword">BEGIN</span></div><div class="line"><span class="comment">--初始化参数值</span></div><div class="line">part_month :=to_char(<span class="keyword">sysdate</span> + <span class="number">90</span>,<span class="string">'yyyymm'</span>);<span class="comment">--可提前新建三个月后的分区，预留问题发现及修复时间</span></div><div class="line">i1 :=0;</div><div class="line"><span class="comment">--format current partition name</span></div><div class="line">vcurrPartitionName := 'p'||part_month;</div><div class="line"></div><div class="line">For x in (</div><div class="line"><span class="keyword">SELECT</span> segment_name , <span class="keyword">max</span>(partition_name) partition_name, <span class="keyword">max</span>(tablespace_name) tablespace_name</div><div class="line"><span class="keyword">FROM</span> dba_segments a</div><div class="line"><span class="keyword">WHERE</span> owner = <span class="string">'YBG_CP'</span></div><div class="line"><span class="keyword">AND</span> segment_type = <span class="string">'TABLE PARTITION'</span></div><div class="line"><span class="keyword">AND</span> segment_name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">'%BIN%'</span></div><div class="line"><span class="keyword">AND</span> <span class="keyword">not</span> <span class="keyword">exists</span> (</div><div class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> dba_segments b</div><div class="line"><span class="keyword">WHERE</span> a.segment_name = b.segment_name</div><div class="line"><span class="keyword">AND</span> b.partition_name = vcurrPartitionName)</div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> a.segment_name</div><div class="line">) <span class="keyword">LOOP</span></div><div class="line"></div><div class="line"><span class="comment">--计算需要增加几个分区</span></div><div class="line"><span class="keyword">SELECT</span> (<span class="keyword">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> <span class="keyword">to_date</span>(part_month,<span class="string">'yyyymm'</span>)) - <span class="keyword">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> <span class="keyword">to_date</span>(<span class="keyword">substr</span>(x.partition_name,<span class="number">2</span>,<span class="number">6</span>),<span class="string">'yyyymm'</span>)))*<span class="number">12</span> +</div><div class="line">(<span class="keyword">extract</span>(<span class="keyword">month</span> <span class="keyword">from</span> <span class="keyword">to_date</span>(part_month,<span class="string">'yyyymm'</span>)) - <span class="keyword">extract</span>(<span class="keyword">month</span> <span class="keyword">from</span> <span class="keyword">to_date</span>(<span class="keyword">substr</span>(x.partition_name,<span class="number">2</span>,<span class="number">6</span>),<span class="string">'yyyymm'</span>)))</div><div class="line"><span class="keyword">INTO</span> vCount</div><div class="line"><span class="keyword">FROM</span> dual;</div><div class="line"></div><div class="line">For j in 1..vCount LOOP</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">--get history Partition name</span></div><div class="line">vhistPartitionName := 'p'||to_char(add_months(to_date(substr(x.partition_name,2,6),'yyyymm'),j),'yyyymm');</div><div class="line">vLessthan := to_char(add_months(to_date(substr(x.partition_name,2,6)||'01','yyyy-mm-dd hh24:mi:ss'),j+1),'yyyy-mm-dd hh24:mi:ss');</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"></div><div class="line">vDDLSql := '<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> M_REC_CONSUME <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> <span class="string">'||vhistPartitionName||'</span> <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span> (<span class="string">'''||vLessthan||'''</span> ) <span class="keyword">TABLESPACE</span> <span class="string">'||x.tablespace_name;</span></div><div class="line"></div><div class="line">DBMS_UTILITY.exec_ddl_statement(vDDLSql);</div><div class="line"></div><div class="line">i1:= i1 + 1;</div><div class="line"></div><div class="line">END LOOP;</div><div class="line"></div><div class="line">i1 := i1;</div><div class="line">i2 := i2 + 1;</div><div class="line"></div><div class="line">END LOOP;</div><div class="line"></div><div class="line">insert into m_rec_consume_log(updtime,prc_name,dscp)values(sysdate,'GENE_AUTO_ADD_PARTITION<span class="string">','</span>为M_REC_CONSUME创建三个月后子分区成功，共创建了<span class="string">'||i1||'</span>个分区<span class="string">');</span></div><div class="line">commit;</div><div class="line">EXCEPTION</div><div class="line">WHEN others THEN</div><div class="line">raise;</div><div class="line">rollback;</div><div class="line">insert into m_rec_consume_log(updtime,prc_name,dscp)values(sysdate,'GENE_AUTO_ADD_PARTITION<span class="string">','</span>更新分区失败！<span class="string">');</span></div><div class="line"></div><div class="line">END;</div></pre></td></tr></table></figure></p>
<p>还需创建一个日志表：
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">create table m_rec_consume_log</div><div class="line">(</div><div class="line"><span class="name">updtime</span> date,</div><div class="line">prc_name varchar2(<span class="number">1000</span>),</div><div class="line">dscp varchar2(<span class="number">1000</span>)</div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>设定job定时执行存储过程完成分区自动创建。</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[redhat配置网络及本地yum源]]></title>
      <url>/2015/04/24/redhat%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E5%8F%8A%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</url>
      <content type="html"><![CDATA[<p>由于 redhat的yum在线更新是收费的，如果没有注册的话不能使用，如果要使用，需将redhat的yum卸载后，重启安装，再配置其他源.</p>
<p>本文包括配置本地源及第三方源。第三方源包括：网易，epel,repoforge ,rpmfusion 以下为详细过程： </p>
<p>注：服务器可以访问外网的情况选择网络源，无法访问外网使用本地yum源，配置本地yum源需要服务器光驱上已挂载iso镜像文件</p>
<p>##【设置网络地址作为yum源】</p>
<h3 id="1-删除redhat原有的yum"><a href="#1-删除redhat原有的yum" class="headerlink" title="1.删除redhat原有的yum"></a>1.删除redhat原有的yum</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -a<span class="string">q|grep yum|</span>xargs rpm -e --nodeps</div></pre></td></tr></table></figure>
<h3 id="2-下载yum安装文件"><a href="#2-下载yum安装文件" class="headerlink" title="2.下载yum安装文件"></a>2.下载yum安装文件</h3><p>注意，如果下载时找不到文件，就登录到：<a href="http://mirrors.163.com/centos/6/os/x86_64/" target="_blank" rel="external">http://mirrors.163.com/centos/6/os/x86_64/</a> 上查找相应的文件。然后再下载。
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">wget http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/centos/</span><span class="number">6</span><span class="regexp">/os/</span>x86_64<span class="regexp">/Packages/yum</span>-<span class="number">3.2</span>.<span class="number">29</span>-<span class="number">73</span>.el6.centos.noarch.rpm</div><div class="line"></div><div class="line">wget http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/centos/</span><span class="number">6</span><span class="regexp">/os/</span>x86_64<span class="regexp">/Packages/yum</span>-metadata-parser-<span class="number">1.1</span>.<span class="number">2</span>-<span class="number">16</span>.el6.x86_64.rpm </div><div class="line"></div><div class="line">wget http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/centos/</span><span class="number">6</span><span class="regexp">/os/</span>x86_64<span class="regexp">/Packages/yum</span>-plugin-fastestmirror-<span class="number">1.1</span>.<span class="number">30</span>-<span class="number">37</span>.el6.noarch.rpm </div><div class="line"></div><div class="line">wget http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/centos/</span><span class="number">6</span><span class="regexp">/os/</span>x86_64<span class="regexp">/Packages/</span>python-iniparse-<span class="number">0.3</span>.<span class="number">1</span>-<span class="number">2.1</span>.el6.noarch.rpm </div><div class="line"></div><div class="line">wget http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/centos/</span><span class="number">6</span><span class="regexp">/os/</span>x86_64<span class="regexp">/Packages/</span>python-urlgrabber-<span class="number">3.9</span>.<span class="number">1</span>-<span class="number">11</span>.el6.noarch.rpm</div></pre></td></tr></table></figure></p>
<h3 id="3-进行安装yum"><a href="#3-进行安装yum" class="headerlink" title="3.进行安装yum"></a>3.进行安装yum</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">python-iniparse-0</span><span class="selector-class">.3</span><span class="selector-class">.1-2</span><span class="selector-class">.1</span><span class="selector-class">.el6</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span> </div><div class="line"></div><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">yum-metadata-parser-1</span><span class="selector-class">.1</span><span class="selector-class">.2-16</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span> </div><div class="line"></div><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">python-urlgrabber-3</span><span class="selector-class">.9</span><span class="selector-class">.1-11</span><span class="selector-class">.el6</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span> <span class="selector-tag">--replacefiles</span></div><div class="line"></div><div class="line"><span class="selector-tag">rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">yum-3</span><span class="selector-class">.2</span><span class="selector-class">.29-73</span><span class="selector-class">.el6</span><span class="selector-class">.centos</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span> <span class="selector-tag">yum-plugin-fastestmirror-1</span><span class="selector-class">.1</span><span class="selector-class">.30-37</span><span class="selector-class">.el6</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure>
<p>注意最后两个包必需同时安装，否则会相互依赖  </p>
<h3 id="4-更新repo文件-配置网易源"><a href="#4-更新repo文件-配置网易源" class="headerlink" title="4.更新repo文件(配置网易源)"></a>4.更新repo文件(配置网易源)</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mv /etc/yum<span class="selector-class">.repos</span><span class="selector-class">.d</span>/rhel-source<span class="selector-class">.repo</span> /etc/yum<span class="selector-class">.repos</span><span class="selector-class">.d</span>/rhel-source<span class="selector-class">.repo</span><span class="selector-class">.bak</span></div><div class="line"></div><div class="line">vi /etc/yum<span class="selector-class">.repos</span><span class="selector-class">.d</span>/rhel-source.repo</div></pre></td></tr></table></figure>
<p>内容为：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="section">[base]</span></div><div class="line"><span class="attr">name</span>=CentOS-<span class="variable">$releasever</span> - Base</div><div class="line"><span class="attr">baseurl</span>=http://mirrors.<span class="number">163</span>.com/centos/<span class="number">6</span>/os/<span class="variable">$basearch</span>/</div><div class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></div><div class="line"><span class="attr">gpgkey</span>=http://mirrors.<span class="number">163</span>.com/centos/RPM-GPG-KEY-CentOS-<span class="number">6</span></div></pre></td></tr></table></figure>
<h3 id="5、测试"><a href="#5、测试" class="headerlink" title="5、测试"></a>5、测试</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum clean <span class="keyword">all</span> </div><div class="line">yum install <span class="keyword">vim</span></div></pre></td></tr></table></figure>
<p>##【设置本地镜像作为yum源】</p>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>、<span class="keyword">mkdir</span> /mnt/cdrom</div><div class="line"></div><div class="line"><span class="symbol">2 </span> mount /dev/cdrom /mnt/cdrom  #挂着镜像，光盘</div><div class="line"></div><div class="line"><span class="symbol">3 </span> <span class="keyword">mkdir</span> /home/redhat-iso</div><div class="line"></div><div class="line"><span class="symbol">4 </span> cp -Rf /mnt/cdrom/* /home/redhat-iso   #将光盘内的内容copy到某个路径下</div><div class="line"></div><div class="line"><span class="symbol">5 </span> vi /etc/yum.repos.d/rhel-debuginfo.repo  #编辑repo文件</div></pre></td></tr></table></figure>
<p>添加一下内容：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="section">[rhel_6_iso]</span></div><div class="line"><span class="attr">name</span>=local iso </div><div class="line"><span class="attr">baseurl</span>=file:///home/redhat-iso/</div><div class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></div><div class="line"><span class="attr">gpgkey</span>=file:///home/redhat-iso/RPM-GPG-KEY-CentOS-<span class="number">6</span>  #该处的gpgkey文件应该改成iso镜像中的文件名</div></pre></td></tr></table></figure>
<h2 id="关于yum的一点资料"><a href="#关于yum的一点资料" class="headerlink" title="关于yum的一点资料"></a>关于yum的一点资料</h2><h3 id="一、YUM是什么"><a href="#一、YUM是什么" class="headerlink" title="一、YUM是什么"></a>一、YUM是什么</h3><p>YUM = Yellow dog Updater, Modified
主要功能是更方便的添加/删除/更新RPM包.
它能自动解决包的倚赖性问题.
它能便于管理大量系统的更新问题</p>
<h3 id="二、-YUM特点"><a href="#二、-YUM特点" class="headerlink" title="二、 YUM特点"></a>二、 YUM特点</h3><p>可以同时配置多个资源库(Repository)
简洁的配置文件(/etc/YUM.conf，/etc/YUM.repos.d 下的文件)
自动解决增加或删除rpm包时遇到的倚赖性问题
使用方便
保持与RPM数据库的一致性</p>
<h3 id="三、-YUM安装"><a href="#三、-YUM安装" class="headerlink" title="三、 YUM安装"></a>三、 YUM安装</h3><p>Centos/RHEL</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#rpm</span> <span class="selector-tag">-ivh</span> <span class="selector-tag">yum-2</span><span class="selector-class">.4</span><span class="selector-class">.3-4</span><span class="selector-class">.el4</span><span class="selector-class">.centos</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Redhat </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle分区修改的语句]]></title>
      <url>/2015/04/24/Oracle%E5%88%86%E5%8C%BA%E4%BF%AE%E6%94%B9%E7%9A%84%E8%AF%AD%E5%8F%A5/</url>
      <content type="html"><![CDATA[<h2 id="Oracle分区修改的语句"><a href="#Oracle分区修改的语句" class="headerlink" title="Oracle分区修改的语句"></a>Oracle分区修改的语句</h2><h3 id="1、增加一个分区"><a href="#1、增加一个分区" class="headerlink" title="1、增加一个分区"></a>1、增加一个分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sales</div><div class="line">      <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> jan96 <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span> ( <span class="string">'01-FEB-1999'</span> )</div><div class="line">      <span class="keyword">TABLESPACE</span> tsx;</div></pre></td></tr></table></figure>
<p>增加一个列表分区
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> q1_sales_by_region</div><div class="line">   <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> q1_nonmainland <span class="keyword">VALUES</span> (<span class="string">'HI'</span>, <span class="string">'PR'</span>)</div><div class="line">      <span class="keyword">STORAGE</span> (<span class="keyword">INITIAL</span> <span class="number">20</span>K <span class="keyword">NEXT</span> <span class="number">20</span>K) <span class="keyword">TABLESPACE</span> tbs_3</div><div class="line">      NOLOGGING;</div></pre></td></tr></table></figure></p>
<h3 id="2、合并分区"><a href="#2、合并分区" class="headerlink" title="2、合并分区"></a>2、合并分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> dept <span class="keyword">coalesce</span> <span class="keyword">partition</span></div></pre></td></tr></table></figure>
<h3 id="3、删除分区"><a href="#3、删除分区" class="headerlink" title="3、删除分区"></a>3、删除分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sales <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> dec98;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">INDEX</span> sales_area_ix <span class="keyword">REBUILD</span>（如果含有全局索引）;</div></pre></td></tr></table></figure>
<h3 id="4、合并分区"><a href="#4、合并分区" class="headerlink" title="4、合并分区"></a>4、合并分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> four_seasons</div><div class="line"><span class="keyword">MERGE</span> <span class="keyword">PARTITIONS</span> quarter_one, quarter_two <span class="keyword">INTO</span> <span class="keyword">PARTITION</span> quarter_two;</div><div class="line"></div><div class="line">Then, rebuild the local index for the affected partition.</div><div class="line"></div><div class="line"><span class="comment">-- Rebuild index for quarter_two, which has been marked unusable</span></div><div class="line"><span class="comment">-- because it has not had all of the data from Q1 added to it.</span></div><div class="line"><span class="comment">-- Rebuilding the index will correct this.</span></div><div class="line"><span class="comment">--</span></div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> four_seasons <span class="keyword">MODIFY</span> <span class="keyword">PARTITION</span></div><div class="line">quarter_two <span class="keyword">REBUILD</span> <span class="keyword">UNUSABLE</span> <span class="keyword">LOCAL</span> <span class="keyword">INDEXES</span>;</div></pre></td></tr></table></figure>
<h3 id="5、移动一个分区"><a href="#5、移动一个分区" class="headerlink" title="5、移动一个分区"></a>5、移动一个分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> parts <span class="keyword">MOVE</span> <span class="keyword">PARTITION</span> depot2</div><div class="line">     <span class="keyword">TABLESPACE</span> ts094 NOLOGGING;</div></pre></td></tr></table></figure>
<h3 id="6、重建一个local索引"><a href="#6、重建一个local索引" class="headerlink" title="6、重建一个local索引"></a>6、重建一个local索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">INDEX</span> I_FOUR_SEASONS_L  <span class="keyword">REBUILD</span> <span class="keyword">PARTITION</span> I_QUARTER_FOUR</div></pre></td></tr></table></figure>
<h3 id="7、重命名一个分区"><a href="#7、重命名一个分区" class="headerlink" title="7、重命名一个分区"></a>7、重命名一个分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> scubagear <span class="keyword">RENAME</span> <span class="keyword">PARTITION</span> sys_p636 <span class="keyword">TO</span> tanks</div></pre></td></tr></table></figure>
<h3 id="8、一个分区拆分为两个分区"><a href="#8、一个分区拆分为两个分区" class="headerlink" title="8、一个分区拆分为两个分区"></a>8、一个分区拆分为两个分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> RANGE_EXAMPLE <span class="keyword">SPLIT</span> <span class="keyword">PARTITION</span></div><div class="line">      PART_1 <span class="keyword">at</span></div><div class="line">      (<span class="keyword">TO_DATE</span>(<span class="string">' 1994-05-01 00:00:00'</span>, <span class="string">'SYYYY-MM-DD HH24:MI:SS'</span>))</div><div class="line">       <span class="keyword">INTO</span> ( <span class="keyword">PARTITION</span>  PART_1 <span class="keyword">tablespace</span> st1,</div><div class="line">        <span class="keyword">PARTITION</span>  PART_3 <span class="keyword">tablespace</span> <span class="keyword">users</span>)</div></pre></td></tr></table></figure>
<h3 id="9、truncate一个分区"><a href="#9、truncate一个分区" class="headerlink" title="9、truncate一个分区"></a>9、truncate一个分区</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sales <span class="keyword">TRUNCATE</span> <span class="keyword">PARTITION</span> dec98;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">INDEX</span> sales_area_ix <span class="keyword">REBUILD</span>;</div></pre></td></tr></table></figure>
<h3 id="10、如果存在约束的情况，先disable约束"><a href="#10、如果存在约束的情况，先disable约束" class="headerlink" title="10、如果存在约束的情况，先disable约束"></a>10、如果存在约束的情况，先disable约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sales</div><div class="line">    <span class="keyword">DISABLE</span> <span class="keyword">CONSTRAINT</span> dname_sales1;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sales <span class="keyword">TRUNCATE</span> PARTITTION dec94;</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sales</div><div class="line">    <span class="keyword">ENABLE</span> <span class="keyword">CONSTRAINT</span> dname_sales1;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 查看表空间的大小及使用情况sql语句]]></title>
      <url>/2015/03/24/Oracle-%E6%9F%A5%E7%9C%8B%E8%A1%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E5%A4%A7%E5%B0%8F%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5sql%E8%AF%AD%E5%8F%A5/</url>
      <content type="html"><![CDATA[<p><strong>1、查看表空间的名称及大小</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> t.tablespace_name, <span class="keyword">round</span>(<span class="keyword">SUM</span>(<span class="keyword">bytes</span> / (<span class="number">1024</span> * <span class="number">1024</span>)), <span class="number">0</span>) ts_size </div><div class="line"><span class="keyword">FROM</span> dba_tablespaces t, dba_data_files d </div><div class="line"><span class="keyword">WHERE</span> t.tablespace_name = d.tablespace_name </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> t.tablespace_name;</div></pre></td></tr></table></figure>
<p><strong>查看临时表空间</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> tablespace_name,file_name,<span class="keyword">bytes</span>/<span class="number">1024</span>/<span class="number">1024</span> file_size,autoextensible <span class="keyword">from</span> dba_temp_files;</div></pre></td></tr></table></figure>
<p><strong>2、查看表空间物理文件的名称及大小</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> tablespace_name, </div><div class="line">file_id, </div><div class="line">file_name, </div><div class="line"><span class="keyword">round</span>(<span class="keyword">bytes</span> / (<span class="number">1024</span> * <span class="number">1024</span>), <span class="number">0</span>) total_space </div><div class="line"><span class="keyword">FROM</span> dba_data_files </div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> tablespace_name;</div></pre></td></tr></table></figure>
<p><strong>3、查看回滚段名称及大小</strong></p>
<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> segment_name, </div><div class="line">tablespace_name, </div><div class="line">r.status, </div><div class="line">(initial_extent / <span class="number">1024</span>) initialextent, </div><div class="line">(next_extent / <span class="number">1024</span>) nextextent, </div><div class="line">max_extents, </div><div class="line">v.curext curextent </div><div class="line"><span class="keyword">FROM</span> dba_rollback_segs r, v$rollstat v </div><div class="line"><span class="keyword">WHERE</span> r.segment_id = v.usn(+) </div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> segment_name;</div></pre></td></tr></table></figure>
<p><strong>4、查看控制文件</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span> <span class="keyword">FROM</span> v$<span class="keyword">controlfile</span>;</div></pre></td></tr></table></figure>
<p><strong>5、查看日志文件</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">MEMBER</span> <span class="keyword">FROM</span> v$<span class="keyword">logfile</span>;</div></pre></td></tr></table></figure>
<p><strong>6、查看表空间的使用情况</strong></p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(<span class="built_in">bytes</span>) / (<span class="number">1024</span> * <span class="number">1024</span>) AS free_space, tablespace_name </div><div class="line">FROM dba_free_space </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> tablespace_name; </div><div class="line"><span class="keyword">SELECT</span> a.tablespace_name, </div><div class="line">a.<span class="built_in">bytes</span> total, </div><div class="line">b.<span class="built_in">bytes</span> used, </div><div class="line">c.<span class="built_in">bytes</span> free, </div><div class="line">(b.<span class="built_in">bytes</span> * <span class="number">100</span>) / a.<span class="built_in">bytes</span> <span class="string">"% USED "</span>, </div><div class="line">(c.<span class="built_in">bytes</span> * <span class="number">100</span>) / a.<span class="built_in">bytes</span> <span class="string">"% FREE "</span> </div><div class="line">FROM sys.sm$ts_avail a, sys.sm$ts_used b, sys.sm$ts_free c </div><div class="line"><span class="keyword">WHERE</span> a.tablespace_name = b.tablespace_name </div><div class="line"><span class="literal">AND</span> a.tablespace_name = c.tablespace_name;</div></pre></td></tr></table></figure>
<p><strong>7、查看数据库库对象</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> owner, object_type, <span class="keyword">status</span>, <span class="keyword">COUNT</span>(*) <span class="keyword">count</span># </div><div class="line"><span class="keyword">FROM</span> all_objects </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> owner, object_type, <span class="keyword">status</span>;</div></pre></td></tr></table></figure>
<p><strong>8、查看数据库的版本</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">version</span> </div><div class="line"><span class="keyword">FROM</span> product_component_version </div><div class="line"><span class="keyword">WHERE</span> <span class="keyword">substr</span>(product, <span class="number">1</span>, <span class="number">6</span>) = <span class="string">'Oracle'</span>;</div></pre></td></tr></table></figure>
<p><strong>9、查看数据库的创建日期和归档方式</strong></p>
<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> created, log_mode, log_mode <span class="keyword">FROM</span> v$<span class="keyword">database</span>;</div></pre></td></tr></table></figure>
<p>–1G=1024MB 
–1M=1024KB 
–1K=1024Bytes 
–1M=11048576Bytes 
–1G=1024*11048576Bytes=11313741824Bytes </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> a.tablespace_name <span class="string">"表空间名"</span>, </div><div class="line">total <span class="string">"表空间大小"</span>, </div><div class="line">free <span class="string">"表空间剩余大小"</span>, </div><div class="line">(total - free) <span class="string">"表空间使用大小"</span>, </div><div class="line">total / (<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>) <span class="string">"表空间大小(G)"</span>, </div><div class="line">free / (<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>) <span class="string">"表空间剩余大小(G)"</span>, </div><div class="line">(total - free) / (<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>) <span class="string">"表空间使用大小(G)"</span>, </div><div class="line"><span class="keyword">round</span>((total - free) / total, <span class="number">4</span>) * <span class="number">100</span> <span class="string">"使用率 %"</span> </div><div class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span> tablespace_name, <span class="keyword">SUM</span>(<span class="keyword">bytes</span>) free </div><div class="line"><span class="keyword">FROM</span> dba_free_space </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> tablespace_name) a, </div><div class="line">(<span class="keyword">SELECT</span> tablespace_name, <span class="keyword">SUM</span>(<span class="keyword">bytes</span>) total </div><div class="line"><span class="keyword">FROM</span> dba_data_files </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> tablespace_name) b </div><div class="line"><span class="keyword">WHERE</span> a.tablespace_name = b.tablespace_name;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
