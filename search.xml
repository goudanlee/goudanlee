<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[DAND“整理 OpenStreetMap 数据”学习总结]]></title>
      <url>/2017/05/20/dand-osm/</url>
      <content type="html"><![CDATA[<p>讲真，一开始让我写一篇这样的文章我是拒绝的，因为我以前总是觉得，学习是自己的事情，学到多少，学了什么，自己清楚就好。不过，在优达学城近两个月的学习之后，我逐步改变了观点，正如优达优等生互助班所倡导的“探索、自律、分享”的学习理念，实际上学习过程中的积累和分享的过程，也是提升学习兴趣的一个非常重要的点。所以，今天也想在这里汇总一下关于DAND课程里P3项目“整理 OpenStreetMap 数据”这阶段的学习总结，同时也记录一下自己的学习心路历程，这里特别感谢一下优等生互助班导师——鱼头同学的各种鼓励和支持@Clark Yu，非常负责任的一位导师，为了我们的学习进度也是操碎了心 /捂脸<br>应该说整个P3过程涉及的知识点还是比较多的，P3项目的要求是探索整理OpenStreetMap上的数据，并完成清洗、探索、分析的过程，这部分内容，应该是数据分析过程中一个相当耗时的部分，所以整个P3项目的预计完成时间还是比较长的。P3课程主要核心内容为：</p>
<h4 id="数据分析提取"><a href="#数据分析提取" class="headerlink" title="数据分析提取"></a>数据分析提取</h4><h4 id="数据质量审查"><a href="#数据质量审查" class="headerlink" title="数据质量审查"></a>数据质量审查</h4><h4 id="清洗整理osm数据并使用SQL-MongoDB存储数据进行数据探索"><a href="#清洗整理osm数据并使用SQL-MongoDB存储数据进行数据探索" class="headerlink" title="清洗整理osm数据并使用SQL/MongoDB存储数据进行数据探索"></a>清洗整理osm数据并使用SQL/MongoDB存储数据进行数据探索</h4><h5 id="数据分析提取-1"><a href="#数据分析提取-1" class="headerlink" title="数据分析提取"></a>数据分析提取</h5><p>课程主要包含了使用Python从各个数据源分析提取数据的过程，处理的数据来源有CSV、Excel、JSON、XML以及HTML，这几类数据源都是比较常见的数据源，基本覆盖了我们常见的获取数据的途径，其中CSV、XML是格式比较标准且出现度非常高的两种文件格式，而JSON简洁和清晰的层次结构使得 JSON 成为一种理想的数据交换格式，它的键值对模式，非常类似Python中的字典，使用Python处理起来非常方便。</p>
<p>而对于HTML的数据提取，其实就是对网页上的内容进行的爬取和格式处理，课程里使用了Python中非常友好的BeatifulSoup库进行爬虫开发，非常容易的实现了对于网页内容的爬取。不过，鉴于课程的设计，关于爬虫的教学实际上并不是很深入，只是比较浅显的介绍了对于静态网页内容的爬取，在现在动态加载页面大行其道的今天，还是显得有点力不从心了，后续的实际过程中若数据来源比较多来自于HTML，那还是得深入对爬虫做一番了解。</p>
<p>Python读取各数据格式的API文档地址汇总：</p>
<h5 id="CSV"><a href="#CSV" class="headerlink" title="CSV:"></a>CSV:</h5><p>所用Python库：import csv</p>
<p>API文档： <a href="https://docs.python.org/2/library/csv.html?highlight=csv" target="_blank" rel="external">CSV File Reading and Writing - Python 2.7.13 documentation</a></p>
<h5 id="Excel"><a href="#Excel" class="headerlink" title="Excel:"></a>Excel:</h5><p>所用Python库：import xlrd</p>
<p>API文档： <a href="http://xlrd.readthedocs.io/en/latest/api.html" target="_blank" rel="external">API Reference - xlrd 1.0.0 documentation</a></p>
<h5 id="JSON"><a href="#JSON" class="headerlink" title="JSON:"></a>JSON:</h5><p>所用Python库：import json</p>
<p>API文档： <a href="https://docs.python.org/2/library/json.html#module-json" target="_blank" rel="external">18.2. json — JSON encoder and decoder</a></p>
<h5 id="XML"><a href="#XML" class="headerlink" title="XML:"></a>XML:</h5><p>所用Python库：import xml</p>
<p>API文档： <a href="https://docs.python.org/2/library/xml.dom.html" target="_blank" rel="external">19.8. xml.dom — The Document Object Model API</a></p>
<h4 id="数据质量审查："><a href="#数据质量审查：" class="headerlink" title="数据质量审查："></a>数据质量审查：</h4><p>作为一个合格的DataAnalyst，自然要对所需进行探索分析的数据的质量有清晰的认识。对于数据质量的审查与清理是一个不断迭代的过程，数据质量在数据分析中的重要性毋庸置疑，数据的质量直接影响数据的产出和数据价值高低，而数据质量的基本要素则包含以下3个要素：</p>
<h5 id="1、准确性"><a href="#1、准确性" class="headerlink" title="1、准确性"></a>1、准确性</h5><p>数据中记录的信息和数据是否准确，是否存在异常或者错误的信息。</p>
<p>导致一致性问题的原因可能是数据记录的规则不一，但不一定存在错误；而准确性关注的是数据记录中存在的错误，比如字符型数据的乱码现象也应该归到准确性的考核范畴，另外就是异常的数值，异常大或者异常小的数值，不符合有效性要求的数值，如访问量Visits一定是整数、年龄一般在1-100之间、转化率一定是介于0到1的值等。对数据准确性的审核有时会遇到困难，因为对于没有明显异常的错误值我们很难发现。</p>
<h5 id="2、完整性"><a href="#2、完整性" class="headerlink" title="2、完整性"></a>2、完整性</h5><p>数据的记录和信息是否完整，是否存在缺失的情况。</p>
<p>数据的缺失主要有记录的缺失和记录中某个字段信息的缺失，两者都会造成统计结果的不准确，所以完整性是数据质量最基础的保障，而对完整性的评估相对比较容易。</p>
<h5 id="3、一致性"><a href="#3、一致性" class="headerlink" title="3、一致性"></a>3、一致性</h5><p>数据的记录是否符合规范，是否与前后及其他数据集合保持统一。</p>
<p>数据的一致性主要包括数据记录的规范和数据逻辑的一致性。数据记录的规范主要是数据编码和格式的问题，比如网站的用户ID是15位的数字、商品ID是10位数字，商品包括20个类目、IP地址一定是用”.”分隔的4个0-255的数字组成，及一些定义的数据约束，比如完整性的非空约束、唯一值约束等；数据逻辑性主要是指标统计和计算的一致性，比如PV&gt;=UV，新用户比例在0-1之间等。数据的一致性审核是数据质量审核中比较重要也是比较复杂的一块。</p>
<h4 id="使用SQL-MongoDB存储数据并分析"><a href="#使用SQL-MongoDB存储数据并分析" class="headerlink" title="使用SQL/MongoDB存储数据并分析"></a>使用SQL/MongoDB存储数据并分析</h4><p>课程里关于使用SQL还是MongoDB是需要学员根据自己的情况自行选择的，由于我工作中接触SQL比较多，所以这里我选择了MongoDB。</p>
<p>MongoDB 是一个基于分布式文件存储的数据库，他是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p>
<p>MongoDB 3.4 中文文档<br>MongoDB - MongoDB Manual 3.4</p>
<h5 id="MongoDB常用的操作："><a href="#MongoDB常用的操作：" class="headerlink" title="MongoDB常用的操作："></a>MongoDB常用的操作：</h5><h5 id="MongoDB导入语句"><a href="#MongoDB导入语句" class="headerlink" title="MongoDB导入语句"></a>MongoDB导入语句</h5><p>使用Mongoimport命令，适用于已有文件导入<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongoimport -<span class="keyword">d</span> dbname -c collectionname --<span class="keyword">file</span> <span class="keyword">input</span>-<span class="keyword">file</span>.json</div></pre></td></tr></table></figure></p>
<p>语句导入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.insert</span>(&#123;<span class="string">"name"</span> : <span class="string">"Chicago"</span>&#125;)</div></pre></td></tr></table></figure></p>
<h6 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h6><h6 id="1-1-条件查询"><a href="#1-1-条件查询" class="headerlink" title="1.1 条件查询"></a>1.1 条件查询</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.find</span>(“name”: <span class="string">"Guangzhou"</span>, <span class="string">"class"</span>: <span class="string">"mid-size car"</span>)</div></pre></td></tr></table></figure>
<h6 id="1-2-投影查询"><a href="#1-2-投影查询" class="headerlink" title="1.2 投影查询"></a>1.2 投影查询</h6><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">query = &#123;“name”: <span class="string">"Guangzhou"</span>, <span class="string">"class"</span>: <span class="string">"mid-size car"</span>&#125;</div><div class="line">projection = &#123;<span class="string">"_id"</span> : 0,<span class="string">"name"</span> : 1&#125;</div><div class="line">db.cities.find(query, projection)</div></pre></td></tr></table></figure>
<h6 id="1-3-范围查询"><a href="#1-3-范围查询" class="headerlink" title="1.3 范围查询"></a>1.3 范围查询</h6><p>运算符：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(&gt;) 大于 - $gt</div><div class="line">(&lt;) 小于 - $lt</div><div class="line">(&gt;=) 大于等于 - $gte</div><div class="line">(&lt;= ) 小于等于 - $lte</div><div class="line">$gt -------- greater than $gte --------- <span class="keyword">gt</span> equal $lt -------- less than $lte --------- <span class="keyword">lt</span> equal $ne ----------- <span class="keyword">not</span> equalquery = &#123;<span class="string">"foundingDate"</span>: &#123;<span class="string">"$gte"</span> : datetime(<span class="number">2000</span>,<span class="number">1</span>,<span class="number">1</span>)&#125;&#125;</div><div class="line">db.cities.find(query)</div></pre></td></tr></table></figure></p>
<h6 id="1-4-Exists查询"><a href="#1-4-Exists查询" class="headerlink" title="1.4 Exists查询"></a>1.4 Exists查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"name"</span>: &#123;<span class="string">"$exists"</span> : <span class="number">1</span>&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-5-正则表达式查询"><a href="#1-5-正则表达式查询" class="headerlink" title="1.5 正则表达式查询"></a>1.5 正则表达式查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"name"</span>: &#123;<span class="string">"$regex"</span> : <span class="string">"[Ff]riendship|[Pp]ride"</span>&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-6-in查询"><a href="#1-6-in查询" class="headerlink" title="1.6 in查询"></a>1.6 in查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"manufacturer"</span>:<span class="string">"Ford Motor Company"</span>,<span class="string">"assembly"</span>:&#123;<span class="string">"$in"</span>:[<span class="string">"Germany"</span>,<span class="string">"United Kingdom"</span>,<span class="string">"Japan"</span>]&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-7-all查询"><a href="#1-7-all查询" class="headerlink" title="1.7 all查询"></a>1.7 all查询</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"manufacturer"</span>:<span class="string">"Ford Motor Company"</span>,<span class="string">"assembly"</span>:&#123;<span class="string">"$all"</span>:[<span class="string">"Germany"</span>,<span class="string">"United Kingdom"</span>,<span class="string">"Japan"</span>]&#125;&#125;</div></pre></td></tr></table></figure>
<h6 id="1-8点表示法"><a href="#1-8点表示法" class="headerlink" title="1.8点表示法"></a>1.8点表示法</h6><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">query</span> = &#123;<span class="string">"dimensions.width"</span>:&#123;<span class="string">"$gt"</span>:<span class="number">2.5</span>&#125;&#125;</div></pre></td></tr></table></figure>
<h5 id="2-更新"><a href="#2-更新" class="headerlink" title="2.更新"></a>2.更新</h5><h6 id="2-1-save-方法"><a href="#2-1-save-方法" class="headerlink" title="2.1 save()方法"></a>2.1 save()方法</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city = db<span class="selector-class">.cities</span><span class="selector-class">.find_one</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>)</div><div class="line">city[<span class="string">"isoCountryCode"</span>] = <span class="string">"DEU"</span></div><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.save</span>(city)</div></pre></td></tr></table></figure>
<h6 id="2-2-update-方法-set-amp-unset"><a href="#2-2-update-方法-set-amp-unset" class="headerlink" title="2.2 update()方法 set &amp; unset"></a>2.2 update()方法 set &amp; unset</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">set:</div><div class="line">city = db.cities.<span class="keyword">update</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>,</div><div class="line">&#123;<span class="string">"$set"</span> : &#123;<span class="string">"isoCountryCode"</span> : <span class="string">"DEU"</span>&#125;&#125;</div><div class="line">)</div><div class="line"></div><div class="line">unset:</div><div class="line">city = db.cities.<span class="keyword">update</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>,</div><div class="line">&#123;<span class="string">"$set"</span> : &#123;<span class="string">"isoCountryCode"</span> : <span class="string">""</span>&#125;&#125;</div><div class="line">)</div></pre></td></tr></table></figure>
<h6 id="2-3-update-多项更新"><a href="#2-3-update-多项更新" class="headerlink" title="2.3 update()多项更新"></a>2.3 update()多项更新</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">city = db.cities.<span class="keyword">update</span>(&#123;<span class="string">"name"</span> : <span class="string">"Munchen"</span>&#125;,</div><div class="line"><span class="string">"country"</span> : <span class="string">"Germany"</span>,</div><div class="line">&#123;<span class="string">"$set"</span> : &#123;<span class="string">"isoCountryCode"</span> : <span class="string">""</span>&#125;&#125;</div><div class="line">，multi = True)</div></pre></td></tr></table></figure>
<h5 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h5><p>类似find语法<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.remove</span>(“name”: <span class="string">"Guangzhou"</span>, <span class="string">"class"</span>: <span class="string">"mid-size car"</span>)</div><div class="line">db<span class="selector-class">.cities</span><span class="selector-class">.drop</span>()删除collection所有内容</div></pre></td></tr></table></figure></p>
<h5 id="4-聚合框架"><a href="#4-聚合框架" class="headerlink" title="4.聚合框架"></a>4.聚合框架</h5><h6 id="4-1聚合框架使用："><a href="#4-1聚合框架使用：" class="headerlink" title="4.1聚合框架使用："></a>4.1聚合框架使用：</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$user.screen_name"</span>,</div><div class="line"><span class="string">"count"</span> : &#123;<span class="string">"$sum"</span> : <span class="number">1</span>&#125;&#125;&#125;,</div><div class="line">&#123;<span class="string">"$sort"</span> : &#123;<span class="string">"count"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>
<h6 id="4-2-match-amp-project运算符："><a href="#4-2-match-amp-project运算符：" class="headerlink" title="4.2 match&amp;project运算符："></a>4.2 match&amp;project运算符：</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line">&#123;“$match” : &#123;<span class="string">"user.friends_count"</span> : &#123;<span class="string">"$gt"</span> : <span class="number">0</span>&#125;,</div><div class="line"><span class="string">"user.followers_count"</span>: &#123;<span class="string">"$gt"</span> : <span class="number">0</span>&#125;&#125;&#125;,</div><div class="line">&#123;<span class="string">"$project"</span>: &#123;<span class="string">"ratio"</span> : &#123;<span class="string">"$divide"</span> : [<span class="string">"$user.followers_count"</span>,</div><div class="line"><span class="string">"$user.friends_count"</span>]&#125;,</div><div class="line"><span class="string">"screen_name"</span> : <span class="string">"$user.screen_name"</span>&#125;&#125;,</div><div class="line">&#123;<span class="string">"$sort"</span> : &#123;<span class="string">"ratio"</span> : -<span class="number">1</span>&#125;&#125;,</div><div class="line">&#123;<span class="string">"$limit"</span> : <span class="number">1</span>&#125;])</div></pre></td></tr></table></figure>
<h6 id="4-3-unwind运算符："><a href="#4-3-unwind运算符：" class="headerlink" title="4.3 unwind运算符："></a>4.3 unwind运算符：</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line">&#123;<span class="string">"$unwind"</span> : <span class="string">"$entities.user_mentions"</span>&#125;,</div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$user.screen_name"</span>,</div><div class="line"><span class="string">"count"</span> : &#123;<span class="string">"$sum"</span> : <span class="number">1</span>&#125;&#125;&#125;,</div><div class="line">&#123;<span class="string">"sort"</span> : &#123;<span class="string">"count"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>
<h6 id="分组累加运算符："><a href="#分组累加运算符：" class="headerlink" title="分组累加运算符："></a>分组累加运算符：</h6><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$sum</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$first</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$last</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$max</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$min</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$avg</span></span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$push</span> (Arrays)</span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">$addToSet</span> (Arrays)</span></div></pre></td></tr></table></figure>
<h6 id="avg"><a href="#avg" class="headerlink" title="avg:"></a>avg:</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line"></div><div class="line">&#123;<span class="string">"$unwind"</span> : <span class="string">"$entities.hashtags"</span>&#125;,</div><div class="line"></div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$entities.hashtags.text"</span>,</div><div class="line"></div><div class="line"><span class="string">"retweet_avg"</span> : &#123;<span class="string">"$avg"</span> : <span class="string">"$retweet_count"</span>&#125;&#125;&#125;,</div><div class="line"></div><div class="line">&#123;<span class="string">"sort"</span> : &#123;<span class="string">"retweet_avg"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>
<h6 id="addToSet"><a href="#addToSet" class="headerlink" title="addToSet:"></a>addToSet:</h6><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">db.tweets.aggregate([</div><div class="line"></div><div class="line">&#123;<span class="string">"$unwind"</span> : <span class="string">"$entities.hashtags"</span>&#125;,</div><div class="line"></div><div class="line">&#123;“$group” : &#123;<span class="string">"_id"</span> : <span class="string">"$entities.hashtags.text"</span>,</div><div class="line"></div><div class="line"><span class="string">"unique_hashtags"</span> : &#123;<span class="string">"$addToSet"</span> : </div><div class="line"></div><div class="line"><span class="string">"$entities.hashtags.text"</span>&#125;&#125;&#125;,</div><div class="line"></div><div class="line">&#123;<span class="string">"sort"</span> : &#123;<span class="string">"retweet_avg"</span> : -<span class="number">1</span>&#125;&#125;])</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> DAND </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> DAND </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello HEXO]]></title>
      <url>/2017/05/19/HelloHEXO/</url>
      <content type="html"><![CDATA[<p>本着不折腾不死的精神，费了6个小时，终于把HEXO + github pages的博客搭建起来了，虽然搭建教程一大堆，不过，有些问题还是得自己摸索去解决。不过其实最费时间的其实是注册域名的过程，这里吐槽一下西部数码域名商，域名管理功能实在是差劲，本来早就屯了4个域名，心想这次能用上了，结果各种域名过户失败，导致无法修改DNS解析，提交工单也只是说让重试。一气之下，直接重新在阿里云注册了.com域名，并顺利做好DNS解析（真的不是广告~逃）</p>
<p>别说，HEXO还是用着很爽，可以愉快的使用markdown了，这下可以把之前数据分析的相关.md直接发布过来了，哈哈哈！最关键的是没有那么多限制了，自己的后台，自己的域名，爱怎么折腾怎么折腾。github pages简直是解放VPS管理的神器，不用关心服务器，web服务了，安心写内容即可，赞赞赞！新博客第一篇，Mark一下，改天陆续把以前的文章迁移过来。</p>
<p><a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">HEXO’s document</a></p>
]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python回调函数的理解(转)]]></title>
      <url>/2017/02/24/Python%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>作者：桥头堡<br>链接：<a href="https://www.zhihu.com/question/19801131/answer/27459821" target="_blank" rel="external">https://www.zhihu.com/question/19801131/answer/27459821</a><br>来源：知乎</p>
<p><strong>什么是回调函数？</strong></p>
<p>我们绕点远路来回答这个问题。</p>
<p>编程分为两类：<strong>系统编程（system programming）</strong>和<strong>应用编程（application programming）</strong>。所谓系统编程，简单来说，就是编写库；而应用编程就是利用写好的各种库来编写具某种功用的程序，也就是应用。系统程序员会给自己写的库留下一些接口，即API（application programming interface，应用编程接口），以供应用程序员使用。所以在抽象层的图示里，库位于应用的底下。</p>
<p>当程序跑起来时，一般情况下，应用程序（application program）会时常通过API调用库里所预先备好的函数。但是有些库函数（library function）却要求应用先传给它一个函数，好在合适的时候调用，以完成目标任务。这个被传入的、后又被调用的函数就称为回调函数（callback function）。</p>
<p>打个比方，有一家旅馆提供叫醒服务，但是要求旅客自己决定叫醒的方法。可以是打客房电话，也可以是派服务员去敲门，睡得死怕耽误事的，还可以要求往自己头上浇盆水。这里，“叫醒”这个行为是旅馆提供的，相当于库函数，但是叫醒的方式是由旅客决定并告诉旅馆的，也就是回调函数。而旅客告诉旅馆怎么叫醒自己的动作，也就是把回调函数传入库函数的动作，称为登记回调函数（to register a callback function）。如下图所示：<br><img src="/2017/02/24/Python回调函数的理解/1.jpg" alt="图 1" title="图 1"></p>
<p>可以看到，回调函数通常和应用处于同一抽象层（因为传入什么样的回调函数是在应用级别决定的）。而回调就成了一个高层调用底层，底层再回过头来调用高层的过程。（我认为）这应该是回调最早的应用之处，也是其得名如此的原因。</p>
<p>回调机制的优势</p>
<p>从上面的例子可以看出，回调机制提供了非常大的灵活性。请注意，从现在开始，我们把图中的库函数改称为中间函数了，这是因为回调并不仅仅用在应用和库之间。任何时候，只要想获得类似于上面情况的灵活性，都可以利用回调。</p>
<p>这种灵活性是怎么实现的呢？乍看起来，回调似乎只是函数间的调用，但仔细一琢磨，可以发现两者之间的一个关键的不同：在回调中，我们利用某种方式，把回调函数像参数一样传入中间函数。可以这么理解，在传入一个回调函数之前，中间函数是不完整的。换句话说，程序可以在运行时，通过登记不同的回调函数，来决定、改变中间函数的行为。这就比简单的函数调用要灵活太多了。请看下面这段Python写成的回调的简单示例：</p>
<p><code>even.py</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#回调函数1</span></div><div class="line"><span class="comment">#生成一个2k形式的偶数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span><span class="params">(x)</span></span>:</div><div class="line">    <span class="keyword">return</span> x * <span class="number">2</span></div><div class="line">  </div><div class="line"><span class="comment">#回调函数2</span></div><div class="line"><span class="comment">#生成一个4k形式的偶数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">quadruple</span><span class="params">(x)</span></span>:</div><div class="line">    <span class="keyword">return</span> x * <span class="number">4</span></div></pre></td></tr></table></figure></p>
<p><code>callback_demo.py</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> even <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="comment">#中间函数</span></div><div class="line"><span class="comment">#接受一个生成偶数的函数作为参数</span></div><div class="line"><span class="comment">#返回一个奇数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOddNumber</span><span class="params">(k, getEvenNumber)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> + getEvenNumber(k)</div><div class="line">    </div><div class="line"><span class="comment">#起始函数，这里是程序的主函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span>    </div><div class="line">    k = <span class="number">1</span></div><div class="line">    <span class="comment">#当需要生成一个2k+1形式的奇数时</span></div><div class="line">    i = getOddNumber(k, double)</div><div class="line">    print(i)</div><div class="line">    <span class="comment">#当需要一个4k+1形式的奇数时</span></div><div class="line">    i = getOddNumber(k, quadruple)</div><div class="line">    print(i)</div><div class="line">    <span class="comment">#当需要一个8k+1形式的奇数时</span></div><div class="line">    i = getOddNumber(k, <span class="keyword">lambda</span> x: x * <span class="number">8</span>)</div><div class="line">    print(i)</div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure></p>
<p>运行<code>callback_demp.py</code>，输出如下：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">3</span></div><div class="line"><span class="number">5</span></div><div class="line"><span class="number">9</span></div></pre></td></tr></table></figure></p>
<p>上面的代码里，给<code>getOddNumber</code>传入不同的回调函数，它的表现也不同，这就是回调机制的优势所在。值得一提的是，上面的第三个回调函数是一个匿名函数。</p>
<p><strong>易被忽略的第三方</strong></p>
<p>通过上面的论述可知，中间函数和回调函数是回调的两个必要部分，不过人们往往忽略了回调里的第三位要角，就是中间函数的调用者。绝大多数情况下，这个调用者可以和程序的主函数等同起来，但为了表示区别，我这里把它称为起始函数（如上面的代码中注释所示）。</p>
<p>之所以特意强调这个第三方，是因为我在网上读相关文章时得到一种印象，很多人把它简单地理解为两个个体之间的来回调用。譬如，很多中文网页在解释“回调”（callback）时，都会提到这么一句话：“If you call me, I will call you back.”我没有查到这句英文的出处。我个人揣测，很多人把起始函数和回调函数看作为一体，大概有两个原因：第一，可能是“回调”这一名字的误导；第二，给中间函数传入什么样的回调函数，是在起始函数里决定的。实际上，回调并不是“你我”两方的互动，而是ABC的三方联动。有了这个清楚的概念，在自己的代码里实现回调时才不容易混淆出错。</p>
<p>另外，回调实际上有两种：<strong>阻塞式回调</strong>和<strong>延迟式回调</strong>。两者的区别在于：阻塞式回调里，回调函数的调用一定发生在起始函数返回之前；而延迟式回调里，回调函数的调用有可能是在起始函数返回之后。这里不打算对这两个概率做更深入的讨论，之所以把它们提出来，也是为了说明强调起始函数的重要性。网上的很多文章，提到这两个概念时，只是笼统地说阻塞式回调发生在主调函数返回之前，却没有明确这个主调函数到底是起始函数还是中间函数，不免让人糊涂，所以这里特意说明一下。另外还请注意，本文中所举的示例均为阻塞式回调。延迟式回调通常牵扯到多线程，我自己还没有完全搞明白，所以这里就不多说了。</p>
<p>回调有三个部分组成：<strong>回调函数</strong>、<strong>中间函数</strong>和<strong>起始函数</strong><br>举个住旅馆叫醒服务的例子：<br>1.旅馆提供叫醒服务是起始函数<br>2.有三种叫醒旅客的方式：打电话叫、服务员敲门叫，在你头上浇盆水，这三种叫醒方式属于三种回调函数<br>3.旅客通知旅馆使用何种叫醒方式的动作，属于中间函数  </p>
<p>一、创建三种回调函数：<br>1.morning_call(me)<br>2.knocking_door(me)<br>3.watering_head(me)  </p>
<p>二、创建中间函数：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ask_for_wakeup</span><span class="params">(people, call_function)</span></span></div><div class="line"><span class="keyword">return</span> call_function(people)</div></pre></td></tr></table></figure></p>
<p>三、用起始函数（主函数）来做这件事情<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span></span>:</div><div class="line"><span class="keyword">return</span> ask_for_wakeup(<span class="string">'Antony'</span>, watering_head)</div></pre></td></tr></table></figure></p>
<p>酱紫，最后一部调用回调函数，又返回回调函数，最终得到结果</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shell实现web服务进程监控并自动重启]]></title>
      <url>/2017/02/09/shell-monitor/</url>
      <content type="html"><![CDATA[<h3 id="一、目的需求"><a href="#一、目的需求" class="headerlink" title="一、目的需求"></a>一、目的需求</h3><p>根据业务需要，目前负责维护的产品形式基本是属于分布式的，有多个web服务部署在不同项目现场，针对这些web服务的维护就成了比较麻烦的事情。为了保障系统服务，之前已经采用LNMP+zabbix的方案搭建了一套web服务监控系统，可以方便的查看各项目的web服务状态，方便及时发现问题并解决。<br>采用Grafana的前端监控界面（比zabbix自带的图表好看点 - -）：<br><img src="/2017/02/09/shell-monitor/1.png" alt="1.png" title=""> </p>
<p>不过虽然有zabbix贴心的监控和提醒（实际上由于网络不稳定或等等玄学因素，冗余警告非常多，多了就烦了。。。），但是解决具体问题还是需要远程到项目现场进行，特别是一些进程运行时间久了之后的异常，或者数据库连接异常断开等，简单重启一下web服务即可解决。但是，问题频繁了之后就很浪费时间了，于是打算通过shell来监控各项目地的web服务并实现异常自动重启，作为程序猿，当然要用代码来偷懒啦~（懒惰是三大生产力之一）</p>
<h3 id="二、分析过程"><a href="#二、分析过程" class="headerlink" title="二、分析过程"></a>二、分析过程</h3><p>思路如下：</p>
<p>1.定时执行monitor监控脚本，获取服务状态；</p>
<p>2.monitor功能：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>:web服务异常</div><div class="line"></div><div class="line">   restart web服务</div><div class="line"></div><div class="line"><span class="keyword">else</span>:皆大欢喜</div></pre></td></tr></table></figure></p>
<p>逻辑很简单清楚，貌似很容易，不过这里有一个问题，如何判定web服务异常？</p>
<p><strong>根据实际经验，异常常见原因共如下几种：</strong></p>
<p>1.web服务进程莫名挂掉；</p>
<p>2.web服务数据库连接失败，多次尝试后挂起；</p>
<p>3.项目地网络出现波动；（不用吐槽，教育网还有偏远地区是这样的，指不定哪天光纤被挖断或者交换机故障(╯▽╰)）</p>
<p><strong>对应解决方案：</strong></p>
<p>1.判断进程是否存在，不存在则重启web服务；</p>
<p>2.这个直接通过shell不好判断，借鉴了之前在zabbix做http监控时的方法，通过模拟登录的方式，登录一个测试页面，获取http_code，若200则正常，非200则属于异常。</p>
<p>3.这个可以通过判断本地服务，如果本地访问无问题则正常。</p>
<h3 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h3><p>monitor逻辑分析清楚了，可以开始进行了，其中模拟登录使用curl来获取http_code。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /bin/sh  </span></div><div class="line">  </div><div class="line">host_dir=<span class="string">"/opt/ybg/"</span>                                     <span class="comment"># 当前用户根目录  </span></div><div class="line">proc_name=<span class="string">"java"</span>                                        <span class="comment"># 进程名  </span></div><div class="line">file_name=<span class="string">"monitor.log"</span>                                <span class="comment"># 日志文件  </span></div><div class="line">pid=0  </div><div class="line">  </div><div class="line">proc_num()                                              <span class="comment"># 计算进程数  </span></div><div class="line">&#123;  </div><div class="line">    num=`ps -ef | grep <span class="variable">$proc_name</span> | grep -v grep | wc <span class="_">-l</span>`  </div><div class="line">    <span class="built_in">return</span> <span class="variable">$num</span>  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">proc_id()                                               <span class="comment"># 进程号  </span></div><div class="line">&#123;  </div><div class="line">    pid=`ps -ef | grep <span class="variable">$proc_name</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`  </div><div class="line">&#125;  </div><div class="line"><span class="comment"># 通过curl模拟登录获取http_code,模拟登录参数仅供参考</span></div><div class="line"><span class="comment"># 如果只需要判断某页面的状态可使用curl -I -s -w "%&#123;http_code&#125;" -o /dev/null http://www.baidu.com/ 直接获取即可</span></div><div class="line">http_code=`curl -I <span class="_">-s</span> -w <span class="string">"%&#123;http_code&#125;"</span> -o <span class="_">-d</span> <span class="string">"userKey=admin&amp;pass=c9127e832b41a"</span> /dev/null  http://portal.ly-sky.com/login.do?login= | head -n 1 | cut <span class="_">-d</span>$<span class="string">' '</span> <span class="_">-f</span>2`  </div><div class="line"></div><div class="line">proc_num  </div><div class="line">number=$?  </div><div class="line"><span class="keyword">if</span> [[ <span class="variable">$number</span> <span class="_">-eq</span> 0 ]]||[[ <span class="variable">$http_code</span> <span class="_">-ne</span> 200 ]]          <span class="comment"># 判断进程是否存在  </span></div><div class="line"><span class="keyword">then</span>   </div><div class="line">    <span class="built_in">cd</span> /opt/ybg/URP/bin/</div><div class="line">    nohup ./run.sh&gt;../logs/urp.log 2&gt;&amp;1 &amp;    <span class="comment"># 重启进程的命令，请相应修改  </span></div><div class="line">    sleep 3                                  <span class="comment">#延迟3秒是为了确保进程已正常启动并方便获取pid，否则有可能获取不到pid</span></div><div class="line">trueproc_id                                         <span class="comment"># 获取新进程号  </span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$pid</span>, `date` &gt;&gt; <span class="variable">$host_dir</span><span class="variable">$file_name</span>      <span class="comment"># 将新进程号和重启时间记录  </span></div><div class="line"><span class="keyword">fi</span> </div></pre></td></tr></table></figure></p>
<p>执行成功的日志记录：</p>
<p>记录了PID和启动时间，前面几条就是因为未加入sleep获取Pid失败，显示为空了</p>
<img src="/2017/02/09/shell-monitor/2.png" alt="2.png" title="">   
<h3 id="四、安装部署"><a href="#四、安装部署" class="headerlink" title="四、安装部署"></a>四、安装部署</h3><p>部署到服务器后只需要在crontab添加任务，定时执行就行了：</p>
<p>[root@localhost ybg]# crontab -e  </p>
<p>添加web服务监控，每5分钟一次，可根据实际要求修改监控频率.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*/5 * * * * /opt/monitor.sh</div></pre></td></tr></table></figure></p>
<p>添加完毕后，可以手动kill -9 pid来测试监控是否正常运行。提示：测试时注意生产环境哦，如果服务宕了被老板请去喝茶就不好啦~✧(≖ ◡ ≖✿)</p>
]]></content>
      
        <categories>
            
            <category> Shell </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git学习笔记]]></title>
      <url>/2016/11/12/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><strong>git命令：</strong></p>
<p>git add xxx 添加文件</p>
<p>git commit -m “Manual” 提交修改并添加说明，Manual对应本次修改的内容</p>
<p>git log –pretty=oneline 显示提交日志，完整版本号</p>
<p>git reflog 查看命令历史</p>
<p>git reset –hard HEAD^ 回到上一版本</p>
<p>git reset –hard cb926e7e 回到某一个版本</p>
<p>git diff 1.暂存区已有内容，对比工作区和暂存区的内容。2.暂存区无内容，对比工作区和master的内容。</p>
<p>git diff HEAD 对比master和工作区的区别</p>
<p><strong>修改撤回：</strong></p>
<p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout – file。</p>
<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。</p>
<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，可进行版本回退，不过前提是没有推送到远程库。</p>
<p><strong>添加远程库：</strong></p>
<p>git remote add origin git@server-name:path/repo-name.git 关联一个远程库</p>
<p>git push -u origin master 第一次推送master分支的所有内容</p>
<p>git push origin master 推送最新修改</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Beatiful Soup的效率问题]]></title>
      <url>/2016/10/29/Beatiful-Soup%E7%9A%84%E6%95%88%E7%8E%87%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>今天写爬虫的时候看bs4的官方文档，说使用lxml作为解析器比使用内置解析器速度快很多，于是写了个函数测试了一下，但不知道为什么，测试跑出来的结果刚好相反，暂时未找到原因，先做下记录后续继续研究。<br><img src="/2016/10/29/Beatiful-Soup的效率问题/1.png" alt="图 1" title="图 1"></p>
<p>测试代码如下：<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> bs4 import BeautifulSoup</div><div class="line">import <span class="built_in">time</span></div><div class="line"><span class="keyword">from</span> wswp.WebScraping import download</div><div class="line"></div><div class="line">def time_test():</div><div class="line">    FIELDS = (<span class="string">'area'</span>, <span class="string">'population'</span>, <span class="string">'iso'</span>, <span class="string">'country'</span>, <span class="string">'capital'</span>, <span class="string">'continent'</span>, <span class="string">'tld'</span>, <span class="string">'currency_code'</span>, <span class="string">'currency_name'</span>, <span class="string">'phone'</span>, <span class="string">'postal_code_format'</span>, <span class="string">'postal_code_regex'</span>, <span class="string">'languages'</span>,  <span class="string">'neighbours'</span>)</div><div class="line">    NUM_ITERATIONS = <span class="number">1000</span> <span class="meta"># number of times to test each scraper</span></div><div class="line">    html = download(<span class="string">'http://example.webscraping.com/view/Aland-Islands-2'</span>)</div><div class="line">    start = <span class="built_in">time</span>.<span class="built_in">time</span>()</div><div class="line">    <span class="keyword">for</span> <span class="built_in">name</span> <span class="built_in">in</span> [<span class="string">'html.parser'</span>, <span class="string">'lxml'</span>]:</div><div class="line">        <span class="keyword">for</span> i <span class="built_in">in</span> range(NUM_ITERATIONS):</div><div class="line">            result = &#123;&#125;</div><div class="line">            soup = BeautifulSoup(html, <span class="built_in">name</span>)</div><div class="line">            <span class="keyword">for</span> field <span class="built_in">in</span> FIELDS:</div><div class="line">                result[field]=soup.<span class="built_in">find</span>(<span class="string">'tr'</span>, id=<span class="string">'places_%s__row'</span> % field).<span class="built_in">find</span>(<span class="string">'td'</span>, class_=<span class="string">'w2p_fw'</span>).<span class="built_in">text</span></div><div class="line">            <span class="built_in">assert</span>(result[<span class="string">'area'</span>] == <span class="string">'1,580 square kilometres'</span>)</div><div class="line">        end = <span class="built_in">time</span>.<span class="built_in">time</span>()</div><div class="line">        print(<span class="string">'%s the time is: %.2f seconds'</span> % (<span class="built_in">name</span>, (end - start)))</div><div class="line"></div><div class="line">time_test()</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> BeatifulSoup </tag>
            
            <tag> lxml </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle索引原理]]></title>
      <url>/2016/10/14/oracle-index/index/</url>
      <content type="html"><![CDATA[<h3 id="B-TREE索引"><a href="#B-TREE索引" class="headerlink" title="B-TREE索引"></a>B-TREE索引</h3><p>一个B树索引只有一个根节点，它实际就是位于树的最顶端的分支节点。<br>可以用下图一来描述B树索引的结构。其中，B表示分支节点，而L表示叶子节点。<br><img src="/2016/10/14/oracle-index/index/1.jpg" alt="B-Tree Index" title="B-Tree Index">  </p>
<p>对于分支节点块（包括根节点块）来说，其所包含的索引条目都是按照顺序排列的（缺省是升序排列，也可以在创建索引时指定为降序排列）。每个索引条目（也可以叫做每条记录）都具有两个字段。第一个字段表示当前该分支节点块下面所链接的索引块中所包含的最小键值；第二个字段为四个字节，表示所链接的索引块的地址，该地址指向下面一个索引块。在一个分支节点块中所能容纳的记录行数由数据块大小以及索引键值的长度决定。比如从上图一可以看到，对于根节点块来说，包含三条记录，分别为（0 B1）、（500 B2）、（1000 B3），它们指向三个分支节点块。其中的0、500和1000分别表示这三个分支节点块所链接的键值的最小值。而B1、B2和B3则表示所指向的三个分支节点块的地址。</p>
<p>对于叶子节点块来说，其所包含的索引条目与分支节点一样，都是按照顺序排列的（缺省是升序排列，也可以在创建索引时指定为降序排列）。每个索引条目（也可以叫做每条记录）也具有两个字段。第一个字段表示索引的键值，对于单列索引来说是一个值；而对于多列索引来说则是多个值组合在一起的。第二个字段表示键值所对应的记录行的ROWID，该ROWID是记录行在表里的物理地址。如果索引是创建在非分区表上或者索引是分区表上的本地索引的话，则该ROWID占用6个字节；如果索引是创建在分区表上的全局索引的话，则该ROWID占用10个字节。</p>
<h3 id="bitmap索引"><a href="#bitmap索引" class="headerlink" title="bitmap索引"></a>bitmap索引</h3><p>位图（bitmap）索引是另外一种索引类型，它的组织形式与B树索引相同，也是一棵平衡树。与B树索引的区别在于叶子节点里存放索引条目的方式不同。从前面我们知道，B树索引的叶子节点里，对于表里的每个数据行，如果被索引列的值不为空的，则会为该记录行在叶子节点里维护一个对应的索引条目。而位图索引则不是这样，其叶子节点里存放的索引条目如下图所示。</p>
<p>假设某个表T里所有的记录在列C1上只具有三个值：01、02和03。在表T的C1列上创建位图索引以后，则叶子节点的内容如图9-14所示。可以看到，位图索引只有三个索引条目，也就是每个C1列的值对应一个索引条目。位图索引条目上还包含表里第一条记录所对应的ROWID以及最后一条记录所对应的ROWID。索引条目的最后一部分则是由多个bit位所组成的bitmap，每个bit位就对应一条记录。<br><img src="/2016/10/14/oracle-index/index/2.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<p>当发出where c1=’01’这样的SQL语句时，oracle会去搜索01所在的索引条目，然后扫描该索引条目中的bitmap里所有的bit位。第一个bit位为1，则说明第一条记录上的C1值为01，于是返回第一条记录所在的ROWID（根据该索引条目里记录的start ROWID加上行号得到该记录所在的ROWID）。第二个bit位为0，则说明第二条记录上的C1值不为01，依此类推。另外，如果索引列为空，也会在位图索引里记录，也就是将对应的bit位设置为0即可。</p>
<p>如果索引列上不同值的个数比较少的时候，比如对于性别列（男或女）等，则使用位图索引会比较好，因为它对空间的占用非常少（因为都是用bit位来表示表里的数据行），从而在扫描索引的时候，扫描的索引块的个数也比较少。可以试想一下，如果在列的不同值非常多的列上，比如主键列上，创建位图索引，则产生的索引条目就等于表里记录的条数，同时每个索引条目里的bitmap里，只有一个1，其它都是0。这样还不如B树索引的效率高。<br>如果被索引的列经常被更新的话，则不适合使用位图索引。因为当更新位图所在的列时，由于要在不同的索引条目之间修改bit位，比如将第一条记录从01变为02，则必须将01所在的索引条目的第一个bit位改为0，再将02所在的索引条目的第一个bit位改为1。因此，在更新索引条目的过程中，会锁定位图索引里多个索引条目。也就是同时只能有一个用户能够更新表T，从而降低了并发性。位图索引比较适合用在数据仓库系统里，不适合用在OLTP系统里。</p>
<h3 id="HASH索引"><a href="#HASH索引" class="headerlink" title="HASH索引"></a>HASH索引</h3><p>使用HASH索引必须要使用HASH集群。建立一个集群或HASH集群的同时，也就定义了一个集群键。这个键告诉Oracle如何在集群上存储表。在存储数据时，所有与这个集群键相关的行都被存储在一个数据库块上。如果数据都存储在同一个数据库块上，并且将HASH索引作为WHERE子句中的确切匹配，Oracle就可以通过执行一个HASH函数和I/O来访问数据– 而通过使用一个二元高度为4的B树索引来访问数据，则需要在检索数据时使用4个I/O。如图2-5所示，其中的查询是一个等价查询，用于匹配HASH列和确切的值。Oracle可以快速使用该值，基于HASH函数确定行的物理存储位置。</p>
<p>HASH索引可能是访问数据库中数据的最快方法，但它也有自身的缺点。集群键上不同值的数目必须在创建HASH集群之前就要知道。需要在创建HASH集群的时候指定这个值。低估了集群键的不同值的数字可能会造成集群的冲突(两个集群的键值拥有相同的HASH值)。这种冲突是非常消耗资源的。冲突会造成用来存储额外行的缓冲溢出，然后造成额外的I/O。如果不同HASH值的数目已经被低估，您就必须在重建这个集群之后改变这个值。ALTER CLUSTER命令不能改变HASH键的数目。</p>
<p>HASH集群还可能浪费空间。如果无法确定需要多少空间来维护某个集群键上的所有行，就可能造成空间的浪费。如果不能为集群的未来增长分配好附加的空间，HASH集群可能就不是最好的选择。</p>
<p>如果应用程序经常在集群表上进行全表扫描，HASH集群可能也不是最好的选择。由于需要为未来的增长分配好集群的剩余空间量，全表扫描可能非常消耗资源。<br><img src="/2016/10/14/oracle-index/index/3.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<p>在实现HASH集群之前一定要小心。您需要全面地观察应用程序，保证在实现这个选项之前已经了解关于表和数据的大量信息。通常，HASH对于一些包含有序值的静态数据非常有效。</p>
<p>技巧：</p>
<p>HASH索引在有限制条件(需要指定一个确定的值而不是一个值范围)的情况下非常有用。</p>
<h3 id="聚族索引"><a href="#聚族索引" class="headerlink" title="聚族索引"></a>聚族索引</h3><p>在这里还是用字典来进行类比，一般来说汉语字典中有几种索引，如拼音、偏旁、笔画等。字典本身的组织也是排序的，我记得一般是按照拼音排序的。这里的拼音就是聚族索引。也就是说聚族索引的组织顺序和数据本身的组织顺序是一致的 ，这也解释了数据库中只能定义一个聚族索引的原因，因为数据本身只能按一种方式进行排序。  </p>
<p>那聚族索引有什么特别的好处呢，这个好处就是在数据库中执行查找一批数据的语句会比较快，因为数据已经按照聚族索引排好序了，很少的io操作就可以将数据从库中取出。好比你在字典中查找发音从从a到c的汉字，只需要查到a的开始页和c的结束页，中间的所有页都符合查询要求，不用再一页一页地查找。<br><img src="/2016/10/14/oracle-index/index/4.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<h3 id="非聚族索引"><a href="#非聚族索引" class="headerlink" title="非聚族索引"></a>非聚族索引</h3><p>非聚族索引就好比字典里的偏旁、笔画索引，其 索引组织顺序和数据组织顺序不一致 ，因此非聚族索引可以创建多个。当查找一条数据时，非聚族索引和聚族索引的效率相差不大，但查找一批数据(n)时，非聚族索引需要的io可能是聚族索引的n倍，因为非聚族索引需要一条一条地进行查找。<br><img src="/2016/10/14/oracle-index/index/5.jpg" alt="B-Tree Index" title="B-Tree Index"> </p>
<p>原文地址：<a href="http://orange5458.iteye.com/blog/1165319" target="_blank" rel="external">http://orange5458.iteye.com/blog/1165319</a></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[oracle segmentation fault错误]]></title>
      <url>/2016/06/23/oracle-segmentation-fault%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天某客户现场反馈数据库无法连接，web服务无法正常访问，初步判断是数据库出现问题，远程登录oracle服务器准备进行检查。</p>
<p>根据经验，一般这种情况可能是监听有问题，准备查看下监听状态：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[oracle<span class="variable">@sysu</span> opt]<span class="variable">$ </span>lsnrctl status</div><div class="line">Segmentation fault</div></pre></td></tr></table></figure></p>
<p>一脸懵逼，“Segmentation fault”传说中的段错误，一种不祥的预感涌上心头，接下来看看数据库服务<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[oracle<span class="variable">@sysu</span> opt]<span class="variable">$ </span>sqlplus /nolog</div><div class="line"></div><div class="line">Segmentation fault</div></pre></td></tr></table></figure></p>
<p>what fu*k？！这下麻烦了，sqlplus没法用，好多事情就没法做了。。</p>
<h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h3><p>第一反应查看/opt/oracle/admin/orcl/bdump/alert_orcl.log日志文件，看了半天没发现什么重要的错误信息，这下只能借助搜索引擎看看了。</p>
<p>搜索出来的结果主要是这两种：</p>
<p>1.该报错信息是因为在/usr/bin目录下的gcc/g++ compilers是一个文件，引起了在link的时候错误编译</p>
<p>解决办法：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">　  <span class="number">1.</span> cd /usr/bin (as root)</div><div class="line"></div><div class="line">　　<span class="number">2.</span> mv gcc gcc.script</div><div class="line"></div><div class="line">　　<span class="number">3.</span> mv g++ g++.script</div><div class="line"></div><div class="line">　　<span class="number">4.</span> ln -s gcc32 gcc</div><div class="line"></div><div class="line">　　<span class="number">5.</span> ln -s g++<span class="number">32</span> g++</div><div class="line"></div><div class="line">　　<span class="number">6.</span> login as oracle software owner (make sure environment is correct)</div><div class="line"></div><div class="line">　　<span class="number">7.</span> cd $ORACLE_HOME/bin</div><div class="line"></div><div class="line">　　<span class="number">8.</span> relink all</div></pre></td></tr></table></figure></p>
<p>根据以上命令敲完之后，sqlplus还是不行，仍然是segmentation fault错误，后来又./relink all了下，shutdown -Fr now系统，系统起来之后，oracle已经启动了。</p>
<p>来源：<a href="http://blog.itpub.net/3090/viewspace-669836/" target="_blank" rel="external">http://blog.itpub.net/3090/viewspace-669836/</a></p>
<p>2.重新编译生成sqlplus</p>
<p>参考来源：<a href="http://www.askmaclean.com/archives/%E8%A7%A3%E5%86%B3sqlplus-segmentation-fault%E6%88%96hang%E9%97%AE%E9%A2%98.html" target="_blank" rel="external">http://www.askmaclean.com/archives/%E8%A7%A3%E5%86%B3sqlplus-segmentation-fault%E6%88%96hang%E9%97%AE%E9%A2%98.html</a></p>
<p>因为了解到服务器在出问题前升级过zlib,openssl-fips,openssh，怀疑是相关的软件更新导致该错误，隐约记得stackoverflow上有个类似问题是说过一些环境的update会导致这个错误。</p>
<h3 id="问题解决："><a href="#问题解决：" class="headerlink" title="问题解决："></a>问题解决：</h3><p>于是尝试使用方法1解决，其实是替换了gcc的版本，操作时发现未安装gcc32，于是通过yum进行安装，在yum源里查看其实是gcc34，记得切换root账户进行安装<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">compat-gcc-34-3</span><span class="selector-class">.4</span><span class="selector-class">.6-19</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span>      </div><div class="line"><span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">compat-gcc-34-c</span>++<span class="selector-tag">-3</span><span class="selector-class">.4</span><span class="selector-class">.6-19</span><span class="selector-class">.el6</span><span class="selector-class">.x86_64</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure></p>
<p>安装完成后，relink all 发现问题依旧，重启服务器，问题仍未解决。</p>
<p>无奈，采用方法2，发现根本无法成功生成，因为这个文件根本没找到</p>
<img src="/2016/06/23/oracle-segmentation-fault错误/1.png" alt="图 1" title="图 1">
<p>多方尝试未果，突然在一个帖子里看到同样问题的同学，最早几个回复都是提示环境变量是否正常，虽然该同学最终解决问题是通过重启服务器解决，不过也提供了思路，是否重启服务器后重置了环境变量然后恢复呢。</p>
<img src="/2016/06/23/oracle-segmentation-fault错误/2.png" alt="图 2" title="图 2">
<p>查看LD_LIBRARY_PATH环境变量，正常情况下这个应该是空值的，不过在这里发现是有值的：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[oracle@sysu ~]$ echo $LD_LIBRARY_PATH</div><div class="line">/usr/local/<span class="class"><span class="keyword">lib</span>:/<span class="title">usr</span>/<span class="title">lib</span>/<span class="title">oracle</span>/12.1/<span class="title">client64</span>/<span class="title">lib</span></span></div></pre></td></tr></table></figure></p>
<p>LD_LIBRARY_PATH环境变量主要是用于指定动态链接器（ld）查找ELF可执行文件运行时所依赖的动态库（so）的路径，其内容是以冒号分隔的路径列表。ld链接器将优先在该变量设置的路径中查找，若未找到则在标准库路径/lib和/usr/lib中继续搜索</p>
<p>于是尝试清空该变量中与oracle相关部分进行测试：</p>
<pre><code>[oracle@sysu ~]$ export LD_LIBRARY_PATH=/usr/local/lib
[oracle@sysu ~]$ sqlplus

SQL*Plus: Release 10.2.0.1.0 - Production on Mon Feb 20 12:40:36 2017

Copyright (c) 1982, 2005, Oracle.  All rights reserved.

Enter user-name:
</code></pre><p>确认问题原因就是$LD_LIBRARY_PATH环境变量问题，鉴于/usr/lib/oracle/12.1/client64/lib被移除后正常，于是将其mv到tmp下，以免再次影响。</p>
<p>顺利重启监听和数据库服务后，一切恢复正常！！</p>
<p>再次查看下$LD_LIBRARY_PATH环境变量，发现又重新生成了/usr/lib/oracle/12.1/client64/lib，不过这次数据库就已经正常了，猜测应该是oracle运行过程中自动生成，可能在升级软件过程中重新lib库里相关文件更新导致oracle无法正常运行，总之这个segmentation fault实在是磨人，异常的莫名其妙，连出错原因都很难查找。</p>
<p>在此记下该问题解决过程，也给其他同学带来一点借鉴！</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows及linux环境下永久修改pip镜像源的方法]]></title>
      <url>/2016/04/10/pip-source/</url>
      <content type="html"><![CDATA[<h4 id="一、在windows环境下修改pip镜像源的方法-以python3-5为例"><a href="#一、在windows环境下修改pip镜像源的方法-以python3-5为例" class="headerlink" title="一、在windows环境下修改pip镜像源的方法(以python3.5为例)"></a>一、在windows环境下修改pip镜像源的方法(以python3.5为例)</h4><p>(1):在windows文件管理器中,输入 %APPDATA%<br><img src="/2016/04/10/pip-source/1.jpg" alt="图 1" title="图 1"> </p>
<p>(2):会定位到一个新的目录下，在该目录下新建pip文件夹，然后到pip文件夹里面去新建个pip.ini文件<br><img src="/2016/04/10/pip-source/2.jpg" alt="图 2" title="图 2"> </p>
<p>(3):在新建的pip.ini文件中输入以下内容，搞定 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="keyword">global</span>]</div><div class="line">timeout = <span class="number">6000</span></div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>
<h4 id="二、在linux系统中更新pip源的方式-以centos-python2-7为例"><a href="#二、在linux系统中更新pip源的方式-以centos-python2-7为例" class="headerlink" title="二、在linux系统中更新pip源的方式(以centos,python2.7为例)"></a>二、在linux系统中更新pip源的方式(以centos,python2.7为例)</h4><p>在linux环境下的修改方式和在windows环境下修改方式基本相同，这里简单总结一下:</p>
<p>(1):在用户的根目录下面创建名为.pip文件夹</p>
<p>(2):在创建好的.pip文件夹中创建名为pip.conf的文件</p>
<p>(3):在pip.conf文件中输入以下内容，ok!!!</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="keyword">global</span>]</div><div class="line">timeout = <span class="number">6000</span></div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">trusted-host = pypi.douban.com</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle数据库文件迁移步骤]]></title>
      <url>/2015/11/23/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB%E6%AD%A5%E9%AA%A4/</url>
      <content type="html"><![CDATA[<p>根据实际需要，有时安装了oracle之后需要扩展磁盘空间时，往往是新增一个单独的文件路径并挂载存储，这时便需要整体迁移数据库文件</p>
<p><strong>（1）首先确认需要迁移的数据库文件</strong><br><figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">SQL&gt; select name from v<span class="formula">$controlfile;</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">NAME</div><div class="line"></div><div class="line">-----------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">CONTROL</span></span>01.CTL</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">CONTROL</span></span>02.CTL</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">SQL&gt; select name from v$datafile;</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">NAME</div><div class="line"></div><div class="line">-----------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">SYSTEM</span></span>01.DBF</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">SYSAUX</span></span>01.DBF</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">UNDOTBS</span></span>01.DBF</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">USERS</span></span>01.DBF</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">SQL&gt; select member from v<span class="formula">$logfile;</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">MEMBER</div><div class="line"></div><div class="line">---------------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">REDO</span></span>01.LOG</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">REDO</span></span>02.LOG</div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">REDO</span></span>03.LOG</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">SQL&gt; select name from v$tempfile;</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">NAME</div><div class="line"></div><div class="line">--------------------------------------</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">D:<span class="tag">\<span class="name">ORACLE</span></span><span class="tag">\<span class="name">ORADATA</span></span><span class="tag">\<span class="name">XSFREE</span></span><span class="tag">\<span class="name">TEMP</span></span>01.DBF</div></pre></td></tr></table></figure></p>
<p><strong>（2）创建pfile，备份spfile</strong><br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SQL&gt; create pfile from spfile<span class="comment">;</span></div><div class="line"></div><div class="line"><span class="keyword">move </span>SPFILEXSFREE.<span class="keyword">ORA </span>SPFILEXSFREE.<span class="keyword">ORA_bak</span></div></pre></td></tr></table></figure></p>
<p><strong>（3）关闭数据库</strong><br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SQL&gt; <span class="keyword">shutdown </span>immediate<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p><strong>（4）迁移数据库文件</strong></p>
<p>将D:\oracle\oradata下的文件复制到D:\oracle\oradata_bak下（本测试是将oradata目录下的数据库文件迁移至oradata_bak下）</p>
<p><strong>（5）修改pfile中控制文件路径</strong><br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*.control_files='D:<span class="symbol">\o</span>racle<span class="symbol">\o</span>radata_bak<span class="symbol">\x</span>sfree<span class="symbol">\c</span>ontrol01.ctl','D:<span class="symbol">\o</span>racle<span class="symbol">\o</span>radata_bak<span class="symbol">\x</span>sfree<span class="symbol">\c</span>ontrol02.ctl'</div></pre></td></tr></table></figure></p>
<p><strong>（6）rename文件</strong><br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">SQL&gt; startup mount pfile='D:<span class="symbol">\o</span>racle<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1<span class="symbol">\d</span>atabase<span class="symbol">\I</span>NITxsfree.ORA';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSTEM01.DBF'  to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSTEM01.DBF';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSAUX01.DBF'  to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\S</span>YSAUX01.DBF';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>NDOTBS01.DBF' to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>NDOTBS01.DBF';</div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>SERS01.DBF'   to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\U</span>SERS01.DBF'; </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO01.LOG'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO01.LOG'; </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO02.LOG'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO02.LOG';  </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO03.LOG'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\R</span>EDO03.LOG'; </div><div class="line"></div><div class="line">SQL&gt; alter database rename file 'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA<span class="symbol">\X</span>SFREE<span class="symbol">\T</span>EMP01.DBF'    to  'D:<span class="symbol">\O</span>RACLE<span class="symbol">\O</span>RADATA_BAK<span class="symbol">\X</span>SFREE<span class="symbol">\T</span>EMP01.DBF';</div></pre></td></tr></table></figure></p>
<p><strong>（7）打开数据库</strong><br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SQL&gt; alter database open;</div><div class="line"></div><div class="line">SQL&gt; create spfile from pfile='D:<span class="symbol">\o</span>racle<span class="symbol">\p</span>roduct<span class="symbol">\1</span>1.2.0<span class="symbol">\d</span>bhome_1<span class="symbol">\d</span>atabase<span class="symbol">\I</span>NITxsfree.ORA';</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux平台下的oracle自动备份案例(使用exp工具)]]></title>
      <url>/2015/10/23/oracle-exp/</url>
      <content type="html"><![CDATA[<h3 id="一、配置环境"><a href="#一、配置环境" class="headerlink" title="一、配置环境"></a>一、配置环境</h3><p>在服务器上安装oracle精简客户端，实现在备份服务器的定时整库备份。</p>
<p>服务器：备份服务器</p>
<p>操作系统：Linux Redhat6.3 x64</p>
<p>主要功能：在Linux备份服务器上完成数据库备份</p>
<h3 id="二、配置目标"><a href="#二、配置目标" class="headerlink" title="二、配置目标"></a>二、配置目标</h3><p>无需安装oracle服务器或客户端软件，达到能使用以下功能的目标，并在服务器上进行数据库备份： </p>
<ul>
<li>Ø oci、occi、jdbc的支持  </li>
<li>Ø tnsping</li>
<li>Ø sqlplus</li>
<li>Ø sqlldr</li>
<li>Ø exp</li>
<li>Ø imp </li>
</ul>
<h3 id="三、软件准备"><a href="#三、软件准备" class="headerlink" title="三、软件准备"></a>三、软件准备</h3><p>instantclient-basic-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>instantclient-jdbc-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>instantclient-sqlplus-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>instantclient-sdk-linux-x86-64-10.2.0.3-20070103.zip</p>
<p>exp.zip</p>
<h3 id="四、配置步骤"><a href="#四、配置步骤" class="headerlink" title="四、配置步骤"></a>四、配置步骤</h3><h4 id="1、安装包上传及安装"><a href="#1、安装包上传及安装" class="headerlink" title="1、安装包上传及安装"></a>1、安装包上传及安装</h4><p>root用户登录，创建目录：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> mkdir -p /opt/oracle</span></div></pre></td></tr></table></figure></p>
<p>将instantclient客户端压缩包上传至/opt/oracle/下，依次解压程序包<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># cd /opt/oracle</div><div class="line"></div><div class="line"># unzip instantclient-basic-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div><div class="line"></div><div class="line"># unzip instantclient-jdbc-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div><div class="line"></div><div class="line"># unzip instantclient-sdk-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div><div class="line"></div><div class="line"># unzip instantclient-sqlplus-linux-x86<span class="number">-64</span><span class="number">-10.2</span><span class="number">.0</span><span class="number">.3</span><span class="number">-20070103.</span>zip</div></pre></td></tr></table></figure></p>
<p>解压后，会在/opt/oracle下生成instantclient_11_2文件夹</p>
<p>上传exp.zip到/opt/oracle/instantclient_10_2下，将exp、imp程序解压到当前路径下  </p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> instantclient_10_2/</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> unzip exp.zip</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> chmod 755 imp</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> chmod 755 exp</span></div></pre></td></tr></table></figure>
<p>此时应新增出两个可执行文件和一个文件夹</p>
<h4 id="2、配置环境变量"><a href="#2、配置环境变量" class="headerlink" title="2、配置环境变量"></a>2、配置环境变量</h4><p>创建文件/opt/oracle/instantclient_10_2/tnsnames.ora<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi <span class="regexp">/opt/</span>oracle<span class="regexp">/instantclient_10_2/</span>tnsnames.ora</div></pre></td></tr></table></figure></p>
<p>在文件中填入以下内容，粗体部分根据实际情况修改</p>
<p>格式如下：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">ORCL =</div><div class="line"></div><div class="line">  (<span class="name">DESCRIPTION</span> =</div><div class="line"></div><div class="line">    (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = TCP)(<span class="name">HOST</span> = <span class="number">192.168</span>.<span class="number">5.22</span> )(<span class="name">PORT</span> = <span class="number">1521</span>))</div><div class="line"></div><div class="line">    (<span class="name">CONNECT_DATA</span> =</div><div class="line"></div><div class="line">      (<span class="name">SERVER</span> = DEDICATED)</div><div class="line"></div><div class="line">      (<span class="name">SERVICE_NAME</span> = orcl )</div><div class="line"></div><div class="line">    )</div><div class="line"></div><div class="line">  )</div><div class="line"> </div><div class="line"></div><div class="line">EXTPROC_CONNECTION_DATA =</div><div class="line"></div><div class="line">  (<span class="name">DESCRIPTION</span> =</div><div class="line"></div><div class="line">    (<span class="name">ADDRESS_LIST</span> =</div><div class="line"></div><div class="line">      (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = IPC)(<span class="name">KEY</span> = EXTPROC1))</div><div class="line"></div><div class="line">    )</div><div class="line"></div><div class="line">    (<span class="name">CONNECT_DATA</span> =</div><div class="line"></div><div class="line">      (<span class="name">SID</span> = PLSExtProc)</div><div class="line"></div><div class="line">      (<span class="name">PRESENTATION</span> = RO)</div><div class="line"></div><div class="line">    )</div><div class="line"></div><div class="line">  )</div></pre></td></tr></table></figure></p>
<p>打开/etc/profile文件，并在文件末尾添加以下环境变量<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> vi /etc/profile</span></div></pre></td></tr></table></figure></p>
<p>添加如下配置，粗体部分根据实际情况修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> NLS_LANG=AMERICAN_AMERICA.ZHS16GBK</div><div class="line"><span class="built_in">export</span> ORACLE_IC_HOME=/opt/oracle/instantclient_10_2</div><div class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_IC_HOME</span></div><div class="line"><span class="built_in">export</span> TNS_ADMIN=<span class="variable">$ORACLE_IC_HOME</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin:<span class="variable">$ORACLE_IC_HOME</span></div><div class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$ORACLE_IC_HOME</span>:/usr/lib</div><div class="line"><span class="built_in">export</span> ORACLE_SID=orcl</div></pre></td></tr></table></figure></p>
<p>输入命令使环境变量立即生效<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></div></pre></td></tr></table></figure></p>
<p>查看环境变量是否成功，出现下图所示路径即为成功，否则检查环境变量设置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$ORACLE_HOME</span></span></div></pre></td></tr></table></figure></p>
<p>测试sqlplus和exp命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> sqlplus</span></div></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> exp</span></div></pre></td></tr></table></figure>
<p>出现如图所示时即表明配置成功，可正常使用；注意此时若出现报错，回头检查环境变量是否设置正确！</p>
<h4 id="3、配置备份脚本"><a href="#3、配置备份脚本" class="headerlink" title="3、配置备份脚本"></a>3、配置备份脚本</h4><p>创建备份用的文件夹<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> mkdir -p  /opt/bak</span></div></pre></td></tr></table></figure></p>
<p>创建备份脚本并添加以下内容：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># <span class="keyword">vi</span> /<span class="keyword">opt</span>/bak/bak.<span class="keyword">sh</span></div></pre></td></tr></table></figure></p>
<p>添加内容，注意修改红色部分数据库连接地址和账号：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#bak.sh</span></div><div class="line"></div><div class="line"><span class="built_in">source</span> /etc/profile</div><div class="line"></div><div class="line">PATH=<span class="variable">$PATH</span>:/bin</div><div class="line"></div><div class="line"><span class="built_in">export</span> PATH</div><div class="line"></div><div class="line">BAKPATH=/opt/bak</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">LogFile=/opt/bak/baklog.log</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"-------------------------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> $(date +<span class="string">"%y-%m-%d %H:%M:%S"</span>) &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"--------------------------"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line">rq=`date <span class="string">'+%Y%m%d'</span>`</div><div class="line"></div><div class="line">exp user/pass@ORCL file=<span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp  <span class="built_in">log</span>=<span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.log  owner=user&gt;/dev/null 2&gt;&amp;1</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line"><span class="keyword">if</span> [  <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp ]</div><div class="line"></div><div class="line"><span class="keyword">then</span></div><div class="line"></div><div class="line">tar zcvf  <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.tar.gz  <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.log&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line">rm <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.dmp&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line">rm <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$rq</span>.log&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line"> <span class="built_in">echo</span> <span class="string">"backup success"</span>&gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"> <span class="built_in">echo</span> <span class="string">"backup success"</span></div><div class="line"></div><div class="line"><span class="keyword">else</span>   <span class="built_in">echo</span> <span class="string">"backup fail"</span>&gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"> <span class="built_in">echo</span> <span class="string">"backup fail"</span></div><div class="line"></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">OLDFILE=`date +%Y%m%d --date=<span class="string">'7 day ago'</span>`</div><div class="line"></div><div class="line"><span class="keyword">if</span> [  <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$OLDFILE</span>.tar.gz ]</div><div class="line"></div><div class="line"><span class="keyword">then</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"DELETE OLDFILE bak_<span class="variable">$OLDFILE</span>.tar.gz"</span> &gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line">rm <span class="_">-f</span> <span class="variable">$BAKPATH</span>/bak_<span class="variable">$OLDFILE</span>.tar.gz&gt;&gt; <span class="variable">$LogFile</span> 2&gt;&amp;1</div><div class="line"></div><div class="line"><span class="keyword">else</span>   <span class="built_in">echo</span> <span class="string">"no OLDFILE bak_<span class="variable">$OLDFILE</span>.tar.gz  "</span>&gt;&gt; <span class="variable">$LogFile</span></div><div class="line"></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"-------end <span class="variable">$(date +"%y-%m-%d %H:%M:%S")</span>-------"</span> &gt;&gt; <span class="variable">$LogFile</span></div></pre></td></tr></table></figure>
<p>保存退出。</p>
<p>修改权限<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> chmod 755 /opt/bak/bak.sh</span></div></pre></td></tr></table></figure></p>
<p>手动执行脚本，确认脚本执行无误<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> /opt/bak/</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> ./bak.sh</span></div></pre></td></tr></table></figure></p>
<h4 id="4、设置定时调度任务"><a href="#4、设置定时调度任务" class="headerlink" title="4、设置定时调度任务"></a>4、设置定时调度任务</h4><p>输入命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> crontab <span class="_">-e</span></span></div></pre></td></tr></table></figure></p>
<p>编辑文本，加入以下代码，每天凌晨四点进行数据备份：<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">0 </span><span class="number">4</span> * * * /opt/bak/bak.sh</div></pre></td></tr></table></figure></p>
<p>保存退出。</p>
]]></content>
      
        <categories>
            
            <category> Oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
